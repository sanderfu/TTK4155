
byggern.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000018e  00800100  00001558  000015ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001558  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  0080028e  0080028e  0000177a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000177a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000017d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000160  00000000  00000000  00001814  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012c6  00000000  00000000  00001974  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d20  00000000  00000000  00002c3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a1a  00000000  00000000  0000395a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000368  00000000  00000000  00004374  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000637  00000000  00000000  000046dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000076f  00000000  00000000  00004d13  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000110  00000000  00000000  00005482  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__ctors_end>
       4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
       8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
       c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      10:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      14:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      18:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      1c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      20:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      24:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      28:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      2c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      30:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      34:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      38:	0c 94 ff 00 	jmp	0x1fe	; 0x1fe <__vector_14>
      3c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      40:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      44:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      48:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      4c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      50:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      54:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      58:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      5c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      60:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      64:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      68:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      6c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      70:	08 4a       	sbci	r16, 0xA8	; 168
      72:	d7 3b       	cpi	r29, 0xB7	; 183
      74:	3b ce       	rjmp	.-906    	; 0xfffffcec <__eeprom_end+0xff7efcec>
      76:	01 6e       	ori	r16, 0xE1	; 225
      78:	84 bc       	out	0x24, r8	; 36
      7a:	bf fd       	.word	0xfdbf	; ????
      7c:	c1 2f       	mov	r28, r17
      7e:	3d 6c       	ori	r19, 0xCD	; 205
      80:	74 31       	cpi	r23, 0x14	; 20
      82:	9a bd       	out	0x2a, r25	; 42
      84:	56 83       	std	Z+6, r21	; 0x06
      86:	3d da       	rcall	.-2950   	; 0xfffff502 <__eeprom_end+0xff7ef502>
      88:	3d 00       	.word	0x003d	; ????
      8a:	c7 7f       	andi	r28, 0xF7	; 247
      8c:	11 be       	out	0x31, r1	; 49
      8e:	d9 e4       	ldi	r29, 0x49	; 73
      90:	bb 4c       	sbci	r27, 0xCB	; 203
      92:	3e 91       	ld	r19, -X
      94:	6b aa       	std	Y+51, r6	; 0x33
      96:	aa be       	out	0x3a, r10	; 58
      98:	00 00       	nop
      9a:	00 80       	ld	r0, Z
      9c:	3f 00       	.word	0x003f	; ????

0000009e <__ctors_end>:
      9e:	11 24       	eor	r1, r1
      a0:	1f be       	out	0x3f, r1	; 63
      a2:	cf ef       	ldi	r28, 0xFF	; 255
      a4:	d4 e0       	ldi	r29, 0x04	; 4
      a6:	de bf       	out	0x3e, r29	; 62
      a8:	cd bf       	out	0x3d, r28	; 61

000000aa <__do_copy_data>:
      aa:	12 e0       	ldi	r17, 0x02	; 2
      ac:	a0 e0       	ldi	r26, 0x00	; 0
      ae:	b1 e0       	ldi	r27, 0x01	; 1
      b0:	e8 e5       	ldi	r30, 0x58	; 88
      b2:	f5 e1       	ldi	r31, 0x15	; 21
      b4:	02 c0       	rjmp	.+4      	; 0xba <__do_copy_data+0x10>
      b6:	05 90       	lpm	r0, Z+
      b8:	0d 92       	st	X+, r0
      ba:	ae 38       	cpi	r26, 0x8E	; 142
      bc:	b1 07       	cpc	r27, r17
      be:	d9 f7       	brne	.-10     	; 0xb6 <__do_copy_data+0xc>

000000c0 <__do_clear_bss>:
      c0:	22 e0       	ldi	r18, 0x02	; 2
      c2:	ae e8       	ldi	r26, 0x8E	; 142
      c4:	b2 e0       	ldi	r27, 0x02	; 2
      c6:	01 c0       	rjmp	.+2      	; 0xca <.do_clear_bss_start>

000000c8 <.do_clear_bss_loop>:
      c8:	1d 92       	st	X+, r1

000000ca <.do_clear_bss_start>:
      ca:	a4 3a       	cpi	r26, 0xA4	; 164
      cc:	b2 07       	cpc	r27, r18
      ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
      d0:	0e 94 3f 01 	call	0x27e	; 0x27e <main>
      d4:	0c 94 aa 0a 	jmp	0x1554	; 0x1554 <_exit>

000000d8 <__bad_interrupt>:
      d8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000dc <adcInit>:



void adcInit(void) {
	
	DDRE &= ~(1<<PINE0);
      dc:	30 98       	cbi	0x06, 0	; 6
      de:	08 95       	ret

000000e0 <readAdc>:

 
uint8_t readAdc(uint8_t channel){ //for ch1 channel = 0;
	volatile char * adc = (char *) 0x1400;
	
	*adc = 0x04 | channel;
      e0:	84 60       	ori	r24, 0x04	; 4
      e2:	80 93 00 14 	sts	0x1400, r24	; 0x801400 <__bss_end+0x115c>
	

	while (test_bit(PINE, PINE0)) {
      e6:	28 99       	sbic	0x05, 0	; 5
      e8:	fe cf       	rjmp	.-4      	; 0xe6 <readAdc+0x6>

	}
	
	return *adc;
      ea:	80 91 00 14 	lds	r24, 0x1400	; 0x801400 <__bss_end+0x115c>
      ee:	08 95       	ret

000000f0 <SRAM_test>:
	joystick_readPosition(&joystick_pos);
	slider_readPosition(&slider_pos);
	touchButton_readButtons(&buttons);
	sei();
}
void timer_init() {
      f0:	cf 92       	push	r12
      f2:	df 92       	push	r13
      f4:	ef 92       	push	r14
      f6:	ff 92       	push	r15
      f8:	0f 93       	push	r16
      fa:	1f 93       	push	r17
      fc:	cf 93       	push	r28
      fe:	df 93       	push	r29
     100:	8a e0       	ldi	r24, 0x0A	; 10
     102:	91 e0       	ldi	r25, 0x01	; 1
     104:	9f 93       	push	r25
     106:	8f 93       	push	r24
     108:	0e 94 25 06 	call	0xc4a	; 0xc4a <printf>
     10c:	0e 94 ca 05 	call	0xb94	; 0xb94 <rand>
     110:	7c 01       	movw	r14, r24
     112:	0e 94 cf 05 	call	0xb9e	; 0xb9e <srand>
     116:	0f 90       	pop	r0
     118:	0f 90       	pop	r0
     11a:	c1 2c       	mov	r12, r1
     11c:	d1 2c       	mov	r13, r1
     11e:	00 e0       	ldi	r16, 0x00	; 0
     120:	10 e0       	ldi	r17, 0x00	; 0
     122:	c2 e2       	ldi	r28, 0x22	; 34
     124:	d1 e0       	ldi	r29, 0x01	; 1
     126:	0e 94 ca 05 	call	0xb94	; 0xb94 <rand>
     12a:	f6 01       	movw	r30, r12
     12c:	f8 5e       	subi	r31, 0xE8	; 232
     12e:	80 83       	st	Z, r24
     130:	20 81       	ld	r18, Z
     132:	28 17       	cp	r18, r24
     134:	a9 f0       	breq	.+42     	; 0x160 <SRAM_test+0x70>
     136:	99 27       	eor	r25, r25
     138:	9f 93       	push	r25
     13a:	8f 93       	push	r24
     13c:	1f 92       	push	r1
     13e:	2f 93       	push	r18
     140:	df 92       	push	r13
     142:	cf 92       	push	r12
     144:	df 93       	push	r29
     146:	cf 93       	push	r28
     148:	0e 94 25 06 	call	0xc4a	; 0xc4a <printf>
     14c:	0f 5f       	subi	r16, 0xFF	; 255
     14e:	1f 4f       	sbci	r17, 0xFF	; 255
     150:	8d b7       	in	r24, 0x3d	; 61
     152:	9e b7       	in	r25, 0x3e	; 62
     154:	08 96       	adiw	r24, 0x08	; 8
     156:	0f b6       	in	r0, 0x3f	; 63
     158:	f8 94       	cli
     15a:	9e bf       	out	0x3e, r25	; 62
     15c:	0f be       	out	0x3f, r0	; 63
     15e:	8d bf       	out	0x3d, r24	; 61
     160:	9f ef       	ldi	r25, 0xFF	; 255
     162:	c9 1a       	sub	r12, r25
     164:	d9 0a       	sbc	r13, r25
     166:	c1 14       	cp	r12, r1
     168:	88 e0       	ldi	r24, 0x08	; 8
     16a:	d8 06       	cpc	r13, r24
     16c:	e1 f6       	brne	.-72     	; 0x126 <SRAM_test+0x36>
     16e:	c7 01       	movw	r24, r14
     170:	0e 94 cf 05 	call	0xb9e	; 0xb9e <srand>
     174:	c0 e0       	ldi	r28, 0x00	; 0
     176:	d0 e0       	ldi	r29, 0x00	; 0
     178:	e1 2c       	mov	r14, r1
     17a:	f1 2c       	mov	r15, r1
     17c:	0f 2e       	mov	r0, r31
     17e:	fc e5       	ldi	r31, 0x5C	; 92
     180:	cf 2e       	mov	r12, r31
     182:	f1 e0       	ldi	r31, 0x01	; 1
     184:	df 2e       	mov	r13, r31
     186:	f0 2d       	mov	r31, r0
     188:	0e 94 ca 05 	call	0xb94	; 0xb94 <rand>
     18c:	fe 01       	movw	r30, r28
     18e:	f8 5e       	subi	r31, 0xE8	; 232
     190:	20 81       	ld	r18, Z
     192:	28 17       	cp	r18, r24
     194:	b1 f0       	breq	.+44     	; 0x1c2 <SRAM_test+0xd2>
     196:	99 27       	eor	r25, r25
     198:	9f 93       	push	r25
     19a:	8f 93       	push	r24
     19c:	1f 92       	push	r1
     19e:	2f 93       	push	r18
     1a0:	df 93       	push	r29
     1a2:	cf 93       	push	r28
     1a4:	df 92       	push	r13
     1a6:	cf 92       	push	r12
     1a8:	0e 94 25 06 	call	0xc4a	; 0xc4a <printf>
     1ac:	9f ef       	ldi	r25, 0xFF	; 255
     1ae:	e9 1a       	sub	r14, r25
     1b0:	f9 0a       	sbc	r15, r25
     1b2:	8d b7       	in	r24, 0x3d	; 61
     1b4:	9e b7       	in	r25, 0x3e	; 62
     1b6:	08 96       	adiw	r24, 0x08	; 8
     1b8:	0f b6       	in	r0, 0x3f	; 63
     1ba:	f8 94       	cli
     1bc:	9e bf       	out	0x3e, r25	; 62
     1be:	0f be       	out	0x3f, r0	; 63
     1c0:	8d bf       	out	0x3d, r24	; 61
     1c2:	21 96       	adiw	r28, 0x01	; 1
     1c4:	c1 15       	cp	r28, r1
     1c6:	98 e0       	ldi	r25, 0x08	; 8
     1c8:	d9 07       	cpc	r29, r25
     1ca:	f1 f6       	brne	.-68     	; 0x188 <SRAM_test+0x98>
     1cc:	ff 92       	push	r15
     1ce:	ef 92       	push	r14
     1d0:	1f 93       	push	r17
     1d2:	0f 93       	push	r16
     1d4:	8a e9       	ldi	r24, 0x9A	; 154
     1d6:	91 e0       	ldi	r25, 0x01	; 1
     1d8:	9f 93       	push	r25
     1da:	8f 93       	push	r24
     1dc:	0e 94 25 06 	call	0xc4a	; 0xc4a <printf>
     1e0:	0f 90       	pop	r0
     1e2:	0f 90       	pop	r0
     1e4:	0f 90       	pop	r0
     1e6:	0f 90       	pop	r0
     1e8:	0f 90       	pop	r0
     1ea:	0f 90       	pop	r0
     1ec:	df 91       	pop	r29
     1ee:	cf 91       	pop	r28
     1f0:	1f 91       	pop	r17
     1f2:	0f 91       	pop	r16
     1f4:	ff 90       	pop	r15
     1f6:	ef 90       	pop	r14
     1f8:	df 90       	pop	r13
     1fa:	cf 90       	pop	r12
     1fc:	08 95       	ret

000001fe <__vector_14>:
     1fe:	1f 92       	push	r1
     200:	0f 92       	push	r0
     202:	0f b6       	in	r0, 0x3f	; 63
     204:	0f 92       	push	r0
     206:	11 24       	eor	r1, r1
     208:	2f 93       	push	r18
     20a:	3f 93       	push	r19
     20c:	4f 93       	push	r20
     20e:	5f 93       	push	r21
     210:	6f 93       	push	r22
     212:	7f 93       	push	r23
     214:	8f 93       	push	r24
     216:	9f 93       	push	r25
     218:	af 93       	push	r26
     21a:	bf 93       	push	r27
     21c:	ef 93       	push	r30
     21e:	ff 93       	push	r31
     220:	f8 94       	cli
     222:	1d bc       	out	0x2d, r1	; 45
     224:	1c bc       	out	0x2c, r1	; 44
     226:	8c b5       	in	r24, 0x2c	; 44
     228:	9d b5       	in	r25, 0x2d	; 45
     22a:	9f 93       	push	r25
     22c:	8f 93       	push	r24
     22e:	85 ef       	ldi	r24, 0xF5	; 245
     230:	91 e0       	ldi	r25, 0x01	; 1
     232:	9f 93       	push	r25
     234:	8f 93       	push	r24
     236:	0e 94 25 06 	call	0xc4a	; 0xc4a <printf>
     23a:	8e e8       	ldi	r24, 0x8E	; 142
     23c:	92 e0       	ldi	r25, 0x02	; 2
     23e:	0e 94 b4 01 	call	0x368	; 0x368 <joystick_readPosition>
     242:	84 e9       	ldi	r24, 0x94	; 148
     244:	92 e0       	ldi	r25, 0x02	; 2
     246:	0e 94 51 02 	call	0x4a2	; 0x4a2 <slider_readPosition>
     24a:	82 e9       	ldi	r24, 0x92	; 146
     24c:	92 e0       	ldi	r25, 0x02	; 2
     24e:	0e 94 78 02 	call	0x4f0	; 0x4f0 <touchButton_readButtons>
     252:	78 94       	sei
     254:	0f 90       	pop	r0
     256:	0f 90       	pop	r0
     258:	0f 90       	pop	r0
     25a:	0f 90       	pop	r0
     25c:	ff 91       	pop	r31
     25e:	ef 91       	pop	r30
     260:	bf 91       	pop	r27
     262:	af 91       	pop	r26
     264:	9f 91       	pop	r25
     266:	8f 91       	pop	r24
     268:	7f 91       	pop	r23
     26a:	6f 91       	pop	r22
     26c:	5f 91       	pop	r21
     26e:	4f 91       	pop	r20
     270:	3f 91       	pop	r19
     272:	2f 91       	pop	r18
     274:	0f 90       	pop	r0
     276:	0f be       	out	0x3f, r0	; 63
     278:	0f 90       	pop	r0
     27a:	1f 90       	pop	r1
     27c:	18 95       	reti

0000027e <main>:
	
}
int main(void)
{
	//DDRB &= ~(1 << BUTTON_LEFT | 1 << BUTTON_RIGHT);
	setupInit();
     27e:	0e 94 44 02 	call	0x488	; 0x488 <setupInit>
	SRAM_test();
     282:	0e 94 78 00 	call	0xf0	; 0xf0 <SRAM_test>
	printf("Hello, world!\n\r");
     286:	8b e0       	ldi	r24, 0x0B	; 11
     288:	92 e0       	ldi	r25, 0x02	; 2
     28a:	9f 93       	push	r25
     28c:	8f 93       	push	r24
     28e:	0e 94 25 06 	call	0xc4a	; 0xc4a <printf>
	
	
	//Enable interrupt from timer
	
	//Disable global interrupts
	cli();
     292:	f8 94       	cli
	
	//enable timer 0
	TIMSK |= (1 << OCIE1B);
     294:	89 b7       	in	r24, 0x39	; 57
     296:	80 62       	ori	r24, 0x20	; 32
     298:	89 bf       	out	0x39, r24	; 57

	
	//Setup code here for timer interrupt
	TCNT1 = 0x00;
     29a:	1d bc       	out	0x2d, r1	; 45
     29c:	1c bc       	out	0x2c, r1	; 44
	TCCR1A = (1 << COM1B0 | 1 << COM1B1);
     29e:	80 e3       	ldi	r24, 0x30	; 48
     2a0:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = (1 << CS12 | 1 << CS00);
     2a2:	85 e0       	ldi	r24, 0x05	; 5
     2a4:	8e bd       	out	0x2e, r24	; 46
	
	OCR1B = TIMER_RESET;
     2a6:	80 ef       	ldi	r24, 0xF0	; 240
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	99 bd       	out	0x29, r25	; 41
     2ac:	88 bd       	out	0x28, r24	; 40
	
	//Enable global interrupts
	sei();
     2ae:	78 94       	sei
	printf("Timer initialized");
     2b0:	8b e1       	ldi	r24, 0x1B	; 27
     2b2:	92 e0       	ldi	r25, 0x02	; 2
     2b4:	9f 93       	push	r25
     2b6:	8f 93       	push	r24
     2b8:	0e 94 25 06 	call	0xc4a	; 0xc4a <printf>
     2bc:	0f 90       	pop	r0
     2be:	0f 90       	pop	r0
     2c0:	0f 90       	pop	r0
     2c2:	0f 90       	pop	r0
		//cli();
		//TCNT1 = 0x4444;
		//printf("Timer: %i\n\r", TCNT1);
		//sei();
		//clear terminal
		printf("\033\143");
     2c4:	0f 2e       	mov	r0, r31
     2c6:	fd e2       	ldi	r31, 0x2D	; 45
     2c8:	af 2e       	mov	r10, r31
     2ca:	f2 e0       	ldi	r31, 0x02	; 2
     2cc:	bf 2e       	mov	r11, r31
     2ce:	f0 2d       	mov	r31, r0
		//joystick_printDirection(joystick_getDirection(&joystick_pos));
		//printf("Slider left: %i\tSlider right: %i\n\r", slider_pos.left_pos, slider_pos.right_pos);
		//printf("Button left: %i \tButton right: %i\n\r", buttons.left_button, buttons.right_button);
		//printf("Angle: %i\n\r", joystick_pos.angle);
		
		printf("x: %i\ty: %i\n\rSlider left: %i\tSlider right: %i\n\rButton left: %i \tButton right: %i\n\rAngle: %i\n\r", joystick_pos.x_pos, joystick_pos.y_pos, slider_pos.left_pos, slider_pos.right_pos,  buttons.left_button, buttons.right_button, joystick_pos.angle);	
     2d0:	ce e8       	ldi	r28, 0x8E	; 142
     2d2:	d2 e0       	ldi	r29, 0x02	; 2
     2d4:	0f 2e       	mov	r0, r31
     2d6:	f2 e9       	ldi	r31, 0x92	; 146
     2d8:	cf 2e       	mov	r12, r31
     2da:	f2 e0       	ldi	r31, 0x02	; 2
     2dc:	df 2e       	mov	r13, r31
     2de:	f0 2d       	mov	r31, r0
     2e0:	0f 2e       	mov	r0, r31
     2e2:	f4 e9       	ldi	r31, 0x94	; 148
     2e4:	ef 2e       	mov	r14, r31
     2e6:	f2 e0       	ldi	r31, 0x02	; 2
     2e8:	ff 2e       	mov	r15, r31
     2ea:	f0 2d       	mov	r31, r0
     2ec:	00 e3       	ldi	r16, 0x30	; 48
     2ee:	12 e0       	ldi	r17, 0x02	; 2
		//cli();
		//TCNT1 = 0x4444;
		//printf("Timer: %i\n\r", TCNT1);
		//sei();
		//clear terminal
		printf("\033\143");
     2f0:	bf 92       	push	r11
     2f2:	af 92       	push	r10
     2f4:	0e 94 25 06 	call	0xc4a	; 0xc4a <printf>
		//joystick_printDirection(joystick_getDirection(&joystick_pos));
		//printf("Slider left: %i\tSlider right: %i\n\r", slider_pos.left_pos, slider_pos.right_pos);
		//printf("Button left: %i \tButton right: %i\n\r", buttons.left_button, buttons.right_button);
		//printf("Angle: %i\n\r", joystick_pos.angle);
		
		printf("x: %i\ty: %i\n\rSlider left: %i\tSlider right: %i\n\rButton left: %i \tButton right: %i\n\rAngle: %i\n\r", joystick_pos.x_pos, joystick_pos.y_pos, slider_pos.left_pos, slider_pos.right_pos,  buttons.left_button, buttons.right_button, joystick_pos.angle);	
     2f8:	8b 81       	ldd	r24, Y+3	; 0x03
     2fa:	8f 93       	push	r24
     2fc:	8a 81       	ldd	r24, Y+2	; 0x02
     2fe:	8f 93       	push	r24
     300:	f6 01       	movw	r30, r12
     302:	81 81       	ldd	r24, Z+1	; 0x01
     304:	1f 92       	push	r1
     306:	8f 93       	push	r24
     308:	80 81       	ld	r24, Z
     30a:	1f 92       	push	r1
     30c:	8f 93       	push	r24
     30e:	f7 01       	movw	r30, r14
     310:	81 81       	ldd	r24, Z+1	; 0x01
     312:	1f 92       	push	r1
     314:	8f 93       	push	r24
     316:	80 81       	ld	r24, Z
     318:	1f 92       	push	r1
     31a:	8f 93       	push	r24
     31c:	89 81       	ldd	r24, Y+1	; 0x01
     31e:	28 2f       	mov	r18, r24
     320:	08 2e       	mov	r0, r24
     322:	00 0c       	add	r0, r0
     324:	33 0b       	sbc	r19, r19
     326:	3f 93       	push	r19
     328:	8f 93       	push	r24
     32a:	88 81       	ld	r24, Y
     32c:	28 2f       	mov	r18, r24
     32e:	08 2e       	mov	r0, r24
     330:	00 0c       	add	r0, r0
     332:	33 0b       	sbc	r19, r19
     334:	3f 93       	push	r19
     336:	8f 93       	push	r24
     338:	1f 93       	push	r17
     33a:	0f 93       	push	r16
     33c:	0e 94 25 06 	call	0xc4a	; 0xc4a <printf>
     340:	8d b7       	in	r24, 0x3d	; 61
     342:	9e b7       	in	r25, 0x3e	; 62
     344:	42 96       	adiw	r24, 0x12	; 18
     346:	0f b6       	in	r0, 0x3f	; 63
     348:	f8 94       	cli
     34a:	9e bf       	out	0x3e, r25	; 62
     34c:	0f be       	out	0x3f, r0	; 63
     34e:	8d bf       	out	0x3d, r24	; 61
     350:	cf cf       	rjmp	.-98     	; 0x2f0 <main+0x72>

00000352 <joystickInit>:
uint8_t joystickOffsetX;
uint8_t joystickOffsetY;


void joystickInit() {
	joystickOffsetX = readAdc(X_POS_CHANNEL);
     352:	80 e0       	ldi	r24, 0x00	; 0
     354:	0e 94 70 00 	call	0xe0	; 0xe0 <readAdc>
     358:	80 93 97 02 	sts	0x0297, r24	; 0x800297 <joystickOffsetX>
	joystickOffsetY = readAdc(Y_POS_CHANNEL);
     35c:	81 e0       	ldi	r24, 0x01	; 1
     35e:	0e 94 70 00 	call	0xe0	; 0xe0 <readAdc>
     362:	80 93 96 02 	sts	0x0296, r24	; 0x800296 <joystickOffsetY>
     366:	08 95       	ret

00000368 <joystick_readPosition>:
}
void joystick_readPosition(joystick_position_t * pos) {
     368:	cf 92       	push	r12
     36a:	df 92       	push	r13
     36c:	ef 92       	push	r14
     36e:	ff 92       	push	r15
     370:	1f 93       	push	r17
     372:	cf 93       	push	r28
     374:	df 93       	push	r29
     376:	ec 01       	movw	r28, r24
	uint8_t x_pos = readAdc(X_POS_CHANNEL);
     378:	80 e0       	ldi	r24, 0x00	; 0
     37a:	0e 94 70 00 	call	0xe0	; 0xe0 <readAdc>
     37e:	18 2f       	mov	r17, r24
	uint8_t y_pos = readAdc(Y_POS_CHANNEL);
     380:	81 e0       	ldi	r24, 0x01	; 1
     382:	0e 94 70 00 	call	0xe0	; 0xe0 <readAdc>
     386:	e8 2f       	mov	r30, r24
	if (x_pos < joystickOffsetX) {
     388:	60 91 97 02 	lds	r22, 0x0297	; 0x800297 <joystickOffsetX>
     38c:	16 17       	cp	r17, r22
     38e:	78 f4       	brcc	.+30     	; 0x3ae <joystick_readPosition+0x46>
		pos->x_pos = ((x_pos - joystickOffsetX)*100)/(joystickOffsetX);
     390:	70 e0       	ldi	r23, 0x00	; 0
     392:	21 2f       	mov	r18, r17
     394:	30 e0       	ldi	r19, 0x00	; 0
     396:	26 1b       	sub	r18, r22
     398:	37 0b       	sbc	r19, r23
     39a:	44 e6       	ldi	r20, 0x64	; 100
     39c:	42 9f       	mul	r20, r18
     39e:	c0 01       	movw	r24, r0
     3a0:	43 9f       	mul	r20, r19
     3a2:	90 0d       	add	r25, r0
     3a4:	11 24       	eor	r1, r1
     3a6:	0e 94 56 05 	call	0xaac	; 0xaac <__divmodhi4>
     3aa:	68 83       	st	Y, r22
     3ac:	13 c0       	rjmp	.+38     	; 0x3d4 <joystick_readPosition+0x6c>
	} else {
		pos->x_pos = ((x_pos - joystickOffsetX)*100)/(255-joystickOffsetX);
     3ae:	46 2f       	mov	r20, r22
     3b0:	50 e0       	ldi	r21, 0x00	; 0
     3b2:	21 2f       	mov	r18, r17
     3b4:	30 e0       	ldi	r19, 0x00	; 0
     3b6:	24 1b       	sub	r18, r20
     3b8:	35 0b       	sbc	r19, r21
     3ba:	64 e6       	ldi	r22, 0x64	; 100
     3bc:	62 9f       	mul	r22, r18
     3be:	c0 01       	movw	r24, r0
     3c0:	63 9f       	mul	r22, r19
     3c2:	90 0d       	add	r25, r0
     3c4:	11 24       	eor	r1, r1
     3c6:	6f ef       	ldi	r22, 0xFF	; 255
     3c8:	70 e0       	ldi	r23, 0x00	; 0
     3ca:	64 1b       	sub	r22, r20
     3cc:	75 0b       	sbc	r23, r21
     3ce:	0e 94 56 05 	call	0xaac	; 0xaac <__divmodhi4>
     3d2:	68 83       	st	Y, r22
	}
	if (y_pos < joystickOffsetY) {
     3d4:	20 91 96 02 	lds	r18, 0x0296	; 0x800296 <joystickOffsetY>
     3d8:	e2 17       	cp	r30, r18
     3da:	80 f4       	brcc	.+32     	; 0x3fc <joystick_readPosition+0x94>
		pos->y_pos = ((y_pos - joystickOffsetY)*100)/(joystickOffsetY);
     3dc:	62 2f       	mov	r22, r18
     3de:	70 e0       	ldi	r23, 0x00	; 0
     3e0:	4e 2f       	mov	r20, r30
     3e2:	50 e0       	ldi	r21, 0x00	; 0
     3e4:	46 1b       	sub	r20, r22
     3e6:	57 0b       	sbc	r21, r23
     3e8:	24 e6       	ldi	r18, 0x64	; 100
     3ea:	24 9f       	mul	r18, r20
     3ec:	c0 01       	movw	r24, r0
     3ee:	25 9f       	mul	r18, r21
     3f0:	90 0d       	add	r25, r0
     3f2:	11 24       	eor	r1, r1
     3f4:	0e 94 56 05 	call	0xaac	; 0xaac <__divmodhi4>
     3f8:	69 83       	std	Y+1, r22	; 0x01
     3fa:	12 c0       	rjmp	.+36     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
	} else {
		pos->y_pos = ((y_pos - joystickOffsetY)*100)/(255-joystickOffsetY);
     3fc:	30 e0       	ldi	r19, 0x00	; 0
     3fe:	4e 2f       	mov	r20, r30
     400:	50 e0       	ldi	r21, 0x00	; 0
     402:	42 1b       	sub	r20, r18
     404:	53 0b       	sbc	r21, r19
     406:	64 e6       	ldi	r22, 0x64	; 100
     408:	64 9f       	mul	r22, r20
     40a:	c0 01       	movw	r24, r0
     40c:	65 9f       	mul	r22, r21
     40e:	90 0d       	add	r25, r0
     410:	11 24       	eor	r1, r1
     412:	6f ef       	ldi	r22, 0xFF	; 255
     414:	70 e0       	ldi	r23, 0x00	; 0
     416:	62 1b       	sub	r22, r18
     418:	73 0b       	sbc	r23, r19
     41a:	0e 94 56 05 	call	0xaac	; 0xaac <__divmodhi4>
     41e:	69 83       	std	Y+1, r22	; 0x01
	}
	pos->angle = atan2(pos->y_pos, pos->x_pos)*360/2.0/3.14;
     420:	68 81       	ld	r22, Y
     422:	06 2e       	mov	r0, r22
     424:	00 0c       	add	r0, r0
     426:	77 0b       	sbc	r23, r23
     428:	88 0b       	sbc	r24, r24
     42a:	99 0b       	sbc	r25, r25
     42c:	0e 94 bd 03 	call	0x77a	; 0x77a <__floatsisf>
     430:	6b 01       	movw	r12, r22
     432:	7c 01       	movw	r14, r24
     434:	69 81       	ldd	r22, Y+1	; 0x01
     436:	06 2e       	mov	r0, r22
     438:	00 0c       	add	r0, r0
     43a:	77 0b       	sbc	r23, r23
     43c:	88 0b       	sbc	r24, r24
     43e:	99 0b       	sbc	r25, r25
     440:	0e 94 bd 03 	call	0x77a	; 0x77a <__floatsisf>
     444:	a7 01       	movw	r20, r14
     446:	96 01       	movw	r18, r12
     448:	0e 94 b4 02 	call	0x568	; 0x568 <atan2>
     44c:	20 e0       	ldi	r18, 0x00	; 0
     44e:	30 e0       	ldi	r19, 0x00	; 0
     450:	44 eb       	ldi	r20, 0xB4	; 180
     452:	53 e4       	ldi	r21, 0x43	; 67
     454:	0e 94 78 04 	call	0x8f0	; 0x8f0 <__mulsf3>
     458:	20 e0       	ldi	r18, 0x00	; 0
     45a:	30 e0       	ldi	r19, 0x00	; 0
     45c:	40 e0       	ldi	r20, 0x00	; 0
     45e:	5f e3       	ldi	r21, 0x3F	; 63
     460:	0e 94 78 04 	call	0x8f0	; 0x8f0 <__mulsf3>
     464:	23 ec       	ldi	r18, 0xC3	; 195
     466:	35 ef       	ldi	r19, 0xF5	; 245
     468:	48 e4       	ldi	r20, 0x48	; 72
     46a:	50 e4       	ldi	r21, 0x40	; 64
     46c:	0e 94 13 03 	call	0x626	; 0x626 <__divsf3>
     470:	0e 94 85 03 	call	0x70a	; 0x70a <__fixsfsi>
     474:	7b 83       	std	Y+3, r23	; 0x03
     476:	6a 83       	std	Y+2, r22	; 0x02
}
     478:	df 91       	pop	r29
     47a:	cf 91       	pop	r28
     47c:	1f 91       	pop	r17
     47e:	ff 90       	pop	r15
     480:	ef 90       	pop	r14
     482:	df 90       	pop	r13
     484:	cf 90       	pop	r12
     486:	08 95       	ret

00000488 <setupInit>:
#include "adc.h"
#include "joystick.h"
#include "setup.h"

	void setupInit(void){
	xmem_init();
     488:	0e 94 9a 02 	call	0x534	; 0x534 <xmem_init>
	USART_init(MYUBRR);
     48c:	8f e1       	ldi	r24, 0x1F	; 31
     48e:	90 e0       	ldi	r25, 0x00	; 0
     490:	0e 94 89 02 	call	0x512	; 0x512 <USART_init>
	adcInit();
     494:	0e 94 6e 00 	call	0xdc	; 0xdc <adcInit>
	joystickInit();
     498:	0e 94 a9 01 	call	0x352	; 0x352 <joystickInit>
	touchButton_init();
     49c:	0e 94 5f 02 	call	0x4be	; 0x4be <touchButton_init>
     4a0:	08 95       	ret

000004a2 <slider_readPosition>:
#define LEFT_POS_CHANNEL 2
#define RIGHT_POS_CHANNEL 3
#include "slider.h"
#include "adc.h"
void slider_readPosition(slider_position_t * pos) {
     4a2:	cf 93       	push	r28
     4a4:	df 93       	push	r29
     4a6:	ec 01       	movw	r28, r24
	pos->left_pos = readAdc(LEFT_POS_CHANNEL);
     4a8:	82 e0       	ldi	r24, 0x02	; 2
     4aa:	0e 94 70 00 	call	0xe0	; 0xe0 <readAdc>
     4ae:	88 83       	st	Y, r24
	pos->right_pos = readAdc(RIGHT_POS_CHANNEL);
     4b0:	83 e0       	ldi	r24, 0x03	; 3
     4b2:	0e 94 70 00 	call	0xe0	; 0xe0 <readAdc>
     4b6:	89 83       	std	Y+1, r24	; 0x01
     4b8:	df 91       	pop	r29
     4ba:	cf 91       	pop	r28
     4bc:	08 95       	ret

000004be <touchButton_init>:

#include "touchButton.h"
#include "adc.h"

void touchButton_init() {
	DDRB &= ~(1 << BUTTON_LEFT | 1 << BUTTON_RIGHT);
     4be:	36 b3       	in	r19, 0x16	; 22
     4c0:	26 b3       	in	r18, 0x16	; 22
     4c2:	47 b3       	in	r20, 0x17	; 23
     4c4:	31 70       	andi	r19, 0x01	; 1
     4c6:	81 e0       	ldi	r24, 0x01	; 1
     4c8:	90 e0       	ldi	r25, 0x00	; 0
     4ca:	bc 01       	movw	r22, r24
     4cc:	02 c0       	rjmp	.+4      	; 0x4d2 <touchButton_init+0x14>
     4ce:	66 0f       	add	r22, r22
     4d0:	77 1f       	adc	r23, r23
     4d2:	3a 95       	dec	r19
     4d4:	e2 f7       	brpl	.-8      	; 0x4ce <touchButton_init+0x10>
     4d6:	22 70       	andi	r18, 0x02	; 2
     4d8:	02 c0       	rjmp	.+4      	; 0x4de <touchButton_init+0x20>
     4da:	88 0f       	add	r24, r24
     4dc:	99 1f       	adc	r25, r25
     4de:	2a 95       	dec	r18
     4e0:	e2 f7       	brpl	.-8      	; 0x4da <touchButton_init+0x1c>
     4e2:	86 2b       	or	r24, r22
     4e4:	97 2b       	or	r25, r23
     4e6:	80 95       	com	r24
     4e8:	90 95       	com	r25
     4ea:	84 23       	and	r24, r20
     4ec:	87 bb       	out	0x17, r24	; 23
     4ee:	08 95       	ret

000004f0 <touchButton_readButtons>:
}
touchButton_readButtons(buttonValues_t * buttons) {
     4f0:	fc 01       	movw	r30, r24
	buttons->left_button = !!(BUTTON_LEFT);
     4f2:	96 b3       	in	r25, 0x16	; 22
     4f4:	91 70       	andi	r25, 0x01	; 1
     4f6:	90 83       	st	Z, r25
	buttons->right_button = !!(BUTTON_RIGHT);
     4f8:	96 b3       	in	r25, 0x16	; 22
     4fa:	96 95       	lsr	r25
     4fc:	91 70       	andi	r25, 0x01	; 1
     4fe:	91 83       	std	Z+1, r25	; 0x01
     500:	08 95       	ret

00000502 <USART_transmitChar>:
	uart = fdevopen(&USART_transmitChar, &USART_receiveChar);
}

void USART_transmitChar(unsigned char data) {
	/* wait for empty transmit buffer */
	while ( ! ( UCSR0A & (1<<UDRE0)))
     502:	5d 9b       	sbis	0x0b, 5	; 11
     504:	fe cf       	rjmp	.-4      	; 0x502 <USART_transmitChar>
		;
		
	/* Put data in buffer, send data */
	UDR0 = data;
     506:	8c b9       	out	0x0c, r24	; 12
     508:	08 95       	ret

0000050a <USART_receiveChar>:
}

unsigned char USART_receiveChar( void ) {
	/* wait for data to be received*/
	while ( !(UCSR0A & (1<<RXC0) ) ) 
     50a:	5f 9b       	sbis	0x0b, 7	; 11
     50c:	fe cf       	rjmp	.-4      	; 0x50a <USART_receiveChar>
		;
	
	return UDR0;
     50e:	8c b1       	in	r24, 0x0c	; 12
     510:	08 95       	ret

00000512 <USART_init>:

#include "uart.h"
FILE *uart ;
void USART_init(unsigned int ubrr) {
	
	UBRR0H = (unsigned char) (ubrr >> 8);
     512:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char) (ubrr);
     514:	89 b9       	out	0x09, r24	; 9
	
	/*Enable receiver and transmitter*/
	
	UCSR0B = (1<<RXEN0) | (1 <<TXEN0);
     516:	88 e1       	ldi	r24, 0x18	; 24
     518:	8a b9       	out	0x0a, r24	; 10
	
	/* SET FRAME FORMAT: 8data, 2 stop bit */
	UCSR0C = (1 << URSEL0) | (1<<USBS0) | (3<<UCSZ00);
     51a:	8e e8       	ldi	r24, 0x8E	; 142
     51c:	80 bd       	out	0x20, r24	; 32
	
	uart = fdevopen(&USART_transmitChar, &USART_receiveChar);
     51e:	65 e8       	ldi	r22, 0x85	; 133
     520:	72 e0       	ldi	r23, 0x02	; 2
     522:	81 e8       	ldi	r24, 0x81	; 129
     524:	92 e0       	ldi	r25, 0x02	; 2
     526:	0e 94 da 05 	call	0xbb4	; 0xbb4 <fdevopen>
     52a:	90 93 99 02 	sts	0x0299, r25	; 0x800299 <uart+0x1>
     52e:	80 93 98 02 	sts	0x0298, r24	; 0x800298 <uart>
     532:	08 95       	ret

00000534 <xmem_init>:
#define BASE_ADDRESS 0x1000;
#include <avr/io.h>
#include "xmem.h"

void xmem_init(void) {
	MCUCR |= (1<<SRE);
     534:	85 b7       	in	r24, 0x35	; 53
     536:	80 68       	ori	r24, 0x80	; 128
     538:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1<<XMM0);
     53a:	80 b7       	in	r24, 0x30	; 48
     53c:	88 60       	ori	r24, 0x08	; 8
     53e:	80 bf       	out	0x30, r24	; 48
     540:	08 95       	ret
     542:	0e 94 28 04 	call	0x850	; 0x850 <__fp_pscA>
     546:	60 f0       	brcs	.+24     	; 0x560 <xmem_init+0x2c>
     548:	80 e8       	ldi	r24, 0x80	; 128
     54a:	91 e0       	ldi	r25, 0x01	; 1
     54c:	09 f4       	brne	.+2      	; 0x550 <xmem_init+0x1c>
     54e:	9e ef       	ldi	r25, 0xFE	; 254
     550:	0e 94 2f 04 	call	0x85e	; 0x85e <__fp_pscB>
     554:	28 f0       	brcs	.+10     	; 0x560 <xmem_init+0x2c>
     556:	40 e8       	ldi	r20, 0x80	; 128
     558:	51 e0       	ldi	r21, 0x01	; 1
     55a:	71 f4       	brne	.+28     	; 0x578 <atan2+0x10>
     55c:	5e ef       	ldi	r21, 0xFE	; 254
     55e:	0c c0       	rjmp	.+24     	; 0x578 <atan2+0x10>
     560:	0c 94 fe 03 	jmp	0x7fc	; 0x7fc <__fp_nan>
     564:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <__fp_zero>

00000568 <atan2>:
     568:	e9 2f       	mov	r30, r25
     56a:	e0 78       	andi	r30, 0x80	; 128
     56c:	0e 94 47 04 	call	0x88e	; 0x88e <__fp_split3>
     570:	40 f3       	brcs	.-48     	; 0x542 <xmem_init+0xe>
     572:	09 2e       	mov	r0, r25
     574:	05 2a       	or	r0, r21
     576:	b1 f3       	breq	.-20     	; 0x564 <xmem_init+0x30>
     578:	26 17       	cp	r18, r22
     57a:	37 07       	cpc	r19, r23
     57c:	48 07       	cpc	r20, r24
     57e:	59 07       	cpc	r21, r25
     580:	38 f0       	brcs	.+14     	; 0x590 <atan2+0x28>
     582:	0e 2e       	mov	r0, r30
     584:	07 f8       	bld	r0, 7
     586:	e0 25       	eor	r30, r0
     588:	69 f0       	breq	.+26     	; 0x5a4 <atan2+0x3c>
     58a:	e0 25       	eor	r30, r0
     58c:	e0 64       	ori	r30, 0x40	; 64
     58e:	0a c0       	rjmp	.+20     	; 0x5a4 <atan2+0x3c>
     590:	ef 63       	ori	r30, 0x3F	; 63
     592:	07 f8       	bld	r0, 7
     594:	00 94       	com	r0
     596:	07 fa       	bst	r0, 7
     598:	db 01       	movw	r26, r22
     59a:	b9 01       	movw	r22, r18
     59c:	9d 01       	movw	r18, r26
     59e:	dc 01       	movw	r26, r24
     5a0:	ca 01       	movw	r24, r20
     5a2:	ad 01       	movw	r20, r26
     5a4:	ef 93       	push	r30
     5a6:	0e 94 2a 03 	call	0x654	; 0x654 <__divsf3_pse>
     5aa:	0e 94 36 04 	call	0x86c	; 0x86c <__fp_round>
     5ae:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <atan>
     5b2:	5f 91       	pop	r21
     5b4:	55 23       	and	r21, r21
     5b6:	39 f0       	breq	.+14     	; 0x5c6 <atan2+0x5e>
     5b8:	2b ed       	ldi	r18, 0xDB	; 219
     5ba:	3f e0       	ldi	r19, 0x0F	; 15
     5bc:	49 e4       	ldi	r20, 0x49	; 73
     5be:	50 fd       	sbrc	r21, 0
     5c0:	49 ec       	ldi	r20, 0xC9	; 201
     5c2:	0c 94 ea 04 	jmp	0x9d4	; 0x9d4 <__addsf3>
     5c6:	08 95       	ret

000005c8 <atan>:
     5c8:	df 93       	push	r29
     5ca:	dd 27       	eor	r29, r29
     5cc:	b9 2f       	mov	r27, r25
     5ce:	bf 77       	andi	r27, 0x7F	; 127
     5d0:	40 e8       	ldi	r20, 0x80	; 128
     5d2:	5f e3       	ldi	r21, 0x3F	; 63
     5d4:	16 16       	cp	r1, r22
     5d6:	17 06       	cpc	r1, r23
     5d8:	48 07       	cpc	r20, r24
     5da:	5b 07       	cpc	r21, r27
     5dc:	18 f4       	brcc	.+6      	; 0x5e4 <atan+0x1c>
     5de:	d9 2f       	mov	r29, r25
     5e0:	0e 94 70 04 	call	0x8e0	; 0x8e0 <inverse>
     5e4:	9f 93       	push	r25
     5e6:	8f 93       	push	r24
     5e8:	7f 93       	push	r23
     5ea:	6f 93       	push	r22
     5ec:	0e 94 e5 04 	call	0x9ca	; 0x9ca <square>
     5f0:	e0 e7       	ldi	r30, 0x70	; 112
     5f2:	f0 e0       	ldi	r31, 0x00	; 0
     5f4:	0e 94 01 04 	call	0x802	; 0x802 <__fp_powser>
     5f8:	0e 94 36 04 	call	0x86c	; 0x86c <__fp_round>
     5fc:	2f 91       	pop	r18
     5fe:	3f 91       	pop	r19
     600:	4f 91       	pop	r20
     602:	5f 91       	pop	r21
     604:	0e 94 8b 04 	call	0x916	; 0x916 <__mulsf3x>
     608:	dd 23       	and	r29, r29
     60a:	51 f0       	breq	.+20     	; 0x620 <atan+0x58>
     60c:	90 58       	subi	r25, 0x80	; 128
     60e:	a2 ea       	ldi	r26, 0xA2	; 162
     610:	2a ed       	ldi	r18, 0xDA	; 218
     612:	3f e0       	ldi	r19, 0x0F	; 15
     614:	49 ec       	ldi	r20, 0xC9	; 201
     616:	5f e3       	ldi	r21, 0x3F	; 63
     618:	d0 78       	andi	r29, 0x80	; 128
     61a:	5d 27       	eor	r21, r29
     61c:	0e 94 01 05 	call	0xa02	; 0xa02 <__addsf3x>
     620:	df 91       	pop	r29
     622:	0c 94 36 04 	jmp	0x86c	; 0x86c <__fp_round>

00000626 <__divsf3>:
     626:	0e 94 27 03 	call	0x64e	; 0x64e <__divsf3x>
     62a:	0c 94 36 04 	jmp	0x86c	; 0x86c <__fp_round>
     62e:	0e 94 2f 04 	call	0x85e	; 0x85e <__fp_pscB>
     632:	58 f0       	brcs	.+22     	; 0x64a <__divsf3+0x24>
     634:	0e 94 28 04 	call	0x850	; 0x850 <__fp_pscA>
     638:	40 f0       	brcs	.+16     	; 0x64a <__divsf3+0x24>
     63a:	29 f4       	brne	.+10     	; 0x646 <__divsf3+0x20>
     63c:	5f 3f       	cpi	r21, 0xFF	; 255
     63e:	29 f0       	breq	.+10     	; 0x64a <__divsf3+0x24>
     640:	0c 94 f8 03 	jmp	0x7f0	; 0x7f0 <__fp_inf>
     644:	51 11       	cpse	r21, r1
     646:	0c 94 6a 04 	jmp	0x8d4	; 0x8d4 <__fp_szero>
     64a:	0c 94 fe 03 	jmp	0x7fc	; 0x7fc <__fp_nan>

0000064e <__divsf3x>:
     64e:	0e 94 47 04 	call	0x88e	; 0x88e <__fp_split3>
     652:	68 f3       	brcs	.-38     	; 0x62e <__divsf3+0x8>

00000654 <__divsf3_pse>:
     654:	99 23       	and	r25, r25
     656:	b1 f3       	breq	.-20     	; 0x644 <__divsf3+0x1e>
     658:	55 23       	and	r21, r21
     65a:	91 f3       	breq	.-28     	; 0x640 <__divsf3+0x1a>
     65c:	95 1b       	sub	r25, r21
     65e:	55 0b       	sbc	r21, r21
     660:	bb 27       	eor	r27, r27
     662:	aa 27       	eor	r26, r26
     664:	62 17       	cp	r22, r18
     666:	73 07       	cpc	r23, r19
     668:	84 07       	cpc	r24, r20
     66a:	38 f0       	brcs	.+14     	; 0x67a <__divsf3_pse+0x26>
     66c:	9f 5f       	subi	r25, 0xFF	; 255
     66e:	5f 4f       	sbci	r21, 0xFF	; 255
     670:	22 0f       	add	r18, r18
     672:	33 1f       	adc	r19, r19
     674:	44 1f       	adc	r20, r20
     676:	aa 1f       	adc	r26, r26
     678:	a9 f3       	breq	.-22     	; 0x664 <__divsf3_pse+0x10>
     67a:	35 d0       	rcall	.+106    	; 0x6e6 <__divsf3_pse+0x92>
     67c:	0e 2e       	mov	r0, r30
     67e:	3a f0       	brmi	.+14     	; 0x68e <__divsf3_pse+0x3a>
     680:	e0 e8       	ldi	r30, 0x80	; 128
     682:	32 d0       	rcall	.+100    	; 0x6e8 <__divsf3_pse+0x94>
     684:	91 50       	subi	r25, 0x01	; 1
     686:	50 40       	sbci	r21, 0x00	; 0
     688:	e6 95       	lsr	r30
     68a:	00 1c       	adc	r0, r0
     68c:	ca f7       	brpl	.-14     	; 0x680 <__divsf3_pse+0x2c>
     68e:	2b d0       	rcall	.+86     	; 0x6e6 <__divsf3_pse+0x92>
     690:	fe 2f       	mov	r31, r30
     692:	29 d0       	rcall	.+82     	; 0x6e6 <__divsf3_pse+0x92>
     694:	66 0f       	add	r22, r22
     696:	77 1f       	adc	r23, r23
     698:	88 1f       	adc	r24, r24
     69a:	bb 1f       	adc	r27, r27
     69c:	26 17       	cp	r18, r22
     69e:	37 07       	cpc	r19, r23
     6a0:	48 07       	cpc	r20, r24
     6a2:	ab 07       	cpc	r26, r27
     6a4:	b0 e8       	ldi	r27, 0x80	; 128
     6a6:	09 f0       	breq	.+2      	; 0x6aa <__divsf3_pse+0x56>
     6a8:	bb 0b       	sbc	r27, r27
     6aa:	80 2d       	mov	r24, r0
     6ac:	bf 01       	movw	r22, r30
     6ae:	ff 27       	eor	r31, r31
     6b0:	93 58       	subi	r25, 0x83	; 131
     6b2:	5f 4f       	sbci	r21, 0xFF	; 255
     6b4:	3a f0       	brmi	.+14     	; 0x6c4 <__divsf3_pse+0x70>
     6b6:	9e 3f       	cpi	r25, 0xFE	; 254
     6b8:	51 05       	cpc	r21, r1
     6ba:	78 f0       	brcs	.+30     	; 0x6da <__divsf3_pse+0x86>
     6bc:	0c 94 f8 03 	jmp	0x7f0	; 0x7f0 <__fp_inf>
     6c0:	0c 94 6a 04 	jmp	0x8d4	; 0x8d4 <__fp_szero>
     6c4:	5f 3f       	cpi	r21, 0xFF	; 255
     6c6:	e4 f3       	brlt	.-8      	; 0x6c0 <__divsf3_pse+0x6c>
     6c8:	98 3e       	cpi	r25, 0xE8	; 232
     6ca:	d4 f3       	brlt	.-12     	; 0x6c0 <__divsf3_pse+0x6c>
     6cc:	86 95       	lsr	r24
     6ce:	77 95       	ror	r23
     6d0:	67 95       	ror	r22
     6d2:	b7 95       	ror	r27
     6d4:	f7 95       	ror	r31
     6d6:	9f 5f       	subi	r25, 0xFF	; 255
     6d8:	c9 f7       	brne	.-14     	; 0x6cc <__divsf3_pse+0x78>
     6da:	88 0f       	add	r24, r24
     6dc:	91 1d       	adc	r25, r1
     6de:	96 95       	lsr	r25
     6e0:	87 95       	ror	r24
     6e2:	97 f9       	bld	r25, 7
     6e4:	08 95       	ret
     6e6:	e1 e0       	ldi	r30, 0x01	; 1
     6e8:	66 0f       	add	r22, r22
     6ea:	77 1f       	adc	r23, r23
     6ec:	88 1f       	adc	r24, r24
     6ee:	bb 1f       	adc	r27, r27
     6f0:	62 17       	cp	r22, r18
     6f2:	73 07       	cpc	r23, r19
     6f4:	84 07       	cpc	r24, r20
     6f6:	ba 07       	cpc	r27, r26
     6f8:	20 f0       	brcs	.+8      	; 0x702 <__divsf3_pse+0xae>
     6fa:	62 1b       	sub	r22, r18
     6fc:	73 0b       	sbc	r23, r19
     6fe:	84 0b       	sbc	r24, r20
     700:	ba 0b       	sbc	r27, r26
     702:	ee 1f       	adc	r30, r30
     704:	88 f7       	brcc	.-30     	; 0x6e8 <__divsf3_pse+0x94>
     706:	e0 95       	com	r30
     708:	08 95       	ret

0000070a <__fixsfsi>:
     70a:	0e 94 8c 03 	call	0x718	; 0x718 <__fixunssfsi>
     70e:	68 94       	set
     710:	b1 11       	cpse	r27, r1
     712:	0c 94 6a 04 	jmp	0x8d4	; 0x8d4 <__fp_szero>
     716:	08 95       	ret

00000718 <__fixunssfsi>:
     718:	0e 94 4f 04 	call	0x89e	; 0x89e <__fp_splitA>
     71c:	88 f0       	brcs	.+34     	; 0x740 <__fixunssfsi+0x28>
     71e:	9f 57       	subi	r25, 0x7F	; 127
     720:	98 f0       	brcs	.+38     	; 0x748 <__fixunssfsi+0x30>
     722:	b9 2f       	mov	r27, r25
     724:	99 27       	eor	r25, r25
     726:	b7 51       	subi	r27, 0x17	; 23
     728:	b0 f0       	brcs	.+44     	; 0x756 <__fixunssfsi+0x3e>
     72a:	e1 f0       	breq	.+56     	; 0x764 <__fixunssfsi+0x4c>
     72c:	66 0f       	add	r22, r22
     72e:	77 1f       	adc	r23, r23
     730:	88 1f       	adc	r24, r24
     732:	99 1f       	adc	r25, r25
     734:	1a f0       	brmi	.+6      	; 0x73c <__fixunssfsi+0x24>
     736:	ba 95       	dec	r27
     738:	c9 f7       	brne	.-14     	; 0x72c <__fixunssfsi+0x14>
     73a:	14 c0       	rjmp	.+40     	; 0x764 <__fixunssfsi+0x4c>
     73c:	b1 30       	cpi	r27, 0x01	; 1
     73e:	91 f0       	breq	.+36     	; 0x764 <__fixunssfsi+0x4c>
     740:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__fp_zero>
     744:	b1 e0       	ldi	r27, 0x01	; 1
     746:	08 95       	ret
     748:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <__fp_zero>
     74c:	67 2f       	mov	r22, r23
     74e:	78 2f       	mov	r23, r24
     750:	88 27       	eor	r24, r24
     752:	b8 5f       	subi	r27, 0xF8	; 248
     754:	39 f0       	breq	.+14     	; 0x764 <__fixunssfsi+0x4c>
     756:	b9 3f       	cpi	r27, 0xF9	; 249
     758:	cc f3       	brlt	.-14     	; 0x74c <__fixunssfsi+0x34>
     75a:	86 95       	lsr	r24
     75c:	77 95       	ror	r23
     75e:	67 95       	ror	r22
     760:	b3 95       	inc	r27
     762:	d9 f7       	brne	.-10     	; 0x75a <__fixunssfsi+0x42>
     764:	3e f4       	brtc	.+14     	; 0x774 <__fixunssfsi+0x5c>
     766:	90 95       	com	r25
     768:	80 95       	com	r24
     76a:	70 95       	com	r23
     76c:	61 95       	neg	r22
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	8f 4f       	sbci	r24, 0xFF	; 255
     772:	9f 4f       	sbci	r25, 0xFF	; 255
     774:	08 95       	ret

00000776 <__floatunsisf>:
     776:	e8 94       	clt
     778:	09 c0       	rjmp	.+18     	; 0x78c <__floatsisf+0x12>

0000077a <__floatsisf>:
     77a:	97 fb       	bst	r25, 7
     77c:	3e f4       	brtc	.+14     	; 0x78c <__floatsisf+0x12>
     77e:	90 95       	com	r25
     780:	80 95       	com	r24
     782:	70 95       	com	r23
     784:	61 95       	neg	r22
     786:	7f 4f       	sbci	r23, 0xFF	; 255
     788:	8f 4f       	sbci	r24, 0xFF	; 255
     78a:	9f 4f       	sbci	r25, 0xFF	; 255
     78c:	99 23       	and	r25, r25
     78e:	a9 f0       	breq	.+42     	; 0x7ba <__floatsisf+0x40>
     790:	f9 2f       	mov	r31, r25
     792:	96 e9       	ldi	r25, 0x96	; 150
     794:	bb 27       	eor	r27, r27
     796:	93 95       	inc	r25
     798:	f6 95       	lsr	r31
     79a:	87 95       	ror	r24
     79c:	77 95       	ror	r23
     79e:	67 95       	ror	r22
     7a0:	b7 95       	ror	r27
     7a2:	f1 11       	cpse	r31, r1
     7a4:	f8 cf       	rjmp	.-16     	; 0x796 <__floatsisf+0x1c>
     7a6:	fa f4       	brpl	.+62     	; 0x7e6 <__floatsisf+0x6c>
     7a8:	bb 0f       	add	r27, r27
     7aa:	11 f4       	brne	.+4      	; 0x7b0 <__floatsisf+0x36>
     7ac:	60 ff       	sbrs	r22, 0
     7ae:	1b c0       	rjmp	.+54     	; 0x7e6 <__floatsisf+0x6c>
     7b0:	6f 5f       	subi	r22, 0xFF	; 255
     7b2:	7f 4f       	sbci	r23, 0xFF	; 255
     7b4:	8f 4f       	sbci	r24, 0xFF	; 255
     7b6:	9f 4f       	sbci	r25, 0xFF	; 255
     7b8:	16 c0       	rjmp	.+44     	; 0x7e6 <__floatsisf+0x6c>
     7ba:	88 23       	and	r24, r24
     7bc:	11 f0       	breq	.+4      	; 0x7c2 <__floatsisf+0x48>
     7be:	96 e9       	ldi	r25, 0x96	; 150
     7c0:	11 c0       	rjmp	.+34     	; 0x7e4 <__floatsisf+0x6a>
     7c2:	77 23       	and	r23, r23
     7c4:	21 f0       	breq	.+8      	; 0x7ce <__floatsisf+0x54>
     7c6:	9e e8       	ldi	r25, 0x8E	; 142
     7c8:	87 2f       	mov	r24, r23
     7ca:	76 2f       	mov	r23, r22
     7cc:	05 c0       	rjmp	.+10     	; 0x7d8 <__floatsisf+0x5e>
     7ce:	66 23       	and	r22, r22
     7d0:	71 f0       	breq	.+28     	; 0x7ee <__floatsisf+0x74>
     7d2:	96 e8       	ldi	r25, 0x86	; 134
     7d4:	86 2f       	mov	r24, r22
     7d6:	70 e0       	ldi	r23, 0x00	; 0
     7d8:	60 e0       	ldi	r22, 0x00	; 0
     7da:	2a f0       	brmi	.+10     	; 0x7e6 <__floatsisf+0x6c>
     7dc:	9a 95       	dec	r25
     7de:	66 0f       	add	r22, r22
     7e0:	77 1f       	adc	r23, r23
     7e2:	88 1f       	adc	r24, r24
     7e4:	da f7       	brpl	.-10     	; 0x7dc <__floatsisf+0x62>
     7e6:	88 0f       	add	r24, r24
     7e8:	96 95       	lsr	r25
     7ea:	87 95       	ror	r24
     7ec:	97 f9       	bld	r25, 7
     7ee:	08 95       	ret

000007f0 <__fp_inf>:
     7f0:	97 f9       	bld	r25, 7
     7f2:	9f 67       	ori	r25, 0x7F	; 127
     7f4:	80 e8       	ldi	r24, 0x80	; 128
     7f6:	70 e0       	ldi	r23, 0x00	; 0
     7f8:	60 e0       	ldi	r22, 0x00	; 0
     7fa:	08 95       	ret

000007fc <__fp_nan>:
     7fc:	9f ef       	ldi	r25, 0xFF	; 255
     7fe:	80 ec       	ldi	r24, 0xC0	; 192
     800:	08 95       	ret

00000802 <__fp_powser>:
     802:	df 93       	push	r29
     804:	cf 93       	push	r28
     806:	1f 93       	push	r17
     808:	0f 93       	push	r16
     80a:	ff 92       	push	r15
     80c:	ef 92       	push	r14
     80e:	df 92       	push	r13
     810:	7b 01       	movw	r14, r22
     812:	8c 01       	movw	r16, r24
     814:	68 94       	set
     816:	06 c0       	rjmp	.+12     	; 0x824 <__fp_powser+0x22>
     818:	da 2e       	mov	r13, r26
     81a:	ef 01       	movw	r28, r30
     81c:	0e 94 8b 04 	call	0x916	; 0x916 <__mulsf3x>
     820:	fe 01       	movw	r30, r28
     822:	e8 94       	clt
     824:	a5 91       	lpm	r26, Z+
     826:	25 91       	lpm	r18, Z+
     828:	35 91       	lpm	r19, Z+
     82a:	45 91       	lpm	r20, Z+
     82c:	55 91       	lpm	r21, Z+
     82e:	a6 f3       	brts	.-24     	; 0x818 <__fp_powser+0x16>
     830:	ef 01       	movw	r28, r30
     832:	0e 94 01 05 	call	0xa02	; 0xa02 <__addsf3x>
     836:	fe 01       	movw	r30, r28
     838:	97 01       	movw	r18, r14
     83a:	a8 01       	movw	r20, r16
     83c:	da 94       	dec	r13
     83e:	69 f7       	brne	.-38     	; 0x81a <__fp_powser+0x18>
     840:	df 90       	pop	r13
     842:	ef 90       	pop	r14
     844:	ff 90       	pop	r15
     846:	0f 91       	pop	r16
     848:	1f 91       	pop	r17
     84a:	cf 91       	pop	r28
     84c:	df 91       	pop	r29
     84e:	08 95       	ret

00000850 <__fp_pscA>:
     850:	00 24       	eor	r0, r0
     852:	0a 94       	dec	r0
     854:	16 16       	cp	r1, r22
     856:	17 06       	cpc	r1, r23
     858:	18 06       	cpc	r1, r24
     85a:	09 06       	cpc	r0, r25
     85c:	08 95       	ret

0000085e <__fp_pscB>:
     85e:	00 24       	eor	r0, r0
     860:	0a 94       	dec	r0
     862:	12 16       	cp	r1, r18
     864:	13 06       	cpc	r1, r19
     866:	14 06       	cpc	r1, r20
     868:	05 06       	cpc	r0, r21
     86a:	08 95       	ret

0000086c <__fp_round>:
     86c:	09 2e       	mov	r0, r25
     86e:	03 94       	inc	r0
     870:	00 0c       	add	r0, r0
     872:	11 f4       	brne	.+4      	; 0x878 <__fp_round+0xc>
     874:	88 23       	and	r24, r24
     876:	52 f0       	brmi	.+20     	; 0x88c <__fp_round+0x20>
     878:	bb 0f       	add	r27, r27
     87a:	40 f4       	brcc	.+16     	; 0x88c <__fp_round+0x20>
     87c:	bf 2b       	or	r27, r31
     87e:	11 f4       	brne	.+4      	; 0x884 <__fp_round+0x18>
     880:	60 ff       	sbrs	r22, 0
     882:	04 c0       	rjmp	.+8      	; 0x88c <__fp_round+0x20>
     884:	6f 5f       	subi	r22, 0xFF	; 255
     886:	7f 4f       	sbci	r23, 0xFF	; 255
     888:	8f 4f       	sbci	r24, 0xFF	; 255
     88a:	9f 4f       	sbci	r25, 0xFF	; 255
     88c:	08 95       	ret

0000088e <__fp_split3>:
     88e:	57 fd       	sbrc	r21, 7
     890:	90 58       	subi	r25, 0x80	; 128
     892:	44 0f       	add	r20, r20
     894:	55 1f       	adc	r21, r21
     896:	59 f0       	breq	.+22     	; 0x8ae <__fp_splitA+0x10>
     898:	5f 3f       	cpi	r21, 0xFF	; 255
     89a:	71 f0       	breq	.+28     	; 0x8b8 <__fp_splitA+0x1a>
     89c:	47 95       	ror	r20

0000089e <__fp_splitA>:
     89e:	88 0f       	add	r24, r24
     8a0:	97 fb       	bst	r25, 7
     8a2:	99 1f       	adc	r25, r25
     8a4:	61 f0       	breq	.+24     	; 0x8be <__fp_splitA+0x20>
     8a6:	9f 3f       	cpi	r25, 0xFF	; 255
     8a8:	79 f0       	breq	.+30     	; 0x8c8 <__fp_splitA+0x2a>
     8aa:	87 95       	ror	r24
     8ac:	08 95       	ret
     8ae:	12 16       	cp	r1, r18
     8b0:	13 06       	cpc	r1, r19
     8b2:	14 06       	cpc	r1, r20
     8b4:	55 1f       	adc	r21, r21
     8b6:	f2 cf       	rjmp	.-28     	; 0x89c <__fp_split3+0xe>
     8b8:	46 95       	lsr	r20
     8ba:	f1 df       	rcall	.-30     	; 0x89e <__fp_splitA>
     8bc:	08 c0       	rjmp	.+16     	; 0x8ce <__fp_splitA+0x30>
     8be:	16 16       	cp	r1, r22
     8c0:	17 06       	cpc	r1, r23
     8c2:	18 06       	cpc	r1, r24
     8c4:	99 1f       	adc	r25, r25
     8c6:	f1 cf       	rjmp	.-30     	; 0x8aa <__fp_splitA+0xc>
     8c8:	86 95       	lsr	r24
     8ca:	71 05       	cpc	r23, r1
     8cc:	61 05       	cpc	r22, r1
     8ce:	08 94       	sec
     8d0:	08 95       	ret

000008d2 <__fp_zero>:
     8d2:	e8 94       	clt

000008d4 <__fp_szero>:
     8d4:	bb 27       	eor	r27, r27
     8d6:	66 27       	eor	r22, r22
     8d8:	77 27       	eor	r23, r23
     8da:	cb 01       	movw	r24, r22
     8dc:	97 f9       	bld	r25, 7
     8de:	08 95       	ret

000008e0 <inverse>:
     8e0:	9b 01       	movw	r18, r22
     8e2:	ac 01       	movw	r20, r24
     8e4:	60 e0       	ldi	r22, 0x00	; 0
     8e6:	70 e0       	ldi	r23, 0x00	; 0
     8e8:	80 e8       	ldi	r24, 0x80	; 128
     8ea:	9f e3       	ldi	r25, 0x3F	; 63
     8ec:	0c 94 13 03 	jmp	0x626	; 0x626 <__divsf3>

000008f0 <__mulsf3>:
     8f0:	0e 94 8b 04 	call	0x916	; 0x916 <__mulsf3x>
     8f4:	0c 94 36 04 	jmp	0x86c	; 0x86c <__fp_round>
     8f8:	0e 94 28 04 	call	0x850	; 0x850 <__fp_pscA>
     8fc:	38 f0       	brcs	.+14     	; 0x90c <__mulsf3+0x1c>
     8fe:	0e 94 2f 04 	call	0x85e	; 0x85e <__fp_pscB>
     902:	20 f0       	brcs	.+8      	; 0x90c <__mulsf3+0x1c>
     904:	95 23       	and	r25, r21
     906:	11 f0       	breq	.+4      	; 0x90c <__mulsf3+0x1c>
     908:	0c 94 f8 03 	jmp	0x7f0	; 0x7f0 <__fp_inf>
     90c:	0c 94 fe 03 	jmp	0x7fc	; 0x7fc <__fp_nan>
     910:	11 24       	eor	r1, r1
     912:	0c 94 6a 04 	jmp	0x8d4	; 0x8d4 <__fp_szero>

00000916 <__mulsf3x>:
     916:	0e 94 47 04 	call	0x88e	; 0x88e <__fp_split3>
     91a:	70 f3       	brcs	.-36     	; 0x8f8 <__mulsf3+0x8>

0000091c <__mulsf3_pse>:
     91c:	95 9f       	mul	r25, r21
     91e:	c1 f3       	breq	.-16     	; 0x910 <__mulsf3+0x20>
     920:	95 0f       	add	r25, r21
     922:	50 e0       	ldi	r21, 0x00	; 0
     924:	55 1f       	adc	r21, r21
     926:	62 9f       	mul	r22, r18
     928:	f0 01       	movw	r30, r0
     92a:	72 9f       	mul	r23, r18
     92c:	bb 27       	eor	r27, r27
     92e:	f0 0d       	add	r31, r0
     930:	b1 1d       	adc	r27, r1
     932:	63 9f       	mul	r22, r19
     934:	aa 27       	eor	r26, r26
     936:	f0 0d       	add	r31, r0
     938:	b1 1d       	adc	r27, r1
     93a:	aa 1f       	adc	r26, r26
     93c:	64 9f       	mul	r22, r20
     93e:	66 27       	eor	r22, r22
     940:	b0 0d       	add	r27, r0
     942:	a1 1d       	adc	r26, r1
     944:	66 1f       	adc	r22, r22
     946:	82 9f       	mul	r24, r18
     948:	22 27       	eor	r18, r18
     94a:	b0 0d       	add	r27, r0
     94c:	a1 1d       	adc	r26, r1
     94e:	62 1f       	adc	r22, r18
     950:	73 9f       	mul	r23, r19
     952:	b0 0d       	add	r27, r0
     954:	a1 1d       	adc	r26, r1
     956:	62 1f       	adc	r22, r18
     958:	83 9f       	mul	r24, r19
     95a:	a0 0d       	add	r26, r0
     95c:	61 1d       	adc	r22, r1
     95e:	22 1f       	adc	r18, r18
     960:	74 9f       	mul	r23, r20
     962:	33 27       	eor	r19, r19
     964:	a0 0d       	add	r26, r0
     966:	61 1d       	adc	r22, r1
     968:	23 1f       	adc	r18, r19
     96a:	84 9f       	mul	r24, r20
     96c:	60 0d       	add	r22, r0
     96e:	21 1d       	adc	r18, r1
     970:	82 2f       	mov	r24, r18
     972:	76 2f       	mov	r23, r22
     974:	6a 2f       	mov	r22, r26
     976:	11 24       	eor	r1, r1
     978:	9f 57       	subi	r25, 0x7F	; 127
     97a:	50 40       	sbci	r21, 0x00	; 0
     97c:	9a f0       	brmi	.+38     	; 0x9a4 <__mulsf3_pse+0x88>
     97e:	f1 f0       	breq	.+60     	; 0x9bc <__mulsf3_pse+0xa0>
     980:	88 23       	and	r24, r24
     982:	4a f0       	brmi	.+18     	; 0x996 <__mulsf3_pse+0x7a>
     984:	ee 0f       	add	r30, r30
     986:	ff 1f       	adc	r31, r31
     988:	bb 1f       	adc	r27, r27
     98a:	66 1f       	adc	r22, r22
     98c:	77 1f       	adc	r23, r23
     98e:	88 1f       	adc	r24, r24
     990:	91 50       	subi	r25, 0x01	; 1
     992:	50 40       	sbci	r21, 0x00	; 0
     994:	a9 f7       	brne	.-22     	; 0x980 <__mulsf3_pse+0x64>
     996:	9e 3f       	cpi	r25, 0xFE	; 254
     998:	51 05       	cpc	r21, r1
     99a:	80 f0       	brcs	.+32     	; 0x9bc <__mulsf3_pse+0xa0>
     99c:	0c 94 f8 03 	jmp	0x7f0	; 0x7f0 <__fp_inf>
     9a0:	0c 94 6a 04 	jmp	0x8d4	; 0x8d4 <__fp_szero>
     9a4:	5f 3f       	cpi	r21, 0xFF	; 255
     9a6:	e4 f3       	brlt	.-8      	; 0x9a0 <__mulsf3_pse+0x84>
     9a8:	98 3e       	cpi	r25, 0xE8	; 232
     9aa:	d4 f3       	brlt	.-12     	; 0x9a0 <__mulsf3_pse+0x84>
     9ac:	86 95       	lsr	r24
     9ae:	77 95       	ror	r23
     9b0:	67 95       	ror	r22
     9b2:	b7 95       	ror	r27
     9b4:	f7 95       	ror	r31
     9b6:	e7 95       	ror	r30
     9b8:	9f 5f       	subi	r25, 0xFF	; 255
     9ba:	c1 f7       	brne	.-16     	; 0x9ac <__mulsf3_pse+0x90>
     9bc:	fe 2b       	or	r31, r30
     9be:	88 0f       	add	r24, r24
     9c0:	91 1d       	adc	r25, r1
     9c2:	96 95       	lsr	r25
     9c4:	87 95       	ror	r24
     9c6:	97 f9       	bld	r25, 7
     9c8:	08 95       	ret

000009ca <square>:
     9ca:	9b 01       	movw	r18, r22
     9cc:	ac 01       	movw	r20, r24
     9ce:	0c 94 78 04 	jmp	0x8f0	; 0x8f0 <__mulsf3>

000009d2 <__subsf3>:
     9d2:	50 58       	subi	r21, 0x80	; 128

000009d4 <__addsf3>:
     9d4:	bb 27       	eor	r27, r27
     9d6:	aa 27       	eor	r26, r26
     9d8:	0e 94 01 05 	call	0xa02	; 0xa02 <__addsf3x>
     9dc:	0c 94 36 04 	jmp	0x86c	; 0x86c <__fp_round>
     9e0:	0e 94 28 04 	call	0x850	; 0x850 <__fp_pscA>
     9e4:	38 f0       	brcs	.+14     	; 0x9f4 <__addsf3+0x20>
     9e6:	0e 94 2f 04 	call	0x85e	; 0x85e <__fp_pscB>
     9ea:	20 f0       	brcs	.+8      	; 0x9f4 <__addsf3+0x20>
     9ec:	39 f4       	brne	.+14     	; 0x9fc <__addsf3+0x28>
     9ee:	9f 3f       	cpi	r25, 0xFF	; 255
     9f0:	19 f4       	brne	.+6      	; 0x9f8 <__addsf3+0x24>
     9f2:	26 f4       	brtc	.+8      	; 0x9fc <__addsf3+0x28>
     9f4:	0c 94 fe 03 	jmp	0x7fc	; 0x7fc <__fp_nan>
     9f8:	0e f4       	brtc	.+2      	; 0x9fc <__addsf3+0x28>
     9fa:	e0 95       	com	r30
     9fc:	e7 fb       	bst	r30, 7
     9fe:	0c 94 f8 03 	jmp	0x7f0	; 0x7f0 <__fp_inf>

00000a02 <__addsf3x>:
     a02:	e9 2f       	mov	r30, r25
     a04:	0e 94 47 04 	call	0x88e	; 0x88e <__fp_split3>
     a08:	58 f3       	brcs	.-42     	; 0x9e0 <__addsf3+0xc>
     a0a:	ba 17       	cp	r27, r26
     a0c:	62 07       	cpc	r22, r18
     a0e:	73 07       	cpc	r23, r19
     a10:	84 07       	cpc	r24, r20
     a12:	95 07       	cpc	r25, r21
     a14:	20 f0       	brcs	.+8      	; 0xa1e <__addsf3x+0x1c>
     a16:	79 f4       	brne	.+30     	; 0xa36 <__addsf3x+0x34>
     a18:	a6 f5       	brtc	.+104    	; 0xa82 <__addsf3x+0x80>
     a1a:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <__fp_zero>
     a1e:	0e f4       	brtc	.+2      	; 0xa22 <__addsf3x+0x20>
     a20:	e0 95       	com	r30
     a22:	0b 2e       	mov	r0, r27
     a24:	ba 2f       	mov	r27, r26
     a26:	a0 2d       	mov	r26, r0
     a28:	0b 01       	movw	r0, r22
     a2a:	b9 01       	movw	r22, r18
     a2c:	90 01       	movw	r18, r0
     a2e:	0c 01       	movw	r0, r24
     a30:	ca 01       	movw	r24, r20
     a32:	a0 01       	movw	r20, r0
     a34:	11 24       	eor	r1, r1
     a36:	ff 27       	eor	r31, r31
     a38:	59 1b       	sub	r21, r25
     a3a:	99 f0       	breq	.+38     	; 0xa62 <__addsf3x+0x60>
     a3c:	59 3f       	cpi	r21, 0xF9	; 249
     a3e:	50 f4       	brcc	.+20     	; 0xa54 <__addsf3x+0x52>
     a40:	50 3e       	cpi	r21, 0xE0	; 224
     a42:	68 f1       	brcs	.+90     	; 0xa9e <__addsf3x+0x9c>
     a44:	1a 16       	cp	r1, r26
     a46:	f0 40       	sbci	r31, 0x00	; 0
     a48:	a2 2f       	mov	r26, r18
     a4a:	23 2f       	mov	r18, r19
     a4c:	34 2f       	mov	r19, r20
     a4e:	44 27       	eor	r20, r20
     a50:	58 5f       	subi	r21, 0xF8	; 248
     a52:	f3 cf       	rjmp	.-26     	; 0xa3a <__addsf3x+0x38>
     a54:	46 95       	lsr	r20
     a56:	37 95       	ror	r19
     a58:	27 95       	ror	r18
     a5a:	a7 95       	ror	r26
     a5c:	f0 40       	sbci	r31, 0x00	; 0
     a5e:	53 95       	inc	r21
     a60:	c9 f7       	brne	.-14     	; 0xa54 <__addsf3x+0x52>
     a62:	7e f4       	brtc	.+30     	; 0xa82 <__addsf3x+0x80>
     a64:	1f 16       	cp	r1, r31
     a66:	ba 0b       	sbc	r27, r26
     a68:	62 0b       	sbc	r22, r18
     a6a:	73 0b       	sbc	r23, r19
     a6c:	84 0b       	sbc	r24, r20
     a6e:	ba f0       	brmi	.+46     	; 0xa9e <__addsf3x+0x9c>
     a70:	91 50       	subi	r25, 0x01	; 1
     a72:	a1 f0       	breq	.+40     	; 0xa9c <__addsf3x+0x9a>
     a74:	ff 0f       	add	r31, r31
     a76:	bb 1f       	adc	r27, r27
     a78:	66 1f       	adc	r22, r22
     a7a:	77 1f       	adc	r23, r23
     a7c:	88 1f       	adc	r24, r24
     a7e:	c2 f7       	brpl	.-16     	; 0xa70 <__addsf3x+0x6e>
     a80:	0e c0       	rjmp	.+28     	; 0xa9e <__addsf3x+0x9c>
     a82:	ba 0f       	add	r27, r26
     a84:	62 1f       	adc	r22, r18
     a86:	73 1f       	adc	r23, r19
     a88:	84 1f       	adc	r24, r20
     a8a:	48 f4       	brcc	.+18     	; 0xa9e <__addsf3x+0x9c>
     a8c:	87 95       	ror	r24
     a8e:	77 95       	ror	r23
     a90:	67 95       	ror	r22
     a92:	b7 95       	ror	r27
     a94:	f7 95       	ror	r31
     a96:	9e 3f       	cpi	r25, 0xFE	; 254
     a98:	08 f0       	brcs	.+2      	; 0xa9c <__addsf3x+0x9a>
     a9a:	b0 cf       	rjmp	.-160    	; 0x9fc <__addsf3+0x28>
     a9c:	93 95       	inc	r25
     a9e:	88 0f       	add	r24, r24
     aa0:	08 f0       	brcs	.+2      	; 0xaa4 <__addsf3x+0xa2>
     aa2:	99 27       	eor	r25, r25
     aa4:	ee 0f       	add	r30, r30
     aa6:	97 95       	ror	r25
     aa8:	87 95       	ror	r24
     aaa:	08 95       	ret

00000aac <__divmodhi4>:
     aac:	97 fb       	bst	r25, 7
     aae:	07 2e       	mov	r0, r23
     ab0:	16 f4       	brtc	.+4      	; 0xab6 <__divmodhi4+0xa>
     ab2:	00 94       	com	r0
     ab4:	07 d0       	rcall	.+14     	; 0xac4 <__divmodhi4_neg1>
     ab6:	77 fd       	sbrc	r23, 7
     ab8:	09 d0       	rcall	.+18     	; 0xacc <__divmodhi4_neg2>
     aba:	0e 94 6a 05 	call	0xad4	; 0xad4 <__udivmodhi4>
     abe:	07 fc       	sbrc	r0, 7
     ac0:	05 d0       	rcall	.+10     	; 0xacc <__divmodhi4_neg2>
     ac2:	3e f4       	brtc	.+14     	; 0xad2 <__divmodhi4_exit>

00000ac4 <__divmodhi4_neg1>:
     ac4:	90 95       	com	r25
     ac6:	81 95       	neg	r24
     ac8:	9f 4f       	sbci	r25, 0xFF	; 255
     aca:	08 95       	ret

00000acc <__divmodhi4_neg2>:
     acc:	70 95       	com	r23
     ace:	61 95       	neg	r22
     ad0:	7f 4f       	sbci	r23, 0xFF	; 255

00000ad2 <__divmodhi4_exit>:
     ad2:	08 95       	ret

00000ad4 <__udivmodhi4>:
     ad4:	aa 1b       	sub	r26, r26
     ad6:	bb 1b       	sub	r27, r27
     ad8:	51 e1       	ldi	r21, 0x11	; 17
     ada:	07 c0       	rjmp	.+14     	; 0xaea <__udivmodhi4_ep>

00000adc <__udivmodhi4_loop>:
     adc:	aa 1f       	adc	r26, r26
     ade:	bb 1f       	adc	r27, r27
     ae0:	a6 17       	cp	r26, r22
     ae2:	b7 07       	cpc	r27, r23
     ae4:	10 f0       	brcs	.+4      	; 0xaea <__udivmodhi4_ep>
     ae6:	a6 1b       	sub	r26, r22
     ae8:	b7 0b       	sbc	r27, r23

00000aea <__udivmodhi4_ep>:
     aea:	88 1f       	adc	r24, r24
     aec:	99 1f       	adc	r25, r25
     aee:	5a 95       	dec	r21
     af0:	a9 f7       	brne	.-22     	; 0xadc <__udivmodhi4_loop>
     af2:	80 95       	com	r24
     af4:	90 95       	com	r25
     af6:	bc 01       	movw	r22, r24
     af8:	cd 01       	movw	r24, r26
     afa:	08 95       	ret

00000afc <do_rand>:
     afc:	8f 92       	push	r8
     afe:	9f 92       	push	r9
     b00:	af 92       	push	r10
     b02:	bf 92       	push	r11
     b04:	cf 92       	push	r12
     b06:	df 92       	push	r13
     b08:	ef 92       	push	r14
     b0a:	ff 92       	push	r15
     b0c:	cf 93       	push	r28
     b0e:	df 93       	push	r29
     b10:	ec 01       	movw	r28, r24
     b12:	68 81       	ld	r22, Y
     b14:	79 81       	ldd	r23, Y+1	; 0x01
     b16:	8a 81       	ldd	r24, Y+2	; 0x02
     b18:	9b 81       	ldd	r25, Y+3	; 0x03
     b1a:	61 15       	cp	r22, r1
     b1c:	71 05       	cpc	r23, r1
     b1e:	81 05       	cpc	r24, r1
     b20:	91 05       	cpc	r25, r1
     b22:	21 f4       	brne	.+8      	; 0xb2c <do_rand+0x30>
     b24:	64 e2       	ldi	r22, 0x24	; 36
     b26:	79 ed       	ldi	r23, 0xD9	; 217
     b28:	8b e5       	ldi	r24, 0x5B	; 91
     b2a:	97 e0       	ldi	r25, 0x07	; 7
     b2c:	2d e1       	ldi	r18, 0x1D	; 29
     b2e:	33 ef       	ldi	r19, 0xF3	; 243
     b30:	41 e0       	ldi	r20, 0x01	; 1
     b32:	50 e0       	ldi	r21, 0x00	; 0
     b34:	0e 94 10 0a 	call	0x1420	; 0x1420 <__divmodsi4>
     b38:	49 01       	movw	r8, r18
     b3a:	5a 01       	movw	r10, r20
     b3c:	9b 01       	movw	r18, r22
     b3e:	ac 01       	movw	r20, r24
     b40:	a7 ea       	ldi	r26, 0xA7	; 167
     b42:	b1 e4       	ldi	r27, 0x41	; 65
     b44:	0e 94 2f 0a 	call	0x145e	; 0x145e <__muluhisi3>
     b48:	6b 01       	movw	r12, r22
     b4a:	7c 01       	movw	r14, r24
     b4c:	ac ee       	ldi	r26, 0xEC	; 236
     b4e:	b4 ef       	ldi	r27, 0xF4	; 244
     b50:	a5 01       	movw	r20, r10
     b52:	94 01       	movw	r18, r8
     b54:	0e 94 3d 0a 	call	0x147a	; 0x147a <__mulohisi3>
     b58:	dc 01       	movw	r26, r24
     b5a:	cb 01       	movw	r24, r22
     b5c:	8c 0d       	add	r24, r12
     b5e:	9d 1d       	adc	r25, r13
     b60:	ae 1d       	adc	r26, r14
     b62:	bf 1d       	adc	r27, r15
     b64:	b7 ff       	sbrs	r27, 7
     b66:	03 c0       	rjmp	.+6      	; 0xb6e <do_rand+0x72>
     b68:	01 97       	sbiw	r24, 0x01	; 1
     b6a:	a1 09       	sbc	r26, r1
     b6c:	b0 48       	sbci	r27, 0x80	; 128
     b6e:	88 83       	st	Y, r24
     b70:	99 83       	std	Y+1, r25	; 0x01
     b72:	aa 83       	std	Y+2, r26	; 0x02
     b74:	bb 83       	std	Y+3, r27	; 0x03
     b76:	9f 77       	andi	r25, 0x7F	; 127
     b78:	df 91       	pop	r29
     b7a:	cf 91       	pop	r28
     b7c:	ff 90       	pop	r15
     b7e:	ef 90       	pop	r14
     b80:	df 90       	pop	r13
     b82:	cf 90       	pop	r12
     b84:	bf 90       	pop	r11
     b86:	af 90       	pop	r10
     b88:	9f 90       	pop	r9
     b8a:	8f 90       	pop	r8
     b8c:	08 95       	ret

00000b8e <rand_r>:
     b8e:	0e 94 7e 05 	call	0xafc	; 0xafc <do_rand>
     b92:	08 95       	ret

00000b94 <rand>:
     b94:	80 e0       	ldi	r24, 0x00	; 0
     b96:	91 e0       	ldi	r25, 0x01	; 1
     b98:	0e 94 7e 05 	call	0xafc	; 0xafc <do_rand>
     b9c:	08 95       	ret

00000b9e <srand>:
     b9e:	a0 e0       	ldi	r26, 0x00	; 0
     ba0:	b0 e0       	ldi	r27, 0x00	; 0
     ba2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     ba6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     baa:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
     bae:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
     bb2:	08 95       	ret

00000bb4 <fdevopen>:
     bb4:	0f 93       	push	r16
     bb6:	1f 93       	push	r17
     bb8:	cf 93       	push	r28
     bba:	df 93       	push	r29
     bbc:	00 97       	sbiw	r24, 0x00	; 0
     bbe:	31 f4       	brne	.+12     	; 0xbcc <fdevopen+0x18>
     bc0:	61 15       	cp	r22, r1
     bc2:	71 05       	cpc	r23, r1
     bc4:	19 f4       	brne	.+6      	; 0xbcc <fdevopen+0x18>
     bc6:	80 e0       	ldi	r24, 0x00	; 0
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	3a c0       	rjmp	.+116    	; 0xc40 <fdevopen+0x8c>
     bcc:	8b 01       	movw	r16, r22
     bce:	ec 01       	movw	r28, r24
     bd0:	6e e0       	ldi	r22, 0x0E	; 14
     bd2:	70 e0       	ldi	r23, 0x00	; 0
     bd4:	81 e0       	ldi	r24, 0x01	; 1
     bd6:	90 e0       	ldi	r25, 0x00	; 0
     bd8:	0e 94 1c 08 	call	0x1038	; 0x1038 <calloc>
     bdc:	fc 01       	movw	r30, r24
     bde:	89 2b       	or	r24, r25
     be0:	91 f3       	breq	.-28     	; 0xbc6 <fdevopen+0x12>
     be2:	80 e8       	ldi	r24, 0x80	; 128
     be4:	83 83       	std	Z+3, r24	; 0x03
     be6:	01 15       	cp	r16, r1
     be8:	11 05       	cpc	r17, r1
     bea:	71 f0       	breq	.+28     	; 0xc08 <fdevopen+0x54>
     bec:	13 87       	std	Z+11, r17	; 0x0b
     bee:	02 87       	std	Z+10, r16	; 0x0a
     bf0:	81 e8       	ldi	r24, 0x81	; 129
     bf2:	83 83       	std	Z+3, r24	; 0x03
     bf4:	80 91 9a 02 	lds	r24, 0x029A	; 0x80029a <__iob>
     bf8:	90 91 9b 02 	lds	r25, 0x029B	; 0x80029b <__iob+0x1>
     bfc:	89 2b       	or	r24, r25
     bfe:	21 f4       	brne	.+8      	; 0xc08 <fdevopen+0x54>
     c00:	f0 93 9b 02 	sts	0x029B, r31	; 0x80029b <__iob+0x1>
     c04:	e0 93 9a 02 	sts	0x029A, r30	; 0x80029a <__iob>
     c08:	20 97       	sbiw	r28, 0x00	; 0
     c0a:	c9 f0       	breq	.+50     	; 0xc3e <fdevopen+0x8a>
     c0c:	d1 87       	std	Z+9, r29	; 0x09
     c0e:	c0 87       	std	Z+8, r28	; 0x08
     c10:	83 81       	ldd	r24, Z+3	; 0x03
     c12:	82 60       	ori	r24, 0x02	; 2
     c14:	83 83       	std	Z+3, r24	; 0x03
     c16:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <__iob+0x2>
     c1a:	90 91 9d 02 	lds	r25, 0x029D	; 0x80029d <__iob+0x3>
     c1e:	89 2b       	or	r24, r25
     c20:	71 f4       	brne	.+28     	; 0xc3e <fdevopen+0x8a>
     c22:	f0 93 9d 02 	sts	0x029D, r31	; 0x80029d <__iob+0x3>
     c26:	e0 93 9c 02 	sts	0x029C, r30	; 0x80029c <__iob+0x2>
     c2a:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <__iob+0x4>
     c2e:	90 91 9f 02 	lds	r25, 0x029F	; 0x80029f <__iob+0x5>
     c32:	89 2b       	or	r24, r25
     c34:	21 f4       	brne	.+8      	; 0xc3e <fdevopen+0x8a>
     c36:	f0 93 9f 02 	sts	0x029F, r31	; 0x80029f <__iob+0x5>
     c3a:	e0 93 9e 02 	sts	0x029E, r30	; 0x80029e <__iob+0x4>
     c3e:	cf 01       	movw	r24, r30
     c40:	df 91       	pop	r29
     c42:	cf 91       	pop	r28
     c44:	1f 91       	pop	r17
     c46:	0f 91       	pop	r16
     c48:	08 95       	ret

00000c4a <printf>:
     c4a:	a0 e0       	ldi	r26, 0x00	; 0
     c4c:	b0 e0       	ldi	r27, 0x00	; 0
     c4e:	eb e2       	ldi	r30, 0x2B	; 43
     c50:	f6 e0       	ldi	r31, 0x06	; 6
     c52:	0c 94 52 0a 	jmp	0x14a4	; 0x14a4 <__prologue_saves__+0x20>
     c56:	ae 01       	movw	r20, r28
     c58:	4b 5f       	subi	r20, 0xFB	; 251
     c5a:	5f 4f       	sbci	r21, 0xFF	; 255
     c5c:	fa 01       	movw	r30, r20
     c5e:	61 91       	ld	r22, Z+
     c60:	71 91       	ld	r23, Z+
     c62:	af 01       	movw	r20, r30
     c64:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <__iob+0x2>
     c68:	90 91 9d 02 	lds	r25, 0x029D	; 0x80029d <__iob+0x3>
     c6c:	0e 94 3b 06 	call	0xc76	; 0xc76 <vfprintf>
     c70:	e2 e0       	ldi	r30, 0x02	; 2
     c72:	0c 94 6e 0a 	jmp	0x14dc	; 0x14dc <__epilogue_restores__+0x20>

00000c76 <vfprintf>:
     c76:	ab e0       	ldi	r26, 0x0B	; 11
     c78:	b0 e0       	ldi	r27, 0x00	; 0
     c7a:	e1 e4       	ldi	r30, 0x41	; 65
     c7c:	f6 e0       	ldi	r31, 0x06	; 6
     c7e:	0c 94 42 0a 	jmp	0x1484	; 0x1484 <__prologue_saves__>
     c82:	6c 01       	movw	r12, r24
     c84:	7b 01       	movw	r14, r22
     c86:	8a 01       	movw	r16, r20
     c88:	fc 01       	movw	r30, r24
     c8a:	17 82       	std	Z+7, r1	; 0x07
     c8c:	16 82       	std	Z+6, r1	; 0x06
     c8e:	83 81       	ldd	r24, Z+3	; 0x03
     c90:	81 ff       	sbrs	r24, 1
     c92:	cc c1       	rjmp	.+920    	; 0x102c <vfprintf+0x3b6>
     c94:	ce 01       	movw	r24, r28
     c96:	01 96       	adiw	r24, 0x01	; 1
     c98:	3c 01       	movw	r6, r24
     c9a:	f6 01       	movw	r30, r12
     c9c:	93 81       	ldd	r25, Z+3	; 0x03
     c9e:	f7 01       	movw	r30, r14
     ca0:	93 fd       	sbrc	r25, 3
     ca2:	85 91       	lpm	r24, Z+
     ca4:	93 ff       	sbrs	r25, 3
     ca6:	81 91       	ld	r24, Z+
     ca8:	7f 01       	movw	r14, r30
     caa:	88 23       	and	r24, r24
     cac:	09 f4       	brne	.+2      	; 0xcb0 <vfprintf+0x3a>
     cae:	ba c1       	rjmp	.+884    	; 0x1024 <vfprintf+0x3ae>
     cb0:	85 32       	cpi	r24, 0x25	; 37
     cb2:	39 f4       	brne	.+14     	; 0xcc2 <vfprintf+0x4c>
     cb4:	93 fd       	sbrc	r25, 3
     cb6:	85 91       	lpm	r24, Z+
     cb8:	93 ff       	sbrs	r25, 3
     cba:	81 91       	ld	r24, Z+
     cbc:	7f 01       	movw	r14, r30
     cbe:	85 32       	cpi	r24, 0x25	; 37
     cc0:	29 f4       	brne	.+10     	; 0xccc <vfprintf+0x56>
     cc2:	b6 01       	movw	r22, r12
     cc4:	90 e0       	ldi	r25, 0x00	; 0
     cc6:	0e 94 76 09 	call	0x12ec	; 0x12ec <fputc>
     cca:	e7 cf       	rjmp	.-50     	; 0xc9a <vfprintf+0x24>
     ccc:	91 2c       	mov	r9, r1
     cce:	21 2c       	mov	r2, r1
     cd0:	31 2c       	mov	r3, r1
     cd2:	ff e1       	ldi	r31, 0x1F	; 31
     cd4:	f3 15       	cp	r31, r3
     cd6:	d8 f0       	brcs	.+54     	; 0xd0e <vfprintf+0x98>
     cd8:	8b 32       	cpi	r24, 0x2B	; 43
     cda:	79 f0       	breq	.+30     	; 0xcfa <vfprintf+0x84>
     cdc:	38 f4       	brcc	.+14     	; 0xcec <vfprintf+0x76>
     cde:	80 32       	cpi	r24, 0x20	; 32
     ce0:	79 f0       	breq	.+30     	; 0xd00 <vfprintf+0x8a>
     ce2:	83 32       	cpi	r24, 0x23	; 35
     ce4:	a1 f4       	brne	.+40     	; 0xd0e <vfprintf+0x98>
     ce6:	23 2d       	mov	r18, r3
     ce8:	20 61       	ori	r18, 0x10	; 16
     cea:	1d c0       	rjmp	.+58     	; 0xd26 <vfprintf+0xb0>
     cec:	8d 32       	cpi	r24, 0x2D	; 45
     cee:	61 f0       	breq	.+24     	; 0xd08 <vfprintf+0x92>
     cf0:	80 33       	cpi	r24, 0x30	; 48
     cf2:	69 f4       	brne	.+26     	; 0xd0e <vfprintf+0x98>
     cf4:	23 2d       	mov	r18, r3
     cf6:	21 60       	ori	r18, 0x01	; 1
     cf8:	16 c0       	rjmp	.+44     	; 0xd26 <vfprintf+0xb0>
     cfa:	83 2d       	mov	r24, r3
     cfc:	82 60       	ori	r24, 0x02	; 2
     cfe:	38 2e       	mov	r3, r24
     d00:	e3 2d       	mov	r30, r3
     d02:	e4 60       	ori	r30, 0x04	; 4
     d04:	3e 2e       	mov	r3, r30
     d06:	2a c0       	rjmp	.+84     	; 0xd5c <vfprintf+0xe6>
     d08:	f3 2d       	mov	r31, r3
     d0a:	f8 60       	ori	r31, 0x08	; 8
     d0c:	1d c0       	rjmp	.+58     	; 0xd48 <vfprintf+0xd2>
     d0e:	37 fc       	sbrc	r3, 7
     d10:	2d c0       	rjmp	.+90     	; 0xd6c <vfprintf+0xf6>
     d12:	20 ed       	ldi	r18, 0xD0	; 208
     d14:	28 0f       	add	r18, r24
     d16:	2a 30       	cpi	r18, 0x0A	; 10
     d18:	40 f0       	brcs	.+16     	; 0xd2a <vfprintf+0xb4>
     d1a:	8e 32       	cpi	r24, 0x2E	; 46
     d1c:	b9 f4       	brne	.+46     	; 0xd4c <vfprintf+0xd6>
     d1e:	36 fc       	sbrc	r3, 6
     d20:	81 c1       	rjmp	.+770    	; 0x1024 <vfprintf+0x3ae>
     d22:	23 2d       	mov	r18, r3
     d24:	20 64       	ori	r18, 0x40	; 64
     d26:	32 2e       	mov	r3, r18
     d28:	19 c0       	rjmp	.+50     	; 0xd5c <vfprintf+0xe6>
     d2a:	36 fe       	sbrs	r3, 6
     d2c:	06 c0       	rjmp	.+12     	; 0xd3a <vfprintf+0xc4>
     d2e:	8a e0       	ldi	r24, 0x0A	; 10
     d30:	98 9e       	mul	r9, r24
     d32:	20 0d       	add	r18, r0
     d34:	11 24       	eor	r1, r1
     d36:	92 2e       	mov	r9, r18
     d38:	11 c0       	rjmp	.+34     	; 0xd5c <vfprintf+0xe6>
     d3a:	ea e0       	ldi	r30, 0x0A	; 10
     d3c:	2e 9e       	mul	r2, r30
     d3e:	20 0d       	add	r18, r0
     d40:	11 24       	eor	r1, r1
     d42:	22 2e       	mov	r2, r18
     d44:	f3 2d       	mov	r31, r3
     d46:	f0 62       	ori	r31, 0x20	; 32
     d48:	3f 2e       	mov	r3, r31
     d4a:	08 c0       	rjmp	.+16     	; 0xd5c <vfprintf+0xe6>
     d4c:	8c 36       	cpi	r24, 0x6C	; 108
     d4e:	21 f4       	brne	.+8      	; 0xd58 <vfprintf+0xe2>
     d50:	83 2d       	mov	r24, r3
     d52:	80 68       	ori	r24, 0x80	; 128
     d54:	38 2e       	mov	r3, r24
     d56:	02 c0       	rjmp	.+4      	; 0xd5c <vfprintf+0xe6>
     d58:	88 36       	cpi	r24, 0x68	; 104
     d5a:	41 f4       	brne	.+16     	; 0xd6c <vfprintf+0xf6>
     d5c:	f7 01       	movw	r30, r14
     d5e:	93 fd       	sbrc	r25, 3
     d60:	85 91       	lpm	r24, Z+
     d62:	93 ff       	sbrs	r25, 3
     d64:	81 91       	ld	r24, Z+
     d66:	7f 01       	movw	r14, r30
     d68:	81 11       	cpse	r24, r1
     d6a:	b3 cf       	rjmp	.-154    	; 0xcd2 <vfprintf+0x5c>
     d6c:	98 2f       	mov	r25, r24
     d6e:	9f 7d       	andi	r25, 0xDF	; 223
     d70:	95 54       	subi	r25, 0x45	; 69
     d72:	93 30       	cpi	r25, 0x03	; 3
     d74:	28 f4       	brcc	.+10     	; 0xd80 <vfprintf+0x10a>
     d76:	0c 5f       	subi	r16, 0xFC	; 252
     d78:	1f 4f       	sbci	r17, 0xFF	; 255
     d7a:	9f e3       	ldi	r25, 0x3F	; 63
     d7c:	99 83       	std	Y+1, r25	; 0x01
     d7e:	0d c0       	rjmp	.+26     	; 0xd9a <vfprintf+0x124>
     d80:	83 36       	cpi	r24, 0x63	; 99
     d82:	31 f0       	breq	.+12     	; 0xd90 <vfprintf+0x11a>
     d84:	83 37       	cpi	r24, 0x73	; 115
     d86:	71 f0       	breq	.+28     	; 0xda4 <vfprintf+0x12e>
     d88:	83 35       	cpi	r24, 0x53	; 83
     d8a:	09 f0       	breq	.+2      	; 0xd8e <vfprintf+0x118>
     d8c:	59 c0       	rjmp	.+178    	; 0xe40 <vfprintf+0x1ca>
     d8e:	21 c0       	rjmp	.+66     	; 0xdd2 <vfprintf+0x15c>
     d90:	f8 01       	movw	r30, r16
     d92:	80 81       	ld	r24, Z
     d94:	89 83       	std	Y+1, r24	; 0x01
     d96:	0e 5f       	subi	r16, 0xFE	; 254
     d98:	1f 4f       	sbci	r17, 0xFF	; 255
     d9a:	88 24       	eor	r8, r8
     d9c:	83 94       	inc	r8
     d9e:	91 2c       	mov	r9, r1
     da0:	53 01       	movw	r10, r6
     da2:	13 c0       	rjmp	.+38     	; 0xdca <vfprintf+0x154>
     da4:	28 01       	movw	r4, r16
     da6:	f2 e0       	ldi	r31, 0x02	; 2
     da8:	4f 0e       	add	r4, r31
     daa:	51 1c       	adc	r5, r1
     dac:	f8 01       	movw	r30, r16
     dae:	a0 80       	ld	r10, Z
     db0:	b1 80       	ldd	r11, Z+1	; 0x01
     db2:	36 fe       	sbrs	r3, 6
     db4:	03 c0       	rjmp	.+6      	; 0xdbc <vfprintf+0x146>
     db6:	69 2d       	mov	r22, r9
     db8:	70 e0       	ldi	r23, 0x00	; 0
     dba:	02 c0       	rjmp	.+4      	; 0xdc0 <vfprintf+0x14a>
     dbc:	6f ef       	ldi	r22, 0xFF	; 255
     dbe:	7f ef       	ldi	r23, 0xFF	; 255
     dc0:	c5 01       	movw	r24, r10
     dc2:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <strnlen>
     dc6:	4c 01       	movw	r8, r24
     dc8:	82 01       	movw	r16, r4
     dca:	f3 2d       	mov	r31, r3
     dcc:	ff 77       	andi	r31, 0x7F	; 127
     dce:	3f 2e       	mov	r3, r31
     dd0:	16 c0       	rjmp	.+44     	; 0xdfe <vfprintf+0x188>
     dd2:	28 01       	movw	r4, r16
     dd4:	22 e0       	ldi	r18, 0x02	; 2
     dd6:	42 0e       	add	r4, r18
     dd8:	51 1c       	adc	r5, r1
     dda:	f8 01       	movw	r30, r16
     ddc:	a0 80       	ld	r10, Z
     dde:	b1 80       	ldd	r11, Z+1	; 0x01
     de0:	36 fe       	sbrs	r3, 6
     de2:	03 c0       	rjmp	.+6      	; 0xdea <vfprintf+0x174>
     de4:	69 2d       	mov	r22, r9
     de6:	70 e0       	ldi	r23, 0x00	; 0
     de8:	02 c0       	rjmp	.+4      	; 0xdee <vfprintf+0x178>
     dea:	6f ef       	ldi	r22, 0xFF	; 255
     dec:	7f ef       	ldi	r23, 0xFF	; 255
     dee:	c5 01       	movw	r24, r10
     df0:	0e 94 59 09 	call	0x12b2	; 0x12b2 <strnlen_P>
     df4:	4c 01       	movw	r8, r24
     df6:	f3 2d       	mov	r31, r3
     df8:	f0 68       	ori	r31, 0x80	; 128
     dfa:	3f 2e       	mov	r3, r31
     dfc:	82 01       	movw	r16, r4
     dfe:	33 fc       	sbrc	r3, 3
     e00:	1b c0       	rjmp	.+54     	; 0xe38 <vfprintf+0x1c2>
     e02:	82 2d       	mov	r24, r2
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	88 16       	cp	r8, r24
     e08:	99 06       	cpc	r9, r25
     e0a:	b0 f4       	brcc	.+44     	; 0xe38 <vfprintf+0x1c2>
     e0c:	b6 01       	movw	r22, r12
     e0e:	80 e2       	ldi	r24, 0x20	; 32
     e10:	90 e0       	ldi	r25, 0x00	; 0
     e12:	0e 94 76 09 	call	0x12ec	; 0x12ec <fputc>
     e16:	2a 94       	dec	r2
     e18:	f4 cf       	rjmp	.-24     	; 0xe02 <vfprintf+0x18c>
     e1a:	f5 01       	movw	r30, r10
     e1c:	37 fc       	sbrc	r3, 7
     e1e:	85 91       	lpm	r24, Z+
     e20:	37 fe       	sbrs	r3, 7
     e22:	81 91       	ld	r24, Z+
     e24:	5f 01       	movw	r10, r30
     e26:	b6 01       	movw	r22, r12
     e28:	90 e0       	ldi	r25, 0x00	; 0
     e2a:	0e 94 76 09 	call	0x12ec	; 0x12ec <fputc>
     e2e:	21 10       	cpse	r2, r1
     e30:	2a 94       	dec	r2
     e32:	21 e0       	ldi	r18, 0x01	; 1
     e34:	82 1a       	sub	r8, r18
     e36:	91 08       	sbc	r9, r1
     e38:	81 14       	cp	r8, r1
     e3a:	91 04       	cpc	r9, r1
     e3c:	71 f7       	brne	.-36     	; 0xe1a <vfprintf+0x1a4>
     e3e:	e8 c0       	rjmp	.+464    	; 0x1010 <vfprintf+0x39a>
     e40:	84 36       	cpi	r24, 0x64	; 100
     e42:	11 f0       	breq	.+4      	; 0xe48 <vfprintf+0x1d2>
     e44:	89 36       	cpi	r24, 0x69	; 105
     e46:	41 f5       	brne	.+80     	; 0xe98 <vfprintf+0x222>
     e48:	f8 01       	movw	r30, r16
     e4a:	37 fe       	sbrs	r3, 7
     e4c:	07 c0       	rjmp	.+14     	; 0xe5c <vfprintf+0x1e6>
     e4e:	60 81       	ld	r22, Z
     e50:	71 81       	ldd	r23, Z+1	; 0x01
     e52:	82 81       	ldd	r24, Z+2	; 0x02
     e54:	93 81       	ldd	r25, Z+3	; 0x03
     e56:	0c 5f       	subi	r16, 0xFC	; 252
     e58:	1f 4f       	sbci	r17, 0xFF	; 255
     e5a:	08 c0       	rjmp	.+16     	; 0xe6c <vfprintf+0x1f6>
     e5c:	60 81       	ld	r22, Z
     e5e:	71 81       	ldd	r23, Z+1	; 0x01
     e60:	07 2e       	mov	r0, r23
     e62:	00 0c       	add	r0, r0
     e64:	88 0b       	sbc	r24, r24
     e66:	99 0b       	sbc	r25, r25
     e68:	0e 5f       	subi	r16, 0xFE	; 254
     e6a:	1f 4f       	sbci	r17, 0xFF	; 255
     e6c:	f3 2d       	mov	r31, r3
     e6e:	ff 76       	andi	r31, 0x6F	; 111
     e70:	3f 2e       	mov	r3, r31
     e72:	97 ff       	sbrs	r25, 7
     e74:	09 c0       	rjmp	.+18     	; 0xe88 <vfprintf+0x212>
     e76:	90 95       	com	r25
     e78:	80 95       	com	r24
     e7a:	70 95       	com	r23
     e7c:	61 95       	neg	r22
     e7e:	7f 4f       	sbci	r23, 0xFF	; 255
     e80:	8f 4f       	sbci	r24, 0xFF	; 255
     e82:	9f 4f       	sbci	r25, 0xFF	; 255
     e84:	f0 68       	ori	r31, 0x80	; 128
     e86:	3f 2e       	mov	r3, r31
     e88:	2a e0       	ldi	r18, 0x0A	; 10
     e8a:	30 e0       	ldi	r19, 0x00	; 0
     e8c:	a3 01       	movw	r20, r6
     e8e:	0e 94 b2 09 	call	0x1364	; 0x1364 <__ultoa_invert>
     e92:	88 2e       	mov	r8, r24
     e94:	86 18       	sub	r8, r6
     e96:	45 c0       	rjmp	.+138    	; 0xf22 <vfprintf+0x2ac>
     e98:	85 37       	cpi	r24, 0x75	; 117
     e9a:	31 f4       	brne	.+12     	; 0xea8 <vfprintf+0x232>
     e9c:	23 2d       	mov	r18, r3
     e9e:	2f 7e       	andi	r18, 0xEF	; 239
     ea0:	b2 2e       	mov	r11, r18
     ea2:	2a e0       	ldi	r18, 0x0A	; 10
     ea4:	30 e0       	ldi	r19, 0x00	; 0
     ea6:	25 c0       	rjmp	.+74     	; 0xef2 <vfprintf+0x27c>
     ea8:	93 2d       	mov	r25, r3
     eaa:	99 7f       	andi	r25, 0xF9	; 249
     eac:	b9 2e       	mov	r11, r25
     eae:	8f 36       	cpi	r24, 0x6F	; 111
     eb0:	c1 f0       	breq	.+48     	; 0xee2 <vfprintf+0x26c>
     eb2:	18 f4       	brcc	.+6      	; 0xeba <vfprintf+0x244>
     eb4:	88 35       	cpi	r24, 0x58	; 88
     eb6:	79 f0       	breq	.+30     	; 0xed6 <vfprintf+0x260>
     eb8:	b5 c0       	rjmp	.+362    	; 0x1024 <vfprintf+0x3ae>
     eba:	80 37       	cpi	r24, 0x70	; 112
     ebc:	19 f0       	breq	.+6      	; 0xec4 <vfprintf+0x24e>
     ebe:	88 37       	cpi	r24, 0x78	; 120
     ec0:	21 f0       	breq	.+8      	; 0xeca <vfprintf+0x254>
     ec2:	b0 c0       	rjmp	.+352    	; 0x1024 <vfprintf+0x3ae>
     ec4:	e9 2f       	mov	r30, r25
     ec6:	e0 61       	ori	r30, 0x10	; 16
     ec8:	be 2e       	mov	r11, r30
     eca:	b4 fe       	sbrs	r11, 4
     ecc:	0d c0       	rjmp	.+26     	; 0xee8 <vfprintf+0x272>
     ece:	fb 2d       	mov	r31, r11
     ed0:	f4 60       	ori	r31, 0x04	; 4
     ed2:	bf 2e       	mov	r11, r31
     ed4:	09 c0       	rjmp	.+18     	; 0xee8 <vfprintf+0x272>
     ed6:	34 fe       	sbrs	r3, 4
     ed8:	0a c0       	rjmp	.+20     	; 0xeee <vfprintf+0x278>
     eda:	29 2f       	mov	r18, r25
     edc:	26 60       	ori	r18, 0x06	; 6
     ede:	b2 2e       	mov	r11, r18
     ee0:	06 c0       	rjmp	.+12     	; 0xeee <vfprintf+0x278>
     ee2:	28 e0       	ldi	r18, 0x08	; 8
     ee4:	30 e0       	ldi	r19, 0x00	; 0
     ee6:	05 c0       	rjmp	.+10     	; 0xef2 <vfprintf+0x27c>
     ee8:	20 e1       	ldi	r18, 0x10	; 16
     eea:	30 e0       	ldi	r19, 0x00	; 0
     eec:	02 c0       	rjmp	.+4      	; 0xef2 <vfprintf+0x27c>
     eee:	20 e1       	ldi	r18, 0x10	; 16
     ef0:	32 e0       	ldi	r19, 0x02	; 2
     ef2:	f8 01       	movw	r30, r16
     ef4:	b7 fe       	sbrs	r11, 7
     ef6:	07 c0       	rjmp	.+14     	; 0xf06 <vfprintf+0x290>
     ef8:	60 81       	ld	r22, Z
     efa:	71 81       	ldd	r23, Z+1	; 0x01
     efc:	82 81       	ldd	r24, Z+2	; 0x02
     efe:	93 81       	ldd	r25, Z+3	; 0x03
     f00:	0c 5f       	subi	r16, 0xFC	; 252
     f02:	1f 4f       	sbci	r17, 0xFF	; 255
     f04:	06 c0       	rjmp	.+12     	; 0xf12 <vfprintf+0x29c>
     f06:	60 81       	ld	r22, Z
     f08:	71 81       	ldd	r23, Z+1	; 0x01
     f0a:	80 e0       	ldi	r24, 0x00	; 0
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	0e 5f       	subi	r16, 0xFE	; 254
     f10:	1f 4f       	sbci	r17, 0xFF	; 255
     f12:	a3 01       	movw	r20, r6
     f14:	0e 94 b2 09 	call	0x1364	; 0x1364 <__ultoa_invert>
     f18:	88 2e       	mov	r8, r24
     f1a:	86 18       	sub	r8, r6
     f1c:	fb 2d       	mov	r31, r11
     f1e:	ff 77       	andi	r31, 0x7F	; 127
     f20:	3f 2e       	mov	r3, r31
     f22:	36 fe       	sbrs	r3, 6
     f24:	0d c0       	rjmp	.+26     	; 0xf40 <vfprintf+0x2ca>
     f26:	23 2d       	mov	r18, r3
     f28:	2e 7f       	andi	r18, 0xFE	; 254
     f2a:	a2 2e       	mov	r10, r18
     f2c:	89 14       	cp	r8, r9
     f2e:	58 f4       	brcc	.+22     	; 0xf46 <vfprintf+0x2d0>
     f30:	34 fe       	sbrs	r3, 4
     f32:	0b c0       	rjmp	.+22     	; 0xf4a <vfprintf+0x2d4>
     f34:	32 fc       	sbrc	r3, 2
     f36:	09 c0       	rjmp	.+18     	; 0xf4a <vfprintf+0x2d4>
     f38:	83 2d       	mov	r24, r3
     f3a:	8e 7e       	andi	r24, 0xEE	; 238
     f3c:	a8 2e       	mov	r10, r24
     f3e:	05 c0       	rjmp	.+10     	; 0xf4a <vfprintf+0x2d4>
     f40:	b8 2c       	mov	r11, r8
     f42:	a3 2c       	mov	r10, r3
     f44:	03 c0       	rjmp	.+6      	; 0xf4c <vfprintf+0x2d6>
     f46:	b8 2c       	mov	r11, r8
     f48:	01 c0       	rjmp	.+2      	; 0xf4c <vfprintf+0x2d6>
     f4a:	b9 2c       	mov	r11, r9
     f4c:	a4 fe       	sbrs	r10, 4
     f4e:	0f c0       	rjmp	.+30     	; 0xf6e <vfprintf+0x2f8>
     f50:	fe 01       	movw	r30, r28
     f52:	e8 0d       	add	r30, r8
     f54:	f1 1d       	adc	r31, r1
     f56:	80 81       	ld	r24, Z
     f58:	80 33       	cpi	r24, 0x30	; 48
     f5a:	21 f4       	brne	.+8      	; 0xf64 <vfprintf+0x2ee>
     f5c:	9a 2d       	mov	r25, r10
     f5e:	99 7e       	andi	r25, 0xE9	; 233
     f60:	a9 2e       	mov	r10, r25
     f62:	09 c0       	rjmp	.+18     	; 0xf76 <vfprintf+0x300>
     f64:	a2 fe       	sbrs	r10, 2
     f66:	06 c0       	rjmp	.+12     	; 0xf74 <vfprintf+0x2fe>
     f68:	b3 94       	inc	r11
     f6a:	b3 94       	inc	r11
     f6c:	04 c0       	rjmp	.+8      	; 0xf76 <vfprintf+0x300>
     f6e:	8a 2d       	mov	r24, r10
     f70:	86 78       	andi	r24, 0x86	; 134
     f72:	09 f0       	breq	.+2      	; 0xf76 <vfprintf+0x300>
     f74:	b3 94       	inc	r11
     f76:	a3 fc       	sbrc	r10, 3
     f78:	11 c0       	rjmp	.+34     	; 0xf9c <vfprintf+0x326>
     f7a:	a0 fe       	sbrs	r10, 0
     f7c:	06 c0       	rjmp	.+12     	; 0xf8a <vfprintf+0x314>
     f7e:	b2 14       	cp	r11, r2
     f80:	88 f4       	brcc	.+34     	; 0xfa4 <vfprintf+0x32e>
     f82:	28 0c       	add	r2, r8
     f84:	92 2c       	mov	r9, r2
     f86:	9b 18       	sub	r9, r11
     f88:	0e c0       	rjmp	.+28     	; 0xfa6 <vfprintf+0x330>
     f8a:	b2 14       	cp	r11, r2
     f8c:	60 f4       	brcc	.+24     	; 0xfa6 <vfprintf+0x330>
     f8e:	b6 01       	movw	r22, r12
     f90:	80 e2       	ldi	r24, 0x20	; 32
     f92:	90 e0       	ldi	r25, 0x00	; 0
     f94:	0e 94 76 09 	call	0x12ec	; 0x12ec <fputc>
     f98:	b3 94       	inc	r11
     f9a:	f7 cf       	rjmp	.-18     	; 0xf8a <vfprintf+0x314>
     f9c:	b2 14       	cp	r11, r2
     f9e:	18 f4       	brcc	.+6      	; 0xfa6 <vfprintf+0x330>
     fa0:	2b 18       	sub	r2, r11
     fa2:	02 c0       	rjmp	.+4      	; 0xfa8 <vfprintf+0x332>
     fa4:	98 2c       	mov	r9, r8
     fa6:	21 2c       	mov	r2, r1
     fa8:	a4 fe       	sbrs	r10, 4
     faa:	10 c0       	rjmp	.+32     	; 0xfcc <vfprintf+0x356>
     fac:	b6 01       	movw	r22, r12
     fae:	80 e3       	ldi	r24, 0x30	; 48
     fb0:	90 e0       	ldi	r25, 0x00	; 0
     fb2:	0e 94 76 09 	call	0x12ec	; 0x12ec <fputc>
     fb6:	a2 fe       	sbrs	r10, 2
     fb8:	17 c0       	rjmp	.+46     	; 0xfe8 <vfprintf+0x372>
     fba:	a1 fc       	sbrc	r10, 1
     fbc:	03 c0       	rjmp	.+6      	; 0xfc4 <vfprintf+0x34e>
     fbe:	88 e7       	ldi	r24, 0x78	; 120
     fc0:	90 e0       	ldi	r25, 0x00	; 0
     fc2:	02 c0       	rjmp	.+4      	; 0xfc8 <vfprintf+0x352>
     fc4:	88 e5       	ldi	r24, 0x58	; 88
     fc6:	90 e0       	ldi	r25, 0x00	; 0
     fc8:	b6 01       	movw	r22, r12
     fca:	0c c0       	rjmp	.+24     	; 0xfe4 <vfprintf+0x36e>
     fcc:	8a 2d       	mov	r24, r10
     fce:	86 78       	andi	r24, 0x86	; 134
     fd0:	59 f0       	breq	.+22     	; 0xfe8 <vfprintf+0x372>
     fd2:	a1 fe       	sbrs	r10, 1
     fd4:	02 c0       	rjmp	.+4      	; 0xfda <vfprintf+0x364>
     fd6:	8b e2       	ldi	r24, 0x2B	; 43
     fd8:	01 c0       	rjmp	.+2      	; 0xfdc <vfprintf+0x366>
     fda:	80 e2       	ldi	r24, 0x20	; 32
     fdc:	a7 fc       	sbrc	r10, 7
     fde:	8d e2       	ldi	r24, 0x2D	; 45
     fe0:	b6 01       	movw	r22, r12
     fe2:	90 e0       	ldi	r25, 0x00	; 0
     fe4:	0e 94 76 09 	call	0x12ec	; 0x12ec <fputc>
     fe8:	89 14       	cp	r8, r9
     fea:	38 f4       	brcc	.+14     	; 0xffa <vfprintf+0x384>
     fec:	b6 01       	movw	r22, r12
     fee:	80 e3       	ldi	r24, 0x30	; 48
     ff0:	90 e0       	ldi	r25, 0x00	; 0
     ff2:	0e 94 76 09 	call	0x12ec	; 0x12ec <fputc>
     ff6:	9a 94       	dec	r9
     ff8:	f7 cf       	rjmp	.-18     	; 0xfe8 <vfprintf+0x372>
     ffa:	8a 94       	dec	r8
     ffc:	f3 01       	movw	r30, r6
     ffe:	e8 0d       	add	r30, r8
    1000:	f1 1d       	adc	r31, r1
    1002:	80 81       	ld	r24, Z
    1004:	b6 01       	movw	r22, r12
    1006:	90 e0       	ldi	r25, 0x00	; 0
    1008:	0e 94 76 09 	call	0x12ec	; 0x12ec <fputc>
    100c:	81 10       	cpse	r8, r1
    100e:	f5 cf       	rjmp	.-22     	; 0xffa <vfprintf+0x384>
    1010:	22 20       	and	r2, r2
    1012:	09 f4       	brne	.+2      	; 0x1016 <vfprintf+0x3a0>
    1014:	42 ce       	rjmp	.-892    	; 0xc9a <vfprintf+0x24>
    1016:	b6 01       	movw	r22, r12
    1018:	80 e2       	ldi	r24, 0x20	; 32
    101a:	90 e0       	ldi	r25, 0x00	; 0
    101c:	0e 94 76 09 	call	0x12ec	; 0x12ec <fputc>
    1020:	2a 94       	dec	r2
    1022:	f6 cf       	rjmp	.-20     	; 0x1010 <vfprintf+0x39a>
    1024:	f6 01       	movw	r30, r12
    1026:	86 81       	ldd	r24, Z+6	; 0x06
    1028:	97 81       	ldd	r25, Z+7	; 0x07
    102a:	02 c0       	rjmp	.+4      	; 0x1030 <vfprintf+0x3ba>
    102c:	8f ef       	ldi	r24, 0xFF	; 255
    102e:	9f ef       	ldi	r25, 0xFF	; 255
    1030:	2b 96       	adiw	r28, 0x0b	; 11
    1032:	e2 e1       	ldi	r30, 0x12	; 18
    1034:	0c 94 5e 0a 	jmp	0x14bc	; 0x14bc <__epilogue_restores__>

00001038 <calloc>:
    1038:	0f 93       	push	r16
    103a:	1f 93       	push	r17
    103c:	cf 93       	push	r28
    103e:	df 93       	push	r29
    1040:	86 9f       	mul	r24, r22
    1042:	80 01       	movw	r16, r0
    1044:	87 9f       	mul	r24, r23
    1046:	10 0d       	add	r17, r0
    1048:	96 9f       	mul	r25, r22
    104a:	10 0d       	add	r17, r0
    104c:	11 24       	eor	r1, r1
    104e:	c8 01       	movw	r24, r16
    1050:	0e 94 38 08 	call	0x1070	; 0x1070 <malloc>
    1054:	ec 01       	movw	r28, r24
    1056:	00 97       	sbiw	r24, 0x00	; 0
    1058:	29 f0       	breq	.+10     	; 0x1064 <calloc+0x2c>
    105a:	a8 01       	movw	r20, r16
    105c:	60 e0       	ldi	r22, 0x00	; 0
    105e:	70 e0       	ldi	r23, 0x00	; 0
    1060:	0e 94 64 09 	call	0x12c8	; 0x12c8 <memset>
    1064:	ce 01       	movw	r24, r28
    1066:	df 91       	pop	r29
    1068:	cf 91       	pop	r28
    106a:	1f 91       	pop	r17
    106c:	0f 91       	pop	r16
    106e:	08 95       	ret

00001070 <malloc>:
    1070:	0f 93       	push	r16
    1072:	1f 93       	push	r17
    1074:	cf 93       	push	r28
    1076:	df 93       	push	r29
    1078:	82 30       	cpi	r24, 0x02	; 2
    107a:	91 05       	cpc	r25, r1
    107c:	10 f4       	brcc	.+4      	; 0x1082 <malloc+0x12>
    107e:	82 e0       	ldi	r24, 0x02	; 2
    1080:	90 e0       	ldi	r25, 0x00	; 0
    1082:	e0 91 a2 02 	lds	r30, 0x02A2	; 0x8002a2 <__flp>
    1086:	f0 91 a3 02 	lds	r31, 0x02A3	; 0x8002a3 <__flp+0x1>
    108a:	20 e0       	ldi	r18, 0x00	; 0
    108c:	30 e0       	ldi	r19, 0x00	; 0
    108e:	a0 e0       	ldi	r26, 0x00	; 0
    1090:	b0 e0       	ldi	r27, 0x00	; 0
    1092:	30 97       	sbiw	r30, 0x00	; 0
    1094:	19 f1       	breq	.+70     	; 0x10dc <malloc+0x6c>
    1096:	40 81       	ld	r20, Z
    1098:	51 81       	ldd	r21, Z+1	; 0x01
    109a:	02 81       	ldd	r16, Z+2	; 0x02
    109c:	13 81       	ldd	r17, Z+3	; 0x03
    109e:	48 17       	cp	r20, r24
    10a0:	59 07       	cpc	r21, r25
    10a2:	c8 f0       	brcs	.+50     	; 0x10d6 <malloc+0x66>
    10a4:	84 17       	cp	r24, r20
    10a6:	95 07       	cpc	r25, r21
    10a8:	69 f4       	brne	.+26     	; 0x10c4 <malloc+0x54>
    10aa:	10 97       	sbiw	r26, 0x00	; 0
    10ac:	31 f0       	breq	.+12     	; 0x10ba <malloc+0x4a>
    10ae:	12 96       	adiw	r26, 0x02	; 2
    10b0:	0c 93       	st	X, r16
    10b2:	12 97       	sbiw	r26, 0x02	; 2
    10b4:	13 96       	adiw	r26, 0x03	; 3
    10b6:	1c 93       	st	X, r17
    10b8:	27 c0       	rjmp	.+78     	; 0x1108 <malloc+0x98>
    10ba:	00 93 a2 02 	sts	0x02A2, r16	; 0x8002a2 <__flp>
    10be:	10 93 a3 02 	sts	0x02A3, r17	; 0x8002a3 <__flp+0x1>
    10c2:	22 c0       	rjmp	.+68     	; 0x1108 <malloc+0x98>
    10c4:	21 15       	cp	r18, r1
    10c6:	31 05       	cpc	r19, r1
    10c8:	19 f0       	breq	.+6      	; 0x10d0 <malloc+0x60>
    10ca:	42 17       	cp	r20, r18
    10cc:	53 07       	cpc	r21, r19
    10ce:	18 f4       	brcc	.+6      	; 0x10d6 <malloc+0x66>
    10d0:	9a 01       	movw	r18, r20
    10d2:	bd 01       	movw	r22, r26
    10d4:	ef 01       	movw	r28, r30
    10d6:	df 01       	movw	r26, r30
    10d8:	f8 01       	movw	r30, r16
    10da:	db cf       	rjmp	.-74     	; 0x1092 <malloc+0x22>
    10dc:	21 15       	cp	r18, r1
    10de:	31 05       	cpc	r19, r1
    10e0:	f9 f0       	breq	.+62     	; 0x1120 <malloc+0xb0>
    10e2:	28 1b       	sub	r18, r24
    10e4:	39 0b       	sbc	r19, r25
    10e6:	24 30       	cpi	r18, 0x04	; 4
    10e8:	31 05       	cpc	r19, r1
    10ea:	80 f4       	brcc	.+32     	; 0x110c <malloc+0x9c>
    10ec:	8a 81       	ldd	r24, Y+2	; 0x02
    10ee:	9b 81       	ldd	r25, Y+3	; 0x03
    10f0:	61 15       	cp	r22, r1
    10f2:	71 05       	cpc	r23, r1
    10f4:	21 f0       	breq	.+8      	; 0x10fe <malloc+0x8e>
    10f6:	fb 01       	movw	r30, r22
    10f8:	93 83       	std	Z+3, r25	; 0x03
    10fa:	82 83       	std	Z+2, r24	; 0x02
    10fc:	04 c0       	rjmp	.+8      	; 0x1106 <malloc+0x96>
    10fe:	90 93 a3 02 	sts	0x02A3, r25	; 0x8002a3 <__flp+0x1>
    1102:	80 93 a2 02 	sts	0x02A2, r24	; 0x8002a2 <__flp>
    1106:	fe 01       	movw	r30, r28
    1108:	32 96       	adiw	r30, 0x02	; 2
    110a:	44 c0       	rjmp	.+136    	; 0x1194 <malloc+0x124>
    110c:	fe 01       	movw	r30, r28
    110e:	e2 0f       	add	r30, r18
    1110:	f3 1f       	adc	r31, r19
    1112:	81 93       	st	Z+, r24
    1114:	91 93       	st	Z+, r25
    1116:	22 50       	subi	r18, 0x02	; 2
    1118:	31 09       	sbc	r19, r1
    111a:	39 83       	std	Y+1, r19	; 0x01
    111c:	28 83       	st	Y, r18
    111e:	3a c0       	rjmp	.+116    	; 0x1194 <malloc+0x124>
    1120:	20 91 a0 02 	lds	r18, 0x02A0	; 0x8002a0 <__brkval>
    1124:	30 91 a1 02 	lds	r19, 0x02A1	; 0x8002a1 <__brkval+0x1>
    1128:	23 2b       	or	r18, r19
    112a:	41 f4       	brne	.+16     	; 0x113c <malloc+0xcc>
    112c:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
    1130:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
    1134:	30 93 a1 02 	sts	0x02A1, r19	; 0x8002a1 <__brkval+0x1>
    1138:	20 93 a0 02 	sts	0x02A0, r18	; 0x8002a0 <__brkval>
    113c:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
    1140:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
    1144:	21 15       	cp	r18, r1
    1146:	31 05       	cpc	r19, r1
    1148:	41 f4       	brne	.+16     	; 0x115a <malloc+0xea>
    114a:	2d b7       	in	r18, 0x3d	; 61
    114c:	3e b7       	in	r19, 0x3e	; 62
    114e:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
    1152:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
    1156:	24 1b       	sub	r18, r20
    1158:	35 0b       	sbc	r19, r21
    115a:	e0 91 a0 02 	lds	r30, 0x02A0	; 0x8002a0 <__brkval>
    115e:	f0 91 a1 02 	lds	r31, 0x02A1	; 0x8002a1 <__brkval+0x1>
    1162:	e2 17       	cp	r30, r18
    1164:	f3 07       	cpc	r31, r19
    1166:	a0 f4       	brcc	.+40     	; 0x1190 <malloc+0x120>
    1168:	2e 1b       	sub	r18, r30
    116a:	3f 0b       	sbc	r19, r31
    116c:	28 17       	cp	r18, r24
    116e:	39 07       	cpc	r19, r25
    1170:	78 f0       	brcs	.+30     	; 0x1190 <malloc+0x120>
    1172:	ac 01       	movw	r20, r24
    1174:	4e 5f       	subi	r20, 0xFE	; 254
    1176:	5f 4f       	sbci	r21, 0xFF	; 255
    1178:	24 17       	cp	r18, r20
    117a:	35 07       	cpc	r19, r21
    117c:	48 f0       	brcs	.+18     	; 0x1190 <malloc+0x120>
    117e:	4e 0f       	add	r20, r30
    1180:	5f 1f       	adc	r21, r31
    1182:	50 93 a1 02 	sts	0x02A1, r21	; 0x8002a1 <__brkval+0x1>
    1186:	40 93 a0 02 	sts	0x02A0, r20	; 0x8002a0 <__brkval>
    118a:	81 93       	st	Z+, r24
    118c:	91 93       	st	Z+, r25
    118e:	02 c0       	rjmp	.+4      	; 0x1194 <malloc+0x124>
    1190:	e0 e0       	ldi	r30, 0x00	; 0
    1192:	f0 e0       	ldi	r31, 0x00	; 0
    1194:	cf 01       	movw	r24, r30
    1196:	df 91       	pop	r29
    1198:	cf 91       	pop	r28
    119a:	1f 91       	pop	r17
    119c:	0f 91       	pop	r16
    119e:	08 95       	ret

000011a0 <free>:
    11a0:	cf 93       	push	r28
    11a2:	df 93       	push	r29
    11a4:	00 97       	sbiw	r24, 0x00	; 0
    11a6:	09 f4       	brne	.+2      	; 0x11aa <free+0xa>
    11a8:	81 c0       	rjmp	.+258    	; 0x12ac <free+0x10c>
    11aa:	fc 01       	movw	r30, r24
    11ac:	32 97       	sbiw	r30, 0x02	; 2
    11ae:	13 82       	std	Z+3, r1	; 0x03
    11b0:	12 82       	std	Z+2, r1	; 0x02
    11b2:	a0 91 a2 02 	lds	r26, 0x02A2	; 0x8002a2 <__flp>
    11b6:	b0 91 a3 02 	lds	r27, 0x02A3	; 0x8002a3 <__flp+0x1>
    11ba:	10 97       	sbiw	r26, 0x00	; 0
    11bc:	81 f4       	brne	.+32     	; 0x11de <free+0x3e>
    11be:	20 81       	ld	r18, Z
    11c0:	31 81       	ldd	r19, Z+1	; 0x01
    11c2:	82 0f       	add	r24, r18
    11c4:	93 1f       	adc	r25, r19
    11c6:	20 91 a0 02 	lds	r18, 0x02A0	; 0x8002a0 <__brkval>
    11ca:	30 91 a1 02 	lds	r19, 0x02A1	; 0x8002a1 <__brkval+0x1>
    11ce:	28 17       	cp	r18, r24
    11d0:	39 07       	cpc	r19, r25
    11d2:	51 f5       	brne	.+84     	; 0x1228 <free+0x88>
    11d4:	f0 93 a1 02 	sts	0x02A1, r31	; 0x8002a1 <__brkval+0x1>
    11d8:	e0 93 a0 02 	sts	0x02A0, r30	; 0x8002a0 <__brkval>
    11dc:	67 c0       	rjmp	.+206    	; 0x12ac <free+0x10c>
    11de:	ed 01       	movw	r28, r26
    11e0:	20 e0       	ldi	r18, 0x00	; 0
    11e2:	30 e0       	ldi	r19, 0x00	; 0
    11e4:	ce 17       	cp	r28, r30
    11e6:	df 07       	cpc	r29, r31
    11e8:	40 f4       	brcc	.+16     	; 0x11fa <free+0x5a>
    11ea:	4a 81       	ldd	r20, Y+2	; 0x02
    11ec:	5b 81       	ldd	r21, Y+3	; 0x03
    11ee:	9e 01       	movw	r18, r28
    11f0:	41 15       	cp	r20, r1
    11f2:	51 05       	cpc	r21, r1
    11f4:	f1 f0       	breq	.+60     	; 0x1232 <free+0x92>
    11f6:	ea 01       	movw	r28, r20
    11f8:	f5 cf       	rjmp	.-22     	; 0x11e4 <free+0x44>
    11fa:	d3 83       	std	Z+3, r29	; 0x03
    11fc:	c2 83       	std	Z+2, r28	; 0x02
    11fe:	40 81       	ld	r20, Z
    1200:	51 81       	ldd	r21, Z+1	; 0x01
    1202:	84 0f       	add	r24, r20
    1204:	95 1f       	adc	r25, r21
    1206:	c8 17       	cp	r28, r24
    1208:	d9 07       	cpc	r29, r25
    120a:	59 f4       	brne	.+22     	; 0x1222 <free+0x82>
    120c:	88 81       	ld	r24, Y
    120e:	99 81       	ldd	r25, Y+1	; 0x01
    1210:	84 0f       	add	r24, r20
    1212:	95 1f       	adc	r25, r21
    1214:	02 96       	adiw	r24, 0x02	; 2
    1216:	91 83       	std	Z+1, r25	; 0x01
    1218:	80 83       	st	Z, r24
    121a:	8a 81       	ldd	r24, Y+2	; 0x02
    121c:	9b 81       	ldd	r25, Y+3	; 0x03
    121e:	93 83       	std	Z+3, r25	; 0x03
    1220:	82 83       	std	Z+2, r24	; 0x02
    1222:	21 15       	cp	r18, r1
    1224:	31 05       	cpc	r19, r1
    1226:	29 f4       	brne	.+10     	; 0x1232 <free+0x92>
    1228:	f0 93 a3 02 	sts	0x02A3, r31	; 0x8002a3 <__flp+0x1>
    122c:	e0 93 a2 02 	sts	0x02A2, r30	; 0x8002a2 <__flp>
    1230:	3d c0       	rjmp	.+122    	; 0x12ac <free+0x10c>
    1232:	e9 01       	movw	r28, r18
    1234:	fb 83       	std	Y+3, r31	; 0x03
    1236:	ea 83       	std	Y+2, r30	; 0x02
    1238:	49 91       	ld	r20, Y+
    123a:	59 91       	ld	r21, Y+
    123c:	c4 0f       	add	r28, r20
    123e:	d5 1f       	adc	r29, r21
    1240:	ec 17       	cp	r30, r28
    1242:	fd 07       	cpc	r31, r29
    1244:	61 f4       	brne	.+24     	; 0x125e <free+0xbe>
    1246:	80 81       	ld	r24, Z
    1248:	91 81       	ldd	r25, Z+1	; 0x01
    124a:	84 0f       	add	r24, r20
    124c:	95 1f       	adc	r25, r21
    124e:	02 96       	adiw	r24, 0x02	; 2
    1250:	e9 01       	movw	r28, r18
    1252:	99 83       	std	Y+1, r25	; 0x01
    1254:	88 83       	st	Y, r24
    1256:	82 81       	ldd	r24, Z+2	; 0x02
    1258:	93 81       	ldd	r25, Z+3	; 0x03
    125a:	9b 83       	std	Y+3, r25	; 0x03
    125c:	8a 83       	std	Y+2, r24	; 0x02
    125e:	e0 e0       	ldi	r30, 0x00	; 0
    1260:	f0 e0       	ldi	r31, 0x00	; 0
    1262:	12 96       	adiw	r26, 0x02	; 2
    1264:	8d 91       	ld	r24, X+
    1266:	9c 91       	ld	r25, X
    1268:	13 97       	sbiw	r26, 0x03	; 3
    126a:	00 97       	sbiw	r24, 0x00	; 0
    126c:	19 f0       	breq	.+6      	; 0x1274 <free+0xd4>
    126e:	fd 01       	movw	r30, r26
    1270:	dc 01       	movw	r26, r24
    1272:	f7 cf       	rjmp	.-18     	; 0x1262 <free+0xc2>
    1274:	8d 91       	ld	r24, X+
    1276:	9c 91       	ld	r25, X
    1278:	11 97       	sbiw	r26, 0x01	; 1
    127a:	9d 01       	movw	r18, r26
    127c:	2e 5f       	subi	r18, 0xFE	; 254
    127e:	3f 4f       	sbci	r19, 0xFF	; 255
    1280:	82 0f       	add	r24, r18
    1282:	93 1f       	adc	r25, r19
    1284:	20 91 a0 02 	lds	r18, 0x02A0	; 0x8002a0 <__brkval>
    1288:	30 91 a1 02 	lds	r19, 0x02A1	; 0x8002a1 <__brkval+0x1>
    128c:	28 17       	cp	r18, r24
    128e:	39 07       	cpc	r19, r25
    1290:	69 f4       	brne	.+26     	; 0x12ac <free+0x10c>
    1292:	30 97       	sbiw	r30, 0x00	; 0
    1294:	29 f4       	brne	.+10     	; 0x12a0 <free+0x100>
    1296:	10 92 a3 02 	sts	0x02A3, r1	; 0x8002a3 <__flp+0x1>
    129a:	10 92 a2 02 	sts	0x02A2, r1	; 0x8002a2 <__flp>
    129e:	02 c0       	rjmp	.+4      	; 0x12a4 <free+0x104>
    12a0:	13 82       	std	Z+3, r1	; 0x03
    12a2:	12 82       	std	Z+2, r1	; 0x02
    12a4:	b0 93 a1 02 	sts	0x02A1, r27	; 0x8002a1 <__brkval+0x1>
    12a8:	a0 93 a0 02 	sts	0x02A0, r26	; 0x8002a0 <__brkval>
    12ac:	df 91       	pop	r29
    12ae:	cf 91       	pop	r28
    12b0:	08 95       	ret

000012b2 <strnlen_P>:
    12b2:	fc 01       	movw	r30, r24
    12b4:	05 90       	lpm	r0, Z+
    12b6:	61 50       	subi	r22, 0x01	; 1
    12b8:	70 40       	sbci	r23, 0x00	; 0
    12ba:	01 10       	cpse	r0, r1
    12bc:	d8 f7       	brcc	.-10     	; 0x12b4 <strnlen_P+0x2>
    12be:	80 95       	com	r24
    12c0:	90 95       	com	r25
    12c2:	8e 0f       	add	r24, r30
    12c4:	9f 1f       	adc	r25, r31
    12c6:	08 95       	ret

000012c8 <memset>:
    12c8:	dc 01       	movw	r26, r24
    12ca:	01 c0       	rjmp	.+2      	; 0x12ce <memset+0x6>
    12cc:	6d 93       	st	X+, r22
    12ce:	41 50       	subi	r20, 0x01	; 1
    12d0:	50 40       	sbci	r21, 0x00	; 0
    12d2:	e0 f7       	brcc	.-8      	; 0x12cc <memset+0x4>
    12d4:	08 95       	ret

000012d6 <strnlen>:
    12d6:	fc 01       	movw	r30, r24
    12d8:	61 50       	subi	r22, 0x01	; 1
    12da:	70 40       	sbci	r23, 0x00	; 0
    12dc:	01 90       	ld	r0, Z+
    12de:	01 10       	cpse	r0, r1
    12e0:	d8 f7       	brcc	.-10     	; 0x12d8 <strnlen+0x2>
    12e2:	80 95       	com	r24
    12e4:	90 95       	com	r25
    12e6:	8e 0f       	add	r24, r30
    12e8:	9f 1f       	adc	r25, r31
    12ea:	08 95       	ret

000012ec <fputc>:
    12ec:	0f 93       	push	r16
    12ee:	1f 93       	push	r17
    12f0:	cf 93       	push	r28
    12f2:	df 93       	push	r29
    12f4:	fb 01       	movw	r30, r22
    12f6:	23 81       	ldd	r18, Z+3	; 0x03
    12f8:	21 fd       	sbrc	r18, 1
    12fa:	03 c0       	rjmp	.+6      	; 0x1302 <fputc+0x16>
    12fc:	8f ef       	ldi	r24, 0xFF	; 255
    12fe:	9f ef       	ldi	r25, 0xFF	; 255
    1300:	2c c0       	rjmp	.+88     	; 0x135a <fputc+0x6e>
    1302:	22 ff       	sbrs	r18, 2
    1304:	16 c0       	rjmp	.+44     	; 0x1332 <fputc+0x46>
    1306:	46 81       	ldd	r20, Z+6	; 0x06
    1308:	57 81       	ldd	r21, Z+7	; 0x07
    130a:	24 81       	ldd	r18, Z+4	; 0x04
    130c:	35 81       	ldd	r19, Z+5	; 0x05
    130e:	42 17       	cp	r20, r18
    1310:	53 07       	cpc	r21, r19
    1312:	44 f4       	brge	.+16     	; 0x1324 <fputc+0x38>
    1314:	a0 81       	ld	r26, Z
    1316:	b1 81       	ldd	r27, Z+1	; 0x01
    1318:	9d 01       	movw	r18, r26
    131a:	2f 5f       	subi	r18, 0xFF	; 255
    131c:	3f 4f       	sbci	r19, 0xFF	; 255
    131e:	31 83       	std	Z+1, r19	; 0x01
    1320:	20 83       	st	Z, r18
    1322:	8c 93       	st	X, r24
    1324:	26 81       	ldd	r18, Z+6	; 0x06
    1326:	37 81       	ldd	r19, Z+7	; 0x07
    1328:	2f 5f       	subi	r18, 0xFF	; 255
    132a:	3f 4f       	sbci	r19, 0xFF	; 255
    132c:	37 83       	std	Z+7, r19	; 0x07
    132e:	26 83       	std	Z+6, r18	; 0x06
    1330:	14 c0       	rjmp	.+40     	; 0x135a <fputc+0x6e>
    1332:	8b 01       	movw	r16, r22
    1334:	ec 01       	movw	r28, r24
    1336:	fb 01       	movw	r30, r22
    1338:	00 84       	ldd	r0, Z+8	; 0x08
    133a:	f1 85       	ldd	r31, Z+9	; 0x09
    133c:	e0 2d       	mov	r30, r0
    133e:	09 95       	icall
    1340:	89 2b       	or	r24, r25
    1342:	e1 f6       	brne	.-72     	; 0x12fc <fputc+0x10>
    1344:	d8 01       	movw	r26, r16
    1346:	16 96       	adiw	r26, 0x06	; 6
    1348:	8d 91       	ld	r24, X+
    134a:	9c 91       	ld	r25, X
    134c:	17 97       	sbiw	r26, 0x07	; 7
    134e:	01 96       	adiw	r24, 0x01	; 1
    1350:	17 96       	adiw	r26, 0x07	; 7
    1352:	9c 93       	st	X, r25
    1354:	8e 93       	st	-X, r24
    1356:	16 97       	sbiw	r26, 0x06	; 6
    1358:	ce 01       	movw	r24, r28
    135a:	df 91       	pop	r29
    135c:	cf 91       	pop	r28
    135e:	1f 91       	pop	r17
    1360:	0f 91       	pop	r16
    1362:	08 95       	ret

00001364 <__ultoa_invert>:
    1364:	fa 01       	movw	r30, r20
    1366:	aa 27       	eor	r26, r26
    1368:	28 30       	cpi	r18, 0x08	; 8
    136a:	51 f1       	breq	.+84     	; 0x13c0 <__ultoa_invert+0x5c>
    136c:	20 31       	cpi	r18, 0x10	; 16
    136e:	81 f1       	breq	.+96     	; 0x13d0 <__ultoa_invert+0x6c>
    1370:	e8 94       	clt
    1372:	6f 93       	push	r22
    1374:	6e 7f       	andi	r22, 0xFE	; 254
    1376:	6e 5f       	subi	r22, 0xFE	; 254
    1378:	7f 4f       	sbci	r23, 0xFF	; 255
    137a:	8f 4f       	sbci	r24, 0xFF	; 255
    137c:	9f 4f       	sbci	r25, 0xFF	; 255
    137e:	af 4f       	sbci	r26, 0xFF	; 255
    1380:	b1 e0       	ldi	r27, 0x01	; 1
    1382:	3e d0       	rcall	.+124    	; 0x1400 <__ultoa_invert+0x9c>
    1384:	b4 e0       	ldi	r27, 0x04	; 4
    1386:	3c d0       	rcall	.+120    	; 0x1400 <__ultoa_invert+0x9c>
    1388:	67 0f       	add	r22, r23
    138a:	78 1f       	adc	r23, r24
    138c:	89 1f       	adc	r24, r25
    138e:	9a 1f       	adc	r25, r26
    1390:	a1 1d       	adc	r26, r1
    1392:	68 0f       	add	r22, r24
    1394:	79 1f       	adc	r23, r25
    1396:	8a 1f       	adc	r24, r26
    1398:	91 1d       	adc	r25, r1
    139a:	a1 1d       	adc	r26, r1
    139c:	6a 0f       	add	r22, r26
    139e:	71 1d       	adc	r23, r1
    13a0:	81 1d       	adc	r24, r1
    13a2:	91 1d       	adc	r25, r1
    13a4:	a1 1d       	adc	r26, r1
    13a6:	20 d0       	rcall	.+64     	; 0x13e8 <__ultoa_invert+0x84>
    13a8:	09 f4       	brne	.+2      	; 0x13ac <__ultoa_invert+0x48>
    13aa:	68 94       	set
    13ac:	3f 91       	pop	r19
    13ae:	2a e0       	ldi	r18, 0x0A	; 10
    13b0:	26 9f       	mul	r18, r22
    13b2:	11 24       	eor	r1, r1
    13b4:	30 19       	sub	r19, r0
    13b6:	30 5d       	subi	r19, 0xD0	; 208
    13b8:	31 93       	st	Z+, r19
    13ba:	de f6       	brtc	.-74     	; 0x1372 <__ultoa_invert+0xe>
    13bc:	cf 01       	movw	r24, r30
    13be:	08 95       	ret
    13c0:	46 2f       	mov	r20, r22
    13c2:	47 70       	andi	r20, 0x07	; 7
    13c4:	40 5d       	subi	r20, 0xD0	; 208
    13c6:	41 93       	st	Z+, r20
    13c8:	b3 e0       	ldi	r27, 0x03	; 3
    13ca:	0f d0       	rcall	.+30     	; 0x13ea <__ultoa_invert+0x86>
    13cc:	c9 f7       	brne	.-14     	; 0x13c0 <__ultoa_invert+0x5c>
    13ce:	f6 cf       	rjmp	.-20     	; 0x13bc <__ultoa_invert+0x58>
    13d0:	46 2f       	mov	r20, r22
    13d2:	4f 70       	andi	r20, 0x0F	; 15
    13d4:	40 5d       	subi	r20, 0xD0	; 208
    13d6:	4a 33       	cpi	r20, 0x3A	; 58
    13d8:	18 f0       	brcs	.+6      	; 0x13e0 <__ultoa_invert+0x7c>
    13da:	49 5d       	subi	r20, 0xD9	; 217
    13dc:	31 fd       	sbrc	r19, 1
    13de:	40 52       	subi	r20, 0x20	; 32
    13e0:	41 93       	st	Z+, r20
    13e2:	02 d0       	rcall	.+4      	; 0x13e8 <__ultoa_invert+0x84>
    13e4:	a9 f7       	brne	.-22     	; 0x13d0 <__ultoa_invert+0x6c>
    13e6:	ea cf       	rjmp	.-44     	; 0x13bc <__ultoa_invert+0x58>
    13e8:	b4 e0       	ldi	r27, 0x04	; 4
    13ea:	a6 95       	lsr	r26
    13ec:	97 95       	ror	r25
    13ee:	87 95       	ror	r24
    13f0:	77 95       	ror	r23
    13f2:	67 95       	ror	r22
    13f4:	ba 95       	dec	r27
    13f6:	c9 f7       	brne	.-14     	; 0x13ea <__ultoa_invert+0x86>
    13f8:	00 97       	sbiw	r24, 0x00	; 0
    13fa:	61 05       	cpc	r22, r1
    13fc:	71 05       	cpc	r23, r1
    13fe:	08 95       	ret
    1400:	9b 01       	movw	r18, r22
    1402:	ac 01       	movw	r20, r24
    1404:	0a 2e       	mov	r0, r26
    1406:	06 94       	lsr	r0
    1408:	57 95       	ror	r21
    140a:	47 95       	ror	r20
    140c:	37 95       	ror	r19
    140e:	27 95       	ror	r18
    1410:	ba 95       	dec	r27
    1412:	c9 f7       	brne	.-14     	; 0x1406 <__ultoa_invert+0xa2>
    1414:	62 0f       	add	r22, r18
    1416:	73 1f       	adc	r23, r19
    1418:	84 1f       	adc	r24, r20
    141a:	95 1f       	adc	r25, r21
    141c:	a0 1d       	adc	r26, r0
    141e:	08 95       	ret

00001420 <__divmodsi4>:
    1420:	05 2e       	mov	r0, r21
    1422:	97 fb       	bst	r25, 7
    1424:	1e f4       	brtc	.+6      	; 0x142c <__divmodsi4+0xc>
    1426:	00 94       	com	r0
    1428:	0e 94 27 0a 	call	0x144e	; 0x144e <__negsi2>
    142c:	57 fd       	sbrc	r21, 7
    142e:	07 d0       	rcall	.+14     	; 0x143e <__divmodsi4_neg2>
    1430:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <__udivmodsi4>
    1434:	07 fc       	sbrc	r0, 7
    1436:	03 d0       	rcall	.+6      	; 0x143e <__divmodsi4_neg2>
    1438:	4e f4       	brtc	.+18     	; 0x144c <__divmodsi4_exit>
    143a:	0c 94 27 0a 	jmp	0x144e	; 0x144e <__negsi2>

0000143e <__divmodsi4_neg2>:
    143e:	50 95       	com	r21
    1440:	40 95       	com	r20
    1442:	30 95       	com	r19
    1444:	21 95       	neg	r18
    1446:	3f 4f       	sbci	r19, 0xFF	; 255
    1448:	4f 4f       	sbci	r20, 0xFF	; 255
    144a:	5f 4f       	sbci	r21, 0xFF	; 255

0000144c <__divmodsi4_exit>:
    144c:	08 95       	ret

0000144e <__negsi2>:
    144e:	90 95       	com	r25
    1450:	80 95       	com	r24
    1452:	70 95       	com	r23
    1454:	61 95       	neg	r22
    1456:	7f 4f       	sbci	r23, 0xFF	; 255
    1458:	8f 4f       	sbci	r24, 0xFF	; 255
    145a:	9f 4f       	sbci	r25, 0xFF	; 255
    145c:	08 95       	ret

0000145e <__muluhisi3>:
    145e:	0e 94 9b 0a 	call	0x1536	; 0x1536 <__umulhisi3>
    1462:	a5 9f       	mul	r26, r21
    1464:	90 0d       	add	r25, r0
    1466:	b4 9f       	mul	r27, r20
    1468:	90 0d       	add	r25, r0
    146a:	a4 9f       	mul	r26, r20
    146c:	80 0d       	add	r24, r0
    146e:	91 1d       	adc	r25, r1
    1470:	11 24       	eor	r1, r1
    1472:	08 95       	ret

00001474 <__mulshisi3>:
    1474:	b7 ff       	sbrs	r27, 7
    1476:	0c 94 2f 0a 	jmp	0x145e	; 0x145e <__muluhisi3>

0000147a <__mulohisi3>:
    147a:	0e 94 2f 0a 	call	0x145e	; 0x145e <__muluhisi3>
    147e:	82 1b       	sub	r24, r18
    1480:	93 0b       	sbc	r25, r19
    1482:	08 95       	ret

00001484 <__prologue_saves__>:
    1484:	2f 92       	push	r2
    1486:	3f 92       	push	r3
    1488:	4f 92       	push	r4
    148a:	5f 92       	push	r5
    148c:	6f 92       	push	r6
    148e:	7f 92       	push	r7
    1490:	8f 92       	push	r8
    1492:	9f 92       	push	r9
    1494:	af 92       	push	r10
    1496:	bf 92       	push	r11
    1498:	cf 92       	push	r12
    149a:	df 92       	push	r13
    149c:	ef 92       	push	r14
    149e:	ff 92       	push	r15
    14a0:	0f 93       	push	r16
    14a2:	1f 93       	push	r17
    14a4:	cf 93       	push	r28
    14a6:	df 93       	push	r29
    14a8:	cd b7       	in	r28, 0x3d	; 61
    14aa:	de b7       	in	r29, 0x3e	; 62
    14ac:	ca 1b       	sub	r28, r26
    14ae:	db 0b       	sbc	r29, r27
    14b0:	0f b6       	in	r0, 0x3f	; 63
    14b2:	f8 94       	cli
    14b4:	de bf       	out	0x3e, r29	; 62
    14b6:	0f be       	out	0x3f, r0	; 63
    14b8:	cd bf       	out	0x3d, r28	; 61
    14ba:	09 94       	ijmp

000014bc <__epilogue_restores__>:
    14bc:	2a 88       	ldd	r2, Y+18	; 0x12
    14be:	39 88       	ldd	r3, Y+17	; 0x11
    14c0:	48 88       	ldd	r4, Y+16	; 0x10
    14c2:	5f 84       	ldd	r5, Y+15	; 0x0f
    14c4:	6e 84       	ldd	r6, Y+14	; 0x0e
    14c6:	7d 84       	ldd	r7, Y+13	; 0x0d
    14c8:	8c 84       	ldd	r8, Y+12	; 0x0c
    14ca:	9b 84       	ldd	r9, Y+11	; 0x0b
    14cc:	aa 84       	ldd	r10, Y+10	; 0x0a
    14ce:	b9 84       	ldd	r11, Y+9	; 0x09
    14d0:	c8 84       	ldd	r12, Y+8	; 0x08
    14d2:	df 80       	ldd	r13, Y+7	; 0x07
    14d4:	ee 80       	ldd	r14, Y+6	; 0x06
    14d6:	fd 80       	ldd	r15, Y+5	; 0x05
    14d8:	0c 81       	ldd	r16, Y+4	; 0x04
    14da:	1b 81       	ldd	r17, Y+3	; 0x03
    14dc:	aa 81       	ldd	r26, Y+2	; 0x02
    14de:	b9 81       	ldd	r27, Y+1	; 0x01
    14e0:	ce 0f       	add	r28, r30
    14e2:	d1 1d       	adc	r29, r1
    14e4:	0f b6       	in	r0, 0x3f	; 63
    14e6:	f8 94       	cli
    14e8:	de bf       	out	0x3e, r29	; 62
    14ea:	0f be       	out	0x3f, r0	; 63
    14ec:	cd bf       	out	0x3d, r28	; 61
    14ee:	ed 01       	movw	r28, r26
    14f0:	08 95       	ret

000014f2 <__udivmodsi4>:
    14f2:	a1 e2       	ldi	r26, 0x21	; 33
    14f4:	1a 2e       	mov	r1, r26
    14f6:	aa 1b       	sub	r26, r26
    14f8:	bb 1b       	sub	r27, r27
    14fa:	fd 01       	movw	r30, r26
    14fc:	0d c0       	rjmp	.+26     	; 0x1518 <__udivmodsi4_ep>

000014fe <__udivmodsi4_loop>:
    14fe:	aa 1f       	adc	r26, r26
    1500:	bb 1f       	adc	r27, r27
    1502:	ee 1f       	adc	r30, r30
    1504:	ff 1f       	adc	r31, r31
    1506:	a2 17       	cp	r26, r18
    1508:	b3 07       	cpc	r27, r19
    150a:	e4 07       	cpc	r30, r20
    150c:	f5 07       	cpc	r31, r21
    150e:	20 f0       	brcs	.+8      	; 0x1518 <__udivmodsi4_ep>
    1510:	a2 1b       	sub	r26, r18
    1512:	b3 0b       	sbc	r27, r19
    1514:	e4 0b       	sbc	r30, r20
    1516:	f5 0b       	sbc	r31, r21

00001518 <__udivmodsi4_ep>:
    1518:	66 1f       	adc	r22, r22
    151a:	77 1f       	adc	r23, r23
    151c:	88 1f       	adc	r24, r24
    151e:	99 1f       	adc	r25, r25
    1520:	1a 94       	dec	r1
    1522:	69 f7       	brne	.-38     	; 0x14fe <__udivmodsi4_loop>
    1524:	60 95       	com	r22
    1526:	70 95       	com	r23
    1528:	80 95       	com	r24
    152a:	90 95       	com	r25
    152c:	9b 01       	movw	r18, r22
    152e:	ac 01       	movw	r20, r24
    1530:	bd 01       	movw	r22, r26
    1532:	cf 01       	movw	r24, r30
    1534:	08 95       	ret

00001536 <__umulhisi3>:
    1536:	a2 9f       	mul	r26, r18
    1538:	b0 01       	movw	r22, r0
    153a:	b3 9f       	mul	r27, r19
    153c:	c0 01       	movw	r24, r0
    153e:	a3 9f       	mul	r26, r19
    1540:	70 0d       	add	r23, r0
    1542:	81 1d       	adc	r24, r1
    1544:	11 24       	eor	r1, r1
    1546:	91 1d       	adc	r25, r1
    1548:	b2 9f       	mul	r27, r18
    154a:	70 0d       	add	r23, r0
    154c:	81 1d       	adc	r24, r1
    154e:	11 24       	eor	r1, r1
    1550:	91 1d       	adc	r25, r1
    1552:	08 95       	ret

00001554 <_exit>:
    1554:	f8 94       	cli

00001556 <__stop_program>:
    1556:	ff cf       	rjmp	.-2      	; 0x1556 <__stop_program>
