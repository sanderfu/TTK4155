
byggern.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000116  00800100  0000172a  000017be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000172a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  00800216  00800216  000018d4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000018d4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001930  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000200  00000000  00000000  0000196c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000212d  00000000  00000000  00001b6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010e4  00000000  00000000  00003c99  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e35  00000000  00000000  00004d7d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000046c  00000000  00000000  00005bb4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007d4  00000000  00000000  00006020  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d5c  00000000  00000000  000067f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f0  00000000  00000000  00007550  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 cb 01 	jmp	0x396	; 0x396 <__ctors_end>
       4:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
       8:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
       c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      10:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      14:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      18:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      1c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      20:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      24:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      28:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      2c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      30:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      34:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      38:	0c 94 f4 01 	jmp	0x3e8	; 0x3e8 <__vector_14>
      3c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      40:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      44:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      48:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      4c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      50:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      54:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      58:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      5c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      60:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      64:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      68:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      6c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      70:	08 4a       	sbci	r16, 0xA8	; 168
      72:	d7 3b       	cpi	r29, 0xB7	; 183
      74:	3b ce       	rjmp	.-906    	; 0xfffffcec <__eeprom_end+0xff7efcec>
      76:	01 6e       	ori	r16, 0xE1	; 225
      78:	84 bc       	out	0x24, r8	; 36
      7a:	bf fd       	.word	0xfdbf	; ????
      7c:	c1 2f       	mov	r28, r17
      7e:	3d 6c       	ori	r19, 0xCD	; 205
      80:	74 31       	cpi	r23, 0x14	; 20
      82:	9a bd       	out	0x2a, r25	; 42
      84:	56 83       	std	Z+6, r21	; 0x06
      86:	3d da       	rcall	.-2950   	; 0xfffff502 <__eeprom_end+0xff7ef502>
      88:	3d 00       	.word	0x003d	; ????
      8a:	c7 7f       	andi	r28, 0xF7	; 247
      8c:	11 be       	out	0x31, r1	; 49
      8e:	d9 e4       	ldi	r29, 0x49	; 73
      90:	bb 4c       	sbci	r27, 0xCB	; 203
      92:	3e 91       	ld	r19, -X
      94:	6b aa       	std	Y+51, r6	; 0x33
      96:	aa be       	out	0x3a, r10	; 58
      98:	00 00       	nop
      9a:	00 80       	ld	r0, Z
      9c:	3f 00       	.word	0x003f	; ????

0000009e <__trampolines_end>:
	...
      a6:	00 06       	cpc	r0, r16
      a8:	5f 5f       	subi	r21, 0xFF	; 255
      aa:	06 00       	.word	0x0006	; ????
      ac:	00 00       	nop
      ae:	00 07       	cpc	r16, r16
      b0:	07 00       	.word	0x0007	; ????
      b2:	07 07       	cpc	r16, r23
      b4:	00 00       	nop
      b6:	14 7f       	andi	r17, 0xF4	; 244
      b8:	7f 14       	cp	r7, r15
      ba:	7f 7f       	andi	r23, 0xFF	; 255
      bc:	14 00       	.word	0x0014	; ????
      be:	24 2e       	mov	r2, r20
      c0:	6b 6b       	ori	r22, 0xBB	; 187
      c2:	3a 12       	cpse	r3, r26
      c4:	00 00       	nop
      c6:	46 66       	ori	r20, 0x66	; 102
      c8:	30 18       	sub	r3, r0
      ca:	0c 66       	ori	r16, 0x6C	; 108
      cc:	62 00       	.word	0x0062	; ????
      ce:	30 7a       	andi	r19, 0xA0	; 160
      d0:	4f 5d       	subi	r20, 0xDF	; 223
      d2:	37 7a       	andi	r19, 0xA7	; 167
      d4:	48 00       	.word	0x0048	; ????
      d6:	04 07       	cpc	r16, r20
      d8:	03 00       	.word	0x0003	; ????
      da:	00 00       	nop
      dc:	00 00       	nop
      de:	00 1c       	adc	r0, r0
      e0:	3e 63       	ori	r19, 0x3E	; 62
      e2:	41 00       	.word	0x0041	; ????
      e4:	00 00       	nop
      e6:	00 41       	sbci	r16, 0x10	; 16
      e8:	63 3e       	cpi	r22, 0xE3	; 227
      ea:	1c 00       	.word	0x001c	; ????
      ec:	00 00       	nop
      ee:	08 2a       	or	r0, r24
      f0:	3e 1c       	adc	r3, r14
      f2:	1c 3e       	cpi	r17, 0xEC	; 236
      f4:	2a 08       	sbc	r2, r10
      f6:	08 08       	sbc	r0, r8
      f8:	3e 3e       	cpi	r19, 0xEE	; 238
      fa:	08 08       	sbc	r0, r8
      fc:	00 00       	nop
      fe:	00 a0       	ldd	r0, Z+32	; 0x20
     100:	e0 60       	ori	r30, 0x00	; 0
     102:	00 00       	nop
     104:	00 00       	nop
     106:	08 08       	sbc	r0, r8
     108:	08 08       	sbc	r0, r8
     10a:	08 08       	sbc	r0, r8
     10c:	00 00       	nop
     10e:	00 00       	nop
     110:	60 60       	ori	r22, 0x00	; 0
     112:	00 00       	nop
     114:	00 00       	nop
     116:	60 30       	cpi	r22, 0x00	; 0
     118:	18 0c       	add	r1, r8
     11a:	06 03       	mulsu	r16, r22
     11c:	01 00       	.word	0x0001	; ????
     11e:	3e 7f       	andi	r19, 0xFE	; 254
     120:	59 4d       	sbci	r21, 0xD9	; 217
     122:	7f 3e       	cpi	r23, 0xEF	; 239
     124:	00 00       	nop
     126:	42 42       	sbci	r20, 0x22	; 34
     128:	7f 7f       	andi	r23, 0xFF	; 255
     12a:	40 40       	sbci	r20, 0x00	; 0
     12c:	00 00       	nop
     12e:	62 73       	andi	r22, 0x32	; 50
     130:	59 49       	sbci	r21, 0x99	; 153
     132:	6f 66       	ori	r22, 0x6F	; 111
     134:	00 00       	nop
     136:	22 63       	ori	r18, 0x32	; 50
     138:	49 49       	sbci	r20, 0x99	; 153
     13a:	7f 36       	cpi	r23, 0x6F	; 111
     13c:	00 00       	nop
     13e:	18 1c       	adc	r1, r8
     140:	16 13       	cpse	r17, r22
     142:	7f 7f       	andi	r23, 0xFF	; 255
     144:	10 00       	.word	0x0010	; ????
     146:	27 67       	ori	r18, 0x77	; 119
     148:	45 45       	sbci	r20, 0x55	; 85
     14a:	7d 39       	cpi	r23, 0x9D	; 157
     14c:	00 00       	nop
     14e:	3c 7e       	andi	r19, 0xEC	; 236
     150:	4b 49       	sbci	r20, 0x9B	; 155
     152:	79 30       	cpi	r23, 0x09	; 9
     154:	00 00       	nop
     156:	03 63       	ori	r16, 0x33	; 51
     158:	71 19       	sub	r23, r1
     15a:	0f 07       	cpc	r16, r31
     15c:	00 00       	nop
     15e:	36 7f       	andi	r19, 0xF6	; 246
     160:	49 49       	sbci	r20, 0x99	; 153
     162:	7f 36       	cpi	r23, 0x6F	; 111
     164:	00 00       	nop
     166:	06 4f       	sbci	r16, 0xF6	; 246
     168:	49 69       	ori	r20, 0x99	; 153
     16a:	3f 1e       	adc	r3, r31
     16c:	00 00       	nop
     16e:	00 00       	nop
     170:	6c 6c       	ori	r22, 0xCC	; 204
     172:	00 00       	nop
     174:	00 00       	nop
     176:	00 a0       	ldd	r0, Z+32	; 0x20
     178:	ec 6c       	ori	r30, 0xCC	; 204
     17a:	00 00       	nop
     17c:	00 00       	nop
     17e:	08 1c       	adc	r0, r8
     180:	36 63       	ori	r19, 0x36	; 54
     182:	41 00       	.word	0x0041	; ????
     184:	00 00       	nop
     186:	14 14       	cp	r1, r4
     188:	14 14       	cp	r1, r4
     18a:	14 14       	cp	r1, r4
     18c:	00 00       	nop
     18e:	00 41       	sbci	r16, 0x10	; 16
     190:	63 36       	cpi	r22, 0x63	; 99
     192:	1c 08       	sbc	r1, r12
     194:	00 00       	nop
     196:	02 03       	mulsu	r16, r18
     198:	51 59       	subi	r21, 0x91	; 145
     19a:	0f 06       	cpc	r0, r31
     19c:	00 00       	nop
     19e:	3e 7f       	andi	r19, 0xFE	; 254
     1a0:	41 5d       	subi	r20, 0xD1	; 209
     1a2:	5d 1f       	adc	r21, r29
     1a4:	1e 00       	.word	0x001e	; ????
     1a6:	7c 7e       	andi	r23, 0xEC	; 236
     1a8:	13 13       	cpse	r17, r19
     1aa:	7e 7c       	andi	r23, 0xCE	; 206
     1ac:	00 00       	nop
     1ae:	41 7f       	andi	r20, 0xF1	; 241
     1b0:	7f 49       	sbci	r23, 0x9F	; 159
     1b2:	49 7f       	andi	r20, 0xF9	; 249
     1b4:	36 00       	.word	0x0036	; ????
     1b6:	1c 3e       	cpi	r17, 0xEC	; 236
     1b8:	63 41       	sbci	r22, 0x13	; 19
     1ba:	41 63       	ori	r20, 0x31	; 49
     1bc:	22 00       	.word	0x0022	; ????
     1be:	41 7f       	andi	r20, 0xF1	; 241
     1c0:	7f 41       	sbci	r23, 0x1F	; 31
     1c2:	63 7f       	andi	r22, 0xF3	; 243
     1c4:	1c 00       	.word	0x001c	; ????
     1c6:	41 7f       	andi	r20, 0xF1	; 241
     1c8:	7f 49       	sbci	r23, 0x9F	; 159
     1ca:	5d 41       	sbci	r21, 0x1D	; 29
     1cc:	63 00       	.word	0x0063	; ????
     1ce:	41 7f       	andi	r20, 0xF1	; 241
     1d0:	7f 49       	sbci	r23, 0x9F	; 159
     1d2:	1d 01       	movw	r2, r26
     1d4:	03 00       	.word	0x0003	; ????
     1d6:	1c 3e       	cpi	r17, 0xEC	; 236
     1d8:	63 41       	sbci	r22, 0x13	; 19
     1da:	51 73       	andi	r21, 0x31	; 49
     1dc:	72 00       	.word	0x0072	; ????
     1de:	7f 7f       	andi	r23, 0xFF	; 255
     1e0:	08 08       	sbc	r0, r8
     1e2:	7f 7f       	andi	r23, 0xFF	; 255
     1e4:	00 00       	nop
     1e6:	00 41       	sbci	r16, 0x10	; 16
     1e8:	7f 7f       	andi	r23, 0xFF	; 255
     1ea:	41 00       	.word	0x0041	; ????
     1ec:	00 00       	nop
     1ee:	30 70       	andi	r19, 0x00	; 0
     1f0:	40 41       	sbci	r20, 0x10	; 16
     1f2:	7f 3f       	cpi	r23, 0xFF	; 255
     1f4:	01 00       	.word	0x0001	; ????
     1f6:	41 7f       	andi	r20, 0xF1	; 241
     1f8:	7f 08       	sbc	r7, r15
     1fa:	1c 77       	andi	r17, 0x7C	; 124
     1fc:	63 00       	.word	0x0063	; ????
     1fe:	41 7f       	andi	r20, 0xF1	; 241
     200:	7f 41       	sbci	r23, 0x1F	; 31
     202:	40 60       	ori	r20, 0x00	; 0
     204:	70 00       	.word	0x0070	; ????
     206:	7f 7f       	andi	r23, 0xFF	; 255
     208:	06 0c       	add	r0, r6
     20a:	06 7f       	andi	r16, 0xF6	; 246
     20c:	7f 00       	.word	0x007f	; ????
     20e:	7f 7f       	andi	r23, 0xFF	; 255
     210:	06 0c       	add	r0, r6
     212:	18 7f       	andi	r17, 0xF8	; 248
     214:	7f 00       	.word	0x007f	; ????
     216:	1c 3e       	cpi	r17, 0xEC	; 236
     218:	63 41       	sbci	r22, 0x13	; 19
     21a:	63 3e       	cpi	r22, 0xE3	; 227
     21c:	1c 00       	.word	0x001c	; ????
     21e:	41 7f       	andi	r20, 0xF1	; 241
     220:	7f 49       	sbci	r23, 0x9F	; 159
     222:	09 0f       	add	r16, r25
     224:	06 00       	.word	0x0006	; ????
     226:	1e 3f       	cpi	r17, 0xFE	; 254
     228:	21 71       	andi	r18, 0x11	; 17
     22a:	7f 5e       	subi	r23, 0xEF	; 239
     22c:	00 00       	nop
     22e:	41 7f       	andi	r20, 0xF1	; 241
     230:	7f 19       	sub	r23, r15
     232:	39 6f       	ori	r19, 0xF9	; 249
     234:	46 00       	.word	0x0046	; ????
     236:	26 67       	ori	r18, 0x76	; 118
     238:	4d 59       	subi	r20, 0x9D	; 157
     23a:	7b 32       	cpi	r23, 0x2B	; 43
     23c:	00 00       	nop
     23e:	03 41       	sbci	r16, 0x13	; 19
     240:	7f 7f       	andi	r23, 0xFF	; 255
     242:	41 03       	mulsu	r20, r17
     244:	00 00       	nop
     246:	7f 7f       	andi	r23, 0xFF	; 255
     248:	40 40       	sbci	r20, 0x00	; 0
     24a:	7f 7f       	andi	r23, 0xFF	; 255
     24c:	00 00       	nop
     24e:	1f 3f       	cpi	r17, 0xFF	; 255
     250:	60 60       	ori	r22, 0x00	; 0
     252:	3f 1f       	adc	r19, r31
     254:	00 00       	nop
     256:	7f 7f       	andi	r23, 0xFF	; 255
     258:	30 18       	sub	r3, r0
     25a:	30 7f       	andi	r19, 0xF0	; 240
     25c:	7f 00       	.word	0x007f	; ????
     25e:	63 77       	andi	r22, 0x73	; 115
     260:	1c 08       	sbc	r1, r12
     262:	1c 77       	andi	r17, 0x7C	; 124
     264:	63 00       	.word	0x0063	; ????
     266:	07 4f       	sbci	r16, 0xF7	; 247
     268:	78 78       	andi	r23, 0x88	; 136
     26a:	4f 07       	cpc	r20, r31
     26c:	00 00       	nop
     26e:	67 73       	andi	r22, 0x37	; 55
     270:	59 4d       	sbci	r21, 0xD9	; 217
     272:	47 63       	ori	r20, 0x37	; 55
     274:	71 00       	.word	0x0071	; ????
     276:	00 7f       	andi	r16, 0xF0	; 240
     278:	7f 41       	sbci	r23, 0x1F	; 31
     27a:	41 00       	.word	0x0041	; ????
     27c:	00 00       	nop
     27e:	01 03       	mulsu	r16, r17
     280:	06 0c       	add	r0, r6
     282:	18 30       	cpi	r17, 0x08	; 8
     284:	60 00       	.word	0x0060	; ????
     286:	00 41       	sbci	r16, 0x10	; 16
     288:	41 7f       	andi	r20, 0xF1	; 241
     28a:	7f 00       	.word	0x007f	; ????
     28c:	00 00       	nop
     28e:	08 0c       	add	r0, r8
     290:	06 03       	mulsu	r16, r22
     292:	06 0c       	add	r0, r6
     294:	08 00       	.word	0x0008	; ????
     296:	80 80       	ld	r8, Z
     298:	80 80       	ld	r8, Z
     29a:	80 80       	ld	r8, Z
     29c:	80 80       	ld	r8, Z
     29e:	00 00       	nop
     2a0:	03 07       	cpc	r16, r19
     2a2:	04 00       	.word	0x0004	; ????
     2a4:	00 00       	nop
     2a6:	20 74       	andi	r18, 0x40	; 64
     2a8:	54 54       	subi	r21, 0x44	; 68
     2aa:	3c 78       	andi	r19, 0x8C	; 140
     2ac:	40 00       	.word	0x0040	; ????
     2ae:	41 3f       	cpi	r20, 0xF1	; 241
     2b0:	7f 44       	sbci	r23, 0x4F	; 79
     2b2:	44 7c       	andi	r20, 0xC4	; 196
     2b4:	38 00       	.word	0x0038	; ????
     2b6:	38 7c       	andi	r19, 0xC8	; 200
     2b8:	44 44       	sbci	r20, 0x44	; 68
     2ba:	6c 28       	or	r6, r12
     2bc:	00 00       	nop
     2be:	30 78       	andi	r19, 0x80	; 128
     2c0:	48 49       	sbci	r20, 0x98	; 152
     2c2:	3f 7f       	andi	r19, 0xFF	; 255
     2c4:	40 00       	.word	0x0040	; ????
     2c6:	38 7c       	andi	r19, 0xC8	; 200
     2c8:	54 54       	subi	r21, 0x44	; 68
     2ca:	5c 18       	sub	r5, r12
     2cc:	00 00       	nop
     2ce:	48 7e       	andi	r20, 0xE8	; 232
     2d0:	7f 49       	sbci	r23, 0x9F	; 159
     2d2:	03 02       	muls	r16, r19
     2d4:	00 00       	nop
     2d6:	98 bc       	out	0x28, r9	; 40
     2d8:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2da:	f8 7c       	andi	r31, 0xC8	; 200
     2dc:	04 00       	.word	0x0004	; ????
     2de:	41 7f       	andi	r20, 0xF1	; 241
     2e0:	7f 08       	sbc	r7, r15
     2e2:	04 7c       	andi	r16, 0xC4	; 196
     2e4:	78 00       	.word	0x0078	; ????
     2e6:	00 44       	sbci	r16, 0x40	; 64
     2e8:	7d 7d       	andi	r23, 0xDD	; 221
     2ea:	40 00       	.word	0x0040	; ????
     2ec:	00 00       	nop
     2ee:	40 c4       	rjmp	.+2176   	; 0xb70 <__fp_powser+0x2c>
     2f0:	84 fd       	sbrc	r24, 4
     2f2:	7d 00       	.word	0x007d	; ????
     2f4:	00 00       	nop
     2f6:	41 7f       	andi	r20, 0xF1	; 241
     2f8:	7f 10       	cpse	r7, r15
     2fa:	38 6c       	ori	r19, 0xC8	; 200
     2fc:	44 00       	.word	0x0044	; ????
     2fe:	00 41       	sbci	r16, 0x10	; 16
     300:	7f 7f       	andi	r23, 0xFF	; 255
     302:	40 00       	.word	0x0040	; ????
     304:	00 00       	nop
     306:	7c 7c       	andi	r23, 0xCC	; 204
     308:	0c 18       	sub	r0, r12
     30a:	0c 7c       	andi	r16, 0xCC	; 204
     30c:	78 00       	.word	0x0078	; ????
     30e:	7c 7c       	andi	r23, 0xCC	; 204
     310:	04 04       	cpc	r0, r4
     312:	7c 78       	andi	r23, 0x8C	; 140
     314:	00 00       	nop
     316:	38 7c       	andi	r19, 0xC8	; 200
     318:	44 44       	sbci	r20, 0x44	; 68
     31a:	7c 38       	cpi	r23, 0x8C	; 140
     31c:	00 00       	nop
     31e:	84 fc       	sbrc	r8, 4
     320:	f8 a4       	ldd	r15, Y+40	; 0x28
     322:	24 3c       	cpi	r18, 0xC4	; 196
     324:	18 00       	.word	0x0018	; ????
     326:	18 3c       	cpi	r17, 0xC8	; 200
     328:	24 a4       	ldd	r2, Z+44	; 0x2c
     32a:	f8 fc       	.word	0xfcf8	; ????
     32c:	84 00       	.word	0x0084	; ????
     32e:	44 7c       	andi	r20, 0xC4	; 196
     330:	78 44       	sbci	r23, 0x48	; 72
     332:	1c 18       	sub	r1, r12
     334:	00 00       	nop
     336:	48 5c       	subi	r20, 0xC8	; 200
     338:	54 54       	subi	r21, 0x44	; 68
     33a:	74 24       	eor	r7, r4
     33c:	00 00       	nop
     33e:	00 04       	cpc	r0, r0
     340:	3e 7f       	andi	r19, 0xFE	; 254
     342:	44 24       	eor	r4, r4
     344:	00 00       	nop
     346:	3c 7c       	andi	r19, 0xCC	; 204
     348:	40 40       	sbci	r20, 0x00	; 0
     34a:	3c 7c       	andi	r19, 0xCC	; 204
     34c:	40 00       	.word	0x0040	; ????
     34e:	1c 3c       	cpi	r17, 0xCC	; 204
     350:	60 60       	ori	r22, 0x00	; 0
     352:	3c 1c       	adc	r3, r12
     354:	00 00       	nop
     356:	3c 7c       	andi	r19, 0xCC	; 204
     358:	60 30       	cpi	r22, 0x00	; 0
     35a:	60 7c       	andi	r22, 0xC0	; 192
     35c:	3c 00       	.word	0x003c	; ????
     35e:	44 6c       	ori	r20, 0xC4	; 196
     360:	38 10       	cpse	r3, r8
     362:	38 6c       	ori	r19, 0xC8	; 200
     364:	44 00       	.word	0x0044	; ????
     366:	9c bc       	out	0x2c, r9	; 44
     368:	a0 a0       	ldd	r10, Z+32	; 0x20
     36a:	fc 7c       	andi	r31, 0xCC	; 204
     36c:	00 00       	nop
     36e:	4c 64       	ori	r20, 0x4C	; 76
     370:	74 5c       	subi	r23, 0xC4	; 196
     372:	4c 64       	ori	r20, 0x4C	; 76
     374:	00 00       	nop
     376:	08 08       	sbc	r0, r8
     378:	3e 77       	andi	r19, 0x7E	; 126
     37a:	41 41       	sbci	r20, 0x11	; 17
     37c:	00 00       	nop
     37e:	00 00       	nop
     380:	00 77       	andi	r16, 0x70	; 112
     382:	77 00       	.word	0x0077	; ????
     384:	00 00       	nop
     386:	41 41       	sbci	r20, 0x11	; 17
     388:	77 3e       	cpi	r23, 0xE7	; 231
     38a:	08 08       	sbc	r0, r8
     38c:	00 00       	nop
     38e:	02 03       	mulsu	r16, r18
     390:	01 03       	mulsu	r16, r17
     392:	02 03       	mulsu	r16, r18
     394:	01 00       	.word	0x0001	; ????

00000396 <__ctors_end>:
     396:	11 24       	eor	r1, r1
     398:	1f be       	out	0x3f, r1	; 63
     39a:	cf ef       	ldi	r28, 0xFF	; 255
     39c:	d4 e0       	ldi	r29, 0x04	; 4
     39e:	de bf       	out	0x3e, r29	; 62
     3a0:	cd bf       	out	0x3d, r28	; 61

000003a2 <__do_copy_data>:
     3a2:	12 e0       	ldi	r17, 0x02	; 2
     3a4:	a0 e0       	ldi	r26, 0x00	; 0
     3a6:	b1 e0       	ldi	r27, 0x01	; 1
     3a8:	ea e2       	ldi	r30, 0x2A	; 42
     3aa:	f7 e1       	ldi	r31, 0x17	; 23
     3ac:	02 c0       	rjmp	.+4      	; 0x3b2 <__do_copy_data+0x10>
     3ae:	05 90       	lpm	r0, Z+
     3b0:	0d 92       	st	X+, r0
     3b2:	a6 31       	cpi	r26, 0x16	; 22
     3b4:	b1 07       	cpc	r27, r17
     3b6:	d9 f7       	brne	.-10     	; 0x3ae <__do_copy_data+0xc>

000003b8 <__do_clear_bss>:
     3b8:	22 e0       	ldi	r18, 0x02	; 2
     3ba:	a6 e1       	ldi	r26, 0x16	; 22
     3bc:	b2 e0       	ldi	r27, 0x02	; 2
     3be:	01 c0       	rjmp	.+2      	; 0x3c2 <.do_clear_bss_start>

000003c0 <.do_clear_bss_loop>:
     3c0:	1d 92       	st	X+, r1

000003c2 <.do_clear_bss_start>:
     3c2:	ac 32       	cpi	r26, 0x2C	; 44
     3c4:	b2 07       	cpc	r27, r18
     3c6:	e1 f7       	brne	.-8      	; 0x3c0 <.do_clear_bss_loop>
     3c8:	0e 94 26 02 	call	0x44c	; 0x44c <main>
     3cc:	0c 94 93 0b 	jmp	0x1726	; 0x1726 <_exit>

000003d0 <__bad_interrupt>:
     3d0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003d4 <adcInit>:



void adcInit(void) {
	
	DDRE &= ~(1<<PINE0);
     3d4:	30 98       	cbi	0x06, 0	; 6
     3d6:	08 95       	ret

000003d8 <readAdc>:

 
uint8_t readAdc(uint8_t channel){ //for ch1 channel = 0;
	volatile char * adc = (char *) 0x1400;
	
	*adc = 0x04 | channel;
     3d8:	84 60       	ori	r24, 0x04	; 4
     3da:	80 93 00 14 	sts	0x1400, r24	; 0x801400 <__bss_end+0x11d4>
	

	while (test_bit(PINE, PINE0)) {
     3de:	28 99       	sbic	0x05, 0	; 5
     3e0:	fe cf       	rjmp	.-4      	; 0x3de <readAdc+0x6>

	}
	
	return *adc;
     3e2:	80 91 00 14 	lds	r24, 0x1400	; 0x801400 <__bss_end+0x11d4>
     3e6:	08 95       	ret

000003e8 <__vector_14>:
	joystick_readPosition(&joystick_pos);
	slider_readPosition(&slider_pos);
	touchButton_readButtons(&buttons);
	sei();
}
void timer_init() {
     3e8:	1f 92       	push	r1
     3ea:	0f 92       	push	r0
     3ec:	0f b6       	in	r0, 0x3f	; 63
     3ee:	0f 92       	push	r0
     3f0:	11 24       	eor	r1, r1
     3f2:	2f 93       	push	r18
     3f4:	3f 93       	push	r19
     3f6:	4f 93       	push	r20
     3f8:	5f 93       	push	r21
     3fa:	6f 93       	push	r22
     3fc:	7f 93       	push	r23
     3fe:	8f 93       	push	r24
     400:	9f 93       	push	r25
     402:	af 93       	push	r26
     404:	bf 93       	push	r27
     406:	ef 93       	push	r30
     408:	ff 93       	push	r31
     40a:	f8 94       	cli
     40c:	1d bc       	out	0x2d, r1	; 45
     40e:	1c bc       	out	0x2c, r1	; 44
     410:	86 e1       	ldi	r24, 0x16	; 22
     412:	92 e0       	ldi	r25, 0x02	; 2
     414:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <joystick_readPosition>
     418:	8c e1       	ldi	r24, 0x1C	; 28
     41a:	92 e0       	ldi	r25, 0x02	; 2
     41c:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <slider_readPosition>
     420:	8a e1       	ldi	r24, 0x1A	; 26
     422:	92 e0       	ldi	r25, 0x02	; 2
     424:	0e 94 19 04 	call	0x832	; 0x832 <touchButton_readButtons>
     428:	78 94       	sei
     42a:	ff 91       	pop	r31
     42c:	ef 91       	pop	r30
     42e:	bf 91       	pop	r27
     430:	af 91       	pop	r26
     432:	9f 91       	pop	r25
     434:	8f 91       	pop	r24
     436:	7f 91       	pop	r23
     438:	6f 91       	pop	r22
     43a:	5f 91       	pop	r21
     43c:	4f 91       	pop	r20
     43e:	3f 91       	pop	r19
     440:	2f 91       	pop	r18
     442:	0f 90       	pop	r0
     444:	0f be       	out	0x3f, r0	; 63
     446:	0f 90       	pop	r0
     448:	1f 90       	pop	r1
     44a:	18 95       	reti

0000044c <main>:
	
}
int main(void)
{
	//DDRB &= ~(1 << BUTTON_LEFT | 1 << BUTTON_RIGHT);
	setupInit();
     44c:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <setupInit>
	//SRAM_test();
	printf("Hello, world!\n\r");
     450:	81 ef       	ldi	r24, 0xF1	; 241
     452:	91 e0       	ldi	r25, 0x01	; 1
     454:	9f 93       	push	r25
     456:	8f 93       	push	r24
     458:	0e 94 92 08 	call	0x1124	; 0x1124 <printf>
	MenuNode* gameMenu = menuInit();
     45c:	0e 94 46 03 	call	0x68c	; 0x68c <menuInit>
     460:	ec 01       	movw	r28, r24
	oled_gotoLine(6);
     462:	86 e0       	ldi	r24, 0x06	; 6
     464:	0e 94 b7 03 	call	0x76e	; 0x76e <oled_gotoLine>
	
	oled_print((gameMenu->name));
     468:	ce 01       	movw	r24, r28
     46a:	0e 94 bb 03 	call	0x776	; 0x776 <oled_print>
	oled_gotoLine(7);
     46e:	87 e0       	ldi	r24, 0x07	; 7
     470:	0e 94 b7 03 	call	0x76e	; 0x76e <oled_gotoLine>
	
	oled_print((gameMenu->children[0]->name));
     474:	8c 85       	ldd	r24, Y+12	; 0x0c
     476:	9d 85       	ldd	r25, Y+13	; 0x0d
     478:	0e 94 bb 03 	call	0x776	; 0x776 <oled_print>
	
	oled_print_arrow();
     47c:	0e 94 75 03 	call	0x6ea	; 0x6ea <oled_print_arrow>
	//oled_print(gameMenu->name);
	
	//Enable interrupt from timer
	
	//Disable global interrupts
	cli();
     480:	f8 94       	cli
	
	//enable timer 0
	TIMSK |= (1 << OCIE1B);
     482:	89 b7       	in	r24, 0x39	; 57
     484:	80 62       	ori	r24, 0x20	; 32
     486:	89 bf       	out	0x39, r24	; 57

	
	//Setup code here for timer interrupt
	TCNT1 = 0x00;
     488:	1d bc       	out	0x2d, r1	; 45
     48a:	1c bc       	out	0x2c, r1	; 44
	TCCR1A = (1 << COM1B0 | 1 << COM1B1);
     48c:	80 e3       	ldi	r24, 0x30	; 48
     48e:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = (1 << CS12 | 1 << CS00);
     490:	85 e0       	ldi	r24, 0x05	; 5
     492:	8e bd       	out	0x2e, r24	; 46
	
	OCR1B = TIMER_RESET;
     494:	80 ef       	ldi	r24, 0xF0	; 240
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	99 bd       	out	0x29, r25	; 41
     49a:	88 bd       	out	0x28, r24	; 40
	
	//Enable global interrupts
	sei();
     49c:	78 94       	sei
	//printf("Timer initialized");
	
	oled_home();
     49e:	0e 94 80 03 	call	0x700	; 0x700 <oled_home>
	oled_gotoLine(2);
     4a2:	82 e0       	ldi	r24, 0x02	; 2
     4a4:	0e 94 b7 03 	call	0x76e	; 0x76e <oled_gotoLine>
     4a8:	0f 90       	pop	r0
     4aa:	0f 90       	pop	r0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4ac:	2f ef       	ldi	r18, 0xFF	; 255
     4ae:	8f e7       	ldi	r24, 0x7F	; 127
     4b0:	91 e0       	ldi	r25, 0x01	; 1
     4b2:	21 50       	subi	r18, 0x01	; 1
     4b4:	80 40       	sbci	r24, 0x00	; 0
     4b6:	90 40       	sbci	r25, 0x00	; 0
     4b8:	e1 f7       	brne	.-8      	; 0x4b2 <main+0x66>
     4ba:	00 c0       	rjmp	.+0      	; 0x4bc <main+0x70>
     4bc:	00 c0       	rjmp	.+0      	; 0x4be <main+0x72>
     4be:	f6 cf       	rjmp	.-20     	; 0x4ac <main+0x60>

000004c0 <joystickInit>:
uint8_t joystickOffsetX;
uint8_t joystickOffsetY;


void joystickInit() {
	joystickOffsetX = readAdc(X_POS_CHANNEL);
     4c0:	80 e0       	ldi	r24, 0x00	; 0
     4c2:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <readAdc>
     4c6:	80 93 1f 02 	sts	0x021F, r24	; 0x80021f <joystickOffsetX>
	joystickOffsetY = readAdc(Y_POS_CHANNEL);
     4ca:	81 e0       	ldi	r24, 0x01	; 1
     4cc:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <readAdc>
     4d0:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <joystickOffsetY>
     4d4:	08 95       	ret

000004d6 <joystick_readPosition>:
}
void joystick_readPosition(joystick_position_t * pos) {
     4d6:	cf 92       	push	r12
     4d8:	df 92       	push	r13
     4da:	ef 92       	push	r14
     4dc:	ff 92       	push	r15
     4de:	1f 93       	push	r17
     4e0:	cf 93       	push	r28
     4e2:	df 93       	push	r29
     4e4:	ec 01       	movw	r28, r24
	uint8_t x_pos = readAdc(X_POS_CHANNEL);
     4e6:	80 e0       	ldi	r24, 0x00	; 0
     4e8:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <readAdc>
     4ec:	18 2f       	mov	r17, r24
	uint8_t y_pos = readAdc(Y_POS_CHANNEL);
     4ee:	81 e0       	ldi	r24, 0x01	; 1
     4f0:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <readAdc>
     4f4:	e8 2f       	mov	r30, r24
	if (x_pos < joystickOffsetX) {
     4f6:	60 91 1f 02 	lds	r22, 0x021F	; 0x80021f <joystickOffsetX>
     4fa:	16 17       	cp	r17, r22
     4fc:	78 f4       	brcc	.+30     	; 0x51c <__stack+0x1d>
		pos->x_pos = ((x_pos - joystickOffsetX)*100)/(joystickOffsetX);
     4fe:	70 e0       	ldi	r23, 0x00	; 0
     500:	21 2f       	mov	r18, r17
     502:	30 e0       	ldi	r19, 0x00	; 0
     504:	26 1b       	sub	r18, r22
     506:	37 0b       	sbc	r19, r23
     508:	44 e6       	ldi	r20, 0x64	; 100
     50a:	42 9f       	mul	r20, r18
     50c:	c0 01       	movw	r24, r0
     50e:	43 9f       	mul	r20, r19
     510:	90 0d       	add	r25, r0
     512:	11 24       	eor	r1, r1
     514:	0e 94 f7 06 	call	0xdee	; 0xdee <__divmodhi4>
     518:	68 83       	st	Y, r22
     51a:	13 c0       	rjmp	.+38     	; 0x542 <__stack+0x43>
	} else {
		pos->x_pos = ((x_pos - joystickOffsetX)*100)/(255-joystickOffsetX);
     51c:	46 2f       	mov	r20, r22
     51e:	50 e0       	ldi	r21, 0x00	; 0
     520:	21 2f       	mov	r18, r17
     522:	30 e0       	ldi	r19, 0x00	; 0
     524:	24 1b       	sub	r18, r20
     526:	35 0b       	sbc	r19, r21
     528:	64 e6       	ldi	r22, 0x64	; 100
     52a:	62 9f       	mul	r22, r18
     52c:	c0 01       	movw	r24, r0
     52e:	63 9f       	mul	r22, r19
     530:	90 0d       	add	r25, r0
     532:	11 24       	eor	r1, r1
     534:	6f ef       	ldi	r22, 0xFF	; 255
     536:	70 e0       	ldi	r23, 0x00	; 0
     538:	64 1b       	sub	r22, r20
     53a:	75 0b       	sbc	r23, r21
     53c:	0e 94 f7 06 	call	0xdee	; 0xdee <__divmodhi4>
     540:	68 83       	st	Y, r22
	}
	if (y_pos < joystickOffsetY) {
     542:	20 91 1e 02 	lds	r18, 0x021E	; 0x80021e <joystickOffsetY>
     546:	e2 17       	cp	r30, r18
     548:	80 f4       	brcc	.+32     	; 0x56a <__stack+0x6b>
		pos->y_pos = ((y_pos - joystickOffsetY)*100)/(joystickOffsetY);
     54a:	62 2f       	mov	r22, r18
     54c:	70 e0       	ldi	r23, 0x00	; 0
     54e:	4e 2f       	mov	r20, r30
     550:	50 e0       	ldi	r21, 0x00	; 0
     552:	46 1b       	sub	r20, r22
     554:	57 0b       	sbc	r21, r23
     556:	24 e6       	ldi	r18, 0x64	; 100
     558:	24 9f       	mul	r18, r20
     55a:	c0 01       	movw	r24, r0
     55c:	25 9f       	mul	r18, r21
     55e:	90 0d       	add	r25, r0
     560:	11 24       	eor	r1, r1
     562:	0e 94 f7 06 	call	0xdee	; 0xdee <__divmodhi4>
     566:	69 83       	std	Y+1, r22	; 0x01
     568:	12 c0       	rjmp	.+36     	; 0x58e <__stack+0x8f>
	} else {
		pos->y_pos = ((y_pos - joystickOffsetY)*100)/(255-joystickOffsetY);
     56a:	30 e0       	ldi	r19, 0x00	; 0
     56c:	4e 2f       	mov	r20, r30
     56e:	50 e0       	ldi	r21, 0x00	; 0
     570:	42 1b       	sub	r20, r18
     572:	53 0b       	sbc	r21, r19
     574:	64 e6       	ldi	r22, 0x64	; 100
     576:	64 9f       	mul	r22, r20
     578:	c0 01       	movw	r24, r0
     57a:	65 9f       	mul	r22, r21
     57c:	90 0d       	add	r25, r0
     57e:	11 24       	eor	r1, r1
     580:	6f ef       	ldi	r22, 0xFF	; 255
     582:	70 e0       	ldi	r23, 0x00	; 0
     584:	62 1b       	sub	r22, r18
     586:	73 0b       	sbc	r23, r19
     588:	0e 94 f7 06 	call	0xdee	; 0xdee <__divmodhi4>
     58c:	69 83       	std	Y+1, r22	; 0x01
	}
	pos->angle = atan2(pos->y_pos, pos->x_pos)*360/2.0/3.14;
     58e:	68 81       	ld	r22, Y
     590:	06 2e       	mov	r0, r22
     592:	00 0c       	add	r0, r0
     594:	77 0b       	sbc	r23, r23
     596:	88 0b       	sbc	r24, r24
     598:	99 0b       	sbc	r25, r25
     59a:	0e 94 5e 05 	call	0xabc	; 0xabc <__floatsisf>
     59e:	6b 01       	movw	r12, r22
     5a0:	7c 01       	movw	r14, r24
     5a2:	69 81       	ldd	r22, Y+1	; 0x01
     5a4:	06 2e       	mov	r0, r22
     5a6:	00 0c       	add	r0, r0
     5a8:	77 0b       	sbc	r23, r23
     5aa:	88 0b       	sbc	r24, r24
     5ac:	99 0b       	sbc	r25, r25
     5ae:	0e 94 5e 05 	call	0xabc	; 0xabc <__floatsisf>
     5b2:	a7 01       	movw	r20, r14
     5b4:	96 01       	movw	r18, r12
     5b6:	0e 94 55 04 	call	0x8aa	; 0x8aa <atan2>
     5ba:	20 e0       	ldi	r18, 0x00	; 0
     5bc:	30 e0       	ldi	r19, 0x00	; 0
     5be:	44 eb       	ldi	r20, 0xB4	; 180
     5c0:	53 e4       	ldi	r21, 0x43	; 67
     5c2:	0e 94 19 06 	call	0xc32	; 0xc32 <__mulsf3>
     5c6:	20 e0       	ldi	r18, 0x00	; 0
     5c8:	30 e0       	ldi	r19, 0x00	; 0
     5ca:	40 e0       	ldi	r20, 0x00	; 0
     5cc:	5f e3       	ldi	r21, 0x3F	; 63
     5ce:	0e 94 19 06 	call	0xc32	; 0xc32 <__mulsf3>
     5d2:	23 ec       	ldi	r18, 0xC3	; 195
     5d4:	35 ef       	ldi	r19, 0xF5	; 245
     5d6:	48 e4       	ldi	r20, 0x48	; 72
     5d8:	50 e4       	ldi	r21, 0x40	; 64
     5da:	0e 94 b4 04 	call	0x968	; 0x968 <__divsf3>
     5de:	0e 94 26 05 	call	0xa4c	; 0xa4c <__fixsfsi>
     5e2:	7b 83       	std	Y+3, r23	; 0x03
     5e4:	6a 83       	std	Y+2, r22	; 0x02
}
     5e6:	df 91       	pop	r29
     5e8:	cf 91       	pop	r28
     5ea:	1f 91       	pop	r17
     5ec:	ff 90       	pop	r15
     5ee:	ef 90       	pop	r14
     5f0:	df 90       	pop	r13
     5f2:	cf 90       	pop	r12
     5f4:	08 95       	ret

000005f6 <mainMenuInit>:

#define MAXCHILDREN 3


MenuNode* mainMenuInit (void){
	MenuNode* ptr = (MenuNode*) malloc(sizeof(MenuNode));
     5f6:	82 e1       	ldi	r24, 0x12	; 18
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	0e 94 1f 07 	call	0xe3e	; 0xe3e <malloc>
	strcpy(ptr->name, "Main menu");
     5fe:	2a e0       	ldi	r18, 0x0A	; 10
     600:	e1 e0       	ldi	r30, 0x01	; 1
     602:	f2 e0       	ldi	r31, 0x02	; 2
     604:	dc 01       	movw	r26, r24
     606:	01 90       	ld	r0, Z+
     608:	0d 92       	st	X+, r0
     60a:	2a 95       	dec	r18
     60c:	e1 f7       	brne	.-8      	; 0x606 <mainMenuInit+0x10>
	ptr->parent = NULL;
     60e:	fc 01       	movw	r30, r24
     610:	13 86       	std	Z+11, r1	; 0x0b
     612:	12 86       	std	Z+10, r1	; 0x0a
	for (int i = 0; i< 3; i++) {
		ptr->children[i] = NULL;
     614:	15 86       	std	Z+13, r1	; 0x0d
     616:	14 86       	std	Z+12, r1	; 0x0c
     618:	17 86       	std	Z+15, r1	; 0x0f
     61a:	16 86       	std	Z+14, r1	; 0x0e
     61c:	11 8a       	std	Z+17, r1	; 0x11
     61e:	10 8a       	std	Z+16, r1	; 0x10
	}

	return ptr;
}
     620:	08 95       	ret

00000622 <addChild>:

void addChild(MenuNode* parent, char* child_name)
{
     622:	ef 92       	push	r14
     624:	ff 92       	push	r15
     626:	0f 93       	push	r16
     628:	1f 93       	push	r17
     62a:	cf 93       	push	r28
     62c:	df 93       	push	r29
     62e:	ec 01       	movw	r28, r24
     630:	7b 01       	movw	r14, r22
	MenuNode* childPtr = (MenuNode*) malloc(sizeof(MenuNode));
     632:	82 e1       	ldi	r24, 0x12	; 18
     634:	90 e0       	ldi	r25, 0x00	; 0
     636:	0e 94 1f 07 	call	0xe3e	; 0xe3e <malloc>
     63a:	8c 01       	movw	r16, r24
	strcpy(childPtr->name, child_name);
     63c:	b7 01       	movw	r22, r14
     63e:	0e 94 40 08 	call	0x1080	; 0x1080 <strcpy>
	childPtr->parent = parent;
     642:	f8 01       	movw	r30, r16
     644:	d3 87       	std	Z+11, r29	; 0x0b
     646:	c2 87       	std	Z+10, r28	; 0x0a
	for (int i=0; i<MAXCHILDREN; i++)
	{
		if (parent->children[i]==NULL)
     648:	8c 85       	ldd	r24, Y+12	; 0x0c
     64a:	9d 85       	ldd	r25, Y+13	; 0x0d
     64c:	89 2b       	or	r24, r25
     64e:	71 f0       	breq	.+28     	; 0x66c <addChild+0x4a>
     650:	8e 85       	ldd	r24, Y+14	; 0x0e
     652:	9f 85       	ldd	r25, Y+15	; 0x0f
     654:	89 2b       	or	r24, r25
     656:	39 f0       	breq	.+14     	; 0x666 <addChild+0x44>
     658:	88 89       	ldd	r24, Y+16	; 0x10
     65a:	99 89       	ldd	r25, Y+17	; 0x11
     65c:	89 2b       	or	r24, r25
     65e:	79 f4       	brne	.+30     	; 0x67e <addChild+0x5c>
void addChild(MenuNode* parent, char* child_name)
{
	MenuNode* childPtr = (MenuNode*) malloc(sizeof(MenuNode));
	strcpy(childPtr->name, child_name);
	childPtr->parent = parent;
	for (int i=0; i<MAXCHILDREN; i++)
     660:	82 e0       	ldi	r24, 0x02	; 2
     662:	90 e0       	ldi	r25, 0x00	; 0
     664:	05 c0       	rjmp	.+10     	; 0x670 <addChild+0x4e>
     666:	81 e0       	ldi	r24, 0x01	; 1
     668:	90 e0       	ldi	r25, 0x00	; 0
     66a:	02 c0       	rjmp	.+4      	; 0x670 <addChild+0x4e>
     66c:	80 e0       	ldi	r24, 0x00	; 0
     66e:	90 e0       	ldi	r25, 0x00	; 0
	{
		if (parent->children[i]==NULL)
		{
			parent->children[i]=childPtr;
     670:	06 96       	adiw	r24, 0x06	; 6
     672:	88 0f       	add	r24, r24
     674:	99 1f       	adc	r25, r25
     676:	c8 0f       	add	r28, r24
     678:	d9 1f       	adc	r29, r25
     67a:	19 83       	std	Y+1, r17	; 0x01
     67c:	08 83       	st	Y, r16
			return;
		}
	}
	return;
}
     67e:	df 91       	pop	r29
     680:	cf 91       	pop	r28
     682:	1f 91       	pop	r17
     684:	0f 91       	pop	r16
     686:	ff 90       	pop	r15
     688:	ef 90       	pop	r14
     68a:	08 95       	ret

0000068c <menuInit>:

MenuNode* menuInit(void)
{
     68c:	cf 93       	push	r28
     68e:	df 93       	push	r29
	MenuNode* mainMenu = mainMenuInit();
     690:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <mainMenuInit>
     694:	ec 01       	movw	r28, r24
	addChild(mainMenu,"Play game");
     696:	6b e0       	ldi	r22, 0x0B	; 11
     698:	72 e0       	ldi	r23, 0x02	; 2
     69a:	0e 94 11 03 	call	0x622	; 0x622 <addChild>
	return mainMenu;
}
     69e:	ce 01       	movw	r24, r28
     6a0:	df 91       	pop	r29
     6a2:	cf 91       	pop	r28
     6a4:	08 95       	ret

000006a6 <oled_pos>:
void oled_clearLine(uint8_t page){
	oled_pos(page, 0);
	for (int col = 0; col < 128; col++ ) {
		oled_write_d(0x00);
	}
}
     6a6:	80 55       	subi	r24, 0x50	; 80
     6a8:	e0 e0       	ldi	r30, 0x00	; 0
     6aa:	f0 e1       	ldi	r31, 0x10	; 16
     6ac:	80 83       	st	Z, r24
     6ae:	86 2f       	mov	r24, r22
     6b0:	8f 70       	andi	r24, 0x0F	; 15
     6b2:	80 83       	st	Z, r24
     6b4:	62 95       	swap	r22
     6b6:	6f 70       	andi	r22, 0x0F	; 15
     6b8:	60 61       	ori	r22, 0x10	; 16
     6ba:	60 83       	st	Z, r22
     6bc:	08 95       	ret

000006be <oled_reset>:
     6be:	1f 93       	push	r17
     6c0:	cf 93       	push	r28
     6c2:	df 93       	push	r29
     6c4:	10 e0       	ldi	r17, 0x00	; 0
     6c6:	c0 e0       	ldi	r28, 0x00	; 0
     6c8:	d2 e1       	ldi	r29, 0x12	; 18
     6ca:	60 e0       	ldi	r22, 0x00	; 0
     6cc:	81 2f       	mov	r24, r17
     6ce:	0e 94 53 03 	call	0x6a6	; 0x6a6 <oled_pos>
     6d2:	80 e8       	ldi	r24, 0x80	; 128
     6d4:	90 e0       	ldi	r25, 0x00	; 0
     6d6:	18 82       	st	Y, r1
     6d8:	01 97       	sbiw	r24, 0x01	; 1
     6da:	e9 f7       	brne	.-6      	; 0x6d6 <oled_reset+0x18>
     6dc:	1f 5f       	subi	r17, 0xFF	; 255
     6de:	18 30       	cpi	r17, 0x08	; 8
     6e0:	a1 f7       	brne	.-24     	; 0x6ca <oled_reset+0xc>
     6e2:	df 91       	pop	r29
     6e4:	cf 91       	pop	r28
     6e6:	1f 91       	pop	r17
     6e8:	08 95       	ret

000006ea <oled_print_arrow>:
     6ea:	e0 e0       	ldi	r30, 0x00	; 0
     6ec:	f2 e1       	ldi	r31, 0x12	; 18
     6ee:	88 e1       	ldi	r24, 0x18	; 24
     6f0:	80 83       	st	Z, r24
     6f2:	9c e3       	ldi	r25, 0x3C	; 60
     6f4:	90 83       	st	Z, r25
     6f6:	9e e7       	ldi	r25, 0x7E	; 126
     6f8:	90 83       	st	Z, r25
     6fa:	80 83       	st	Z, r24
     6fc:	80 83       	st	Z, r24
     6fe:	08 95       	ret

00000700 <oled_home>:
     700:	60 e0       	ldi	r22, 0x00	; 0
     702:	80 e0       	ldi	r24, 0x00	; 0
     704:	0e 94 53 03 	call	0x6a6	; 0x6a6 <oled_pos>
     708:	08 95       	ret

0000070a <oled_init>:
     70a:	e0 e0       	ldi	r30, 0x00	; 0
     70c:	f0 e1       	ldi	r31, 0x10	; 16
     70e:	8e ea       	ldi	r24, 0xAE	; 174
     710:	80 83       	st	Z, r24
     712:	81 ea       	ldi	r24, 0xA1	; 161
     714:	80 83       	st	Z, r24
     716:	8a ed       	ldi	r24, 0xDA	; 218
     718:	80 83       	st	Z, r24
     71a:	82 e1       	ldi	r24, 0x12	; 18
     71c:	80 83       	st	Z, r24
     71e:	88 ec       	ldi	r24, 0xC8	; 200
     720:	80 83       	st	Z, r24
     722:	88 ea       	ldi	r24, 0xA8	; 168
     724:	80 83       	st	Z, r24
     726:	8f e3       	ldi	r24, 0x3F	; 63
     728:	80 83       	st	Z, r24
     72a:	85 ed       	ldi	r24, 0xD5	; 213
     72c:	80 83       	st	Z, r24
     72e:	80 e8       	ldi	r24, 0x80	; 128
     730:	80 83       	st	Z, r24
     732:	81 e8       	ldi	r24, 0x81	; 129
     734:	80 83       	st	Z, r24
     736:	80 e5       	ldi	r24, 0x50	; 80
     738:	80 83       	st	Z, r24
     73a:	89 ed       	ldi	r24, 0xD9	; 217
     73c:	80 83       	st	Z, r24
     73e:	81 e2       	ldi	r24, 0x21	; 33
     740:	80 83       	st	Z, r24
     742:	80 e2       	ldi	r24, 0x20	; 32
     744:	80 83       	st	Z, r24
     746:	82 e0       	ldi	r24, 0x02	; 2
     748:	80 83       	st	Z, r24
     74a:	8b ed       	ldi	r24, 0xDB	; 219
     74c:	80 83       	st	Z, r24
     74e:	80 e3       	ldi	r24, 0x30	; 48
     750:	80 83       	st	Z, r24
     752:	8d ea       	ldi	r24, 0xAD	; 173
     754:	80 83       	st	Z, r24
     756:	10 82       	st	Z, r1
     758:	84 ea       	ldi	r24, 0xA4	; 164
     75a:	80 83       	st	Z, r24
     75c:	86 ea       	ldi	r24, 0xA6	; 166
     75e:	80 83       	st	Z, r24
     760:	8f ea       	ldi	r24, 0xAF	; 175
     762:	80 83       	st	Z, r24
     764:	0e 94 5f 03 	call	0x6be	; 0x6be <oled_reset>
     768:	0e 94 80 03 	call	0x700	; 0x700 <oled_home>
     76c:	08 95       	ret

0000076e <oled_gotoLine>:
     76e:	60 e0       	ldi	r22, 0x00	; 0
     770:	0e 94 53 03 	call	0x6a6	; 0x6a6 <oled_pos>
     774:	08 95       	ret

00000776 <oled_print>:

void oled_print(char* character){
     776:	cf 93       	push	r28
     778:	df 93       	push	r29
     77a:	dc 01       	movw	r26, r24
	while (*character != '\0')
     77c:	8c 91       	ld	r24, X
     77e:	81 11       	cpse	r24, r1
     780:	1a c0       	rjmp	.+52     	; 0x7b6 <oled_print+0x40>
     782:	1e c0       	rjmp	.+60     	; 0x7c0 <oled_print+0x4a>
	{
		for (int col = 0; col < 8; col++ ) {
			oled_write_d(pgm_read_byte(&(font8[*character-ASCII_SPACE][col])));
     784:	ec 91       	ld	r30, X
     786:	f0 e0       	ldi	r31, 0x00	; 0
     788:	b0 97       	sbiw	r30, 0x20	; 32
     78a:	ee 0f       	add	r30, r30
     78c:	ff 1f       	adc	r31, r31
     78e:	ee 0f       	add	r30, r30
     790:	ff 1f       	adc	r31, r31
     792:	ee 0f       	add	r30, r30
     794:	ff 1f       	adc	r31, r31
     796:	e2 0f       	add	r30, r18
     798:	f3 1f       	adc	r31, r19
     79a:	e2 56       	subi	r30, 0x62	; 98
     79c:	ff 4f       	sbci	r31, 0xFF	; 255
     79e:	e4 91       	lpm	r30, Z
	volatile char *ext_mem = (char *) OLED_COMMAND_BASE_ADDRESS;
	*ext_mem = data;
}
void oled_write_d(uint8_t data) {
	volatile char *ext_mem = (char *) OLED_DATA_BASE_ADDRESS;
	*ext_mem = data;
     7a0:	e8 83       	st	Y, r30
}

void oled_print(char* character){
	while (*character != '\0')
	{
		for (int col = 0; col < 8; col++ ) {
     7a2:	2f 5f       	subi	r18, 0xFF	; 255
     7a4:	3f 4f       	sbci	r19, 0xFF	; 255
     7a6:	28 30       	cpi	r18, 0x08	; 8
     7a8:	31 05       	cpc	r19, r1
     7aa:	61 f7       	brne	.-40     	; 0x784 <oled_print+0xe>
			oled_write_d(pgm_read_byte(&(font8[*character-ASCII_SPACE][col])));
		}
		character++;
     7ac:	11 96       	adiw	r26, 0x01	; 1
		oled_write_d(0x00);
	}
}

void oled_print(char* character){
	while (*character != '\0')
     7ae:	8c 91       	ld	r24, X
     7b0:	81 11       	cpse	r24, r1
     7b2:	03 c0       	rjmp	.+6      	; 0x7ba <oled_print+0x44>
     7b4:	05 c0       	rjmp	.+10     	; 0x7c0 <oled_print+0x4a>
	volatile char *ext_mem = (char *) OLED_COMMAND_BASE_ADDRESS;
	*ext_mem = data;
}
void oled_write_d(uint8_t data) {
	volatile char *ext_mem = (char *) OLED_DATA_BASE_ADDRESS;
	*ext_mem = data;
     7b6:	c0 e0       	ldi	r28, 0x00	; 0
     7b8:	d2 e1       	ldi	r29, 0x12	; 18
	for (int col = 0; col < 128; col++ ) {
		oled_write_d(0x00);
	}
}

void oled_print(char* character){
     7ba:	20 e0       	ldi	r18, 0x00	; 0
     7bc:	30 e0       	ldi	r19, 0x00	; 0
     7be:	e2 cf       	rjmp	.-60     	; 0x784 <oled_print+0xe>
			oled_write_d(pgm_read_byte(&(font8[*character-ASCII_SPACE][col])));
		}
		character++;
	}
	
}
     7c0:	df 91       	pop	r29
     7c2:	cf 91       	pop	r28
     7c4:	08 95       	ret

000007c6 <setupInit>:
#include "joystick.h"
#include "setup.h"
#include "oled.h"

	void setupInit(void){
	xmem_init();
     7c6:	0e 94 3b 04 	call	0x876	; 0x876 <xmem_init>
	USART_init(MYUBRR);
     7ca:	8f e1       	ldi	r24, 0x1F	; 31
     7cc:	90 e0       	ldi	r25, 0x00	; 0
     7ce:	0e 94 2a 04 	call	0x854	; 0x854 <USART_init>
	adcInit();
     7d2:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <adcInit>
	joystickInit();
     7d6:	0e 94 60 02 	call	0x4c0	; 0x4c0 <joystickInit>
	touchButton_init();
     7da:	0e 94 00 04 	call	0x800	; 0x800 <touchButton_init>
	oled_init();
     7de:	0e 94 85 03 	call	0x70a	; 0x70a <oled_init>
     7e2:	08 95       	ret

000007e4 <slider_readPosition>:
#define LEFT_POS_CHANNEL 2
#define RIGHT_POS_CHANNEL 3
#include "slider.h"
#include "adc.h"
void slider_readPosition(slider_position_t * pos) {
     7e4:	cf 93       	push	r28
     7e6:	df 93       	push	r29
     7e8:	ec 01       	movw	r28, r24
	pos->left_pos = readAdc(LEFT_POS_CHANNEL);
     7ea:	82 e0       	ldi	r24, 0x02	; 2
     7ec:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <readAdc>
     7f0:	88 83       	st	Y, r24
	pos->right_pos = readAdc(RIGHT_POS_CHANNEL);
     7f2:	83 e0       	ldi	r24, 0x03	; 3
     7f4:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <readAdc>
     7f8:	89 83       	std	Y+1, r24	; 0x01
     7fa:	df 91       	pop	r29
     7fc:	cf 91       	pop	r28
     7fe:	08 95       	ret

00000800 <touchButton_init>:

#include "touchButton.h"
#include "adc.h"

void touchButton_init() {
	DDRB &= ~(1 << BUTTON_LEFT | 1 << BUTTON_RIGHT);
     800:	36 b3       	in	r19, 0x16	; 22
     802:	26 b3       	in	r18, 0x16	; 22
     804:	47 b3       	in	r20, 0x17	; 23
     806:	31 70       	andi	r19, 0x01	; 1
     808:	81 e0       	ldi	r24, 0x01	; 1
     80a:	90 e0       	ldi	r25, 0x00	; 0
     80c:	bc 01       	movw	r22, r24
     80e:	02 c0       	rjmp	.+4      	; 0x814 <touchButton_init+0x14>
     810:	66 0f       	add	r22, r22
     812:	77 1f       	adc	r23, r23
     814:	3a 95       	dec	r19
     816:	e2 f7       	brpl	.-8      	; 0x810 <touchButton_init+0x10>
     818:	22 70       	andi	r18, 0x02	; 2
     81a:	02 c0       	rjmp	.+4      	; 0x820 <touchButton_init+0x20>
     81c:	88 0f       	add	r24, r24
     81e:	99 1f       	adc	r25, r25
     820:	2a 95       	dec	r18
     822:	e2 f7       	brpl	.-8      	; 0x81c <touchButton_init+0x1c>
     824:	86 2b       	or	r24, r22
     826:	97 2b       	or	r25, r23
     828:	80 95       	com	r24
     82a:	90 95       	com	r25
     82c:	84 23       	and	r24, r20
     82e:	87 bb       	out	0x17, r24	; 23
     830:	08 95       	ret

00000832 <touchButton_readButtons>:
}
touchButton_readButtons(buttonValues_t * buttons) {
     832:	fc 01       	movw	r30, r24
	buttons->left_button = !!(BUTTON_LEFT);
     834:	96 b3       	in	r25, 0x16	; 22
     836:	91 70       	andi	r25, 0x01	; 1
     838:	90 83       	st	Z, r25
	buttons->right_button = !!(BUTTON_RIGHT);
     83a:	96 b3       	in	r25, 0x16	; 22
     83c:	96 95       	lsr	r25
     83e:	91 70       	andi	r25, 0x01	; 1
     840:	91 83       	std	Z+1, r25	; 0x01
     842:	08 95       	ret

00000844 <USART_transmitChar>:
	uart = fdevopen(&USART_transmitChar, &USART_receiveChar);
}

void USART_transmitChar(unsigned char data) {
	/* wait for empty transmit buffer */
	while ( ! ( UCSR0A & (1<<UDRE0)))
     844:	5d 9b       	sbis	0x0b, 5	; 11
     846:	fe cf       	rjmp	.-4      	; 0x844 <USART_transmitChar>
		;
		
	/* Put data in buffer, send data */
	UDR0 = data;
     848:	8c b9       	out	0x0c, r24	; 12
     84a:	08 95       	ret

0000084c <USART_receiveChar>:
}

unsigned char USART_receiveChar( void ) {
	/* wait for data to be received*/
	while ( !(UCSR0A & (1<<RXC0) ) ) 
     84c:	5f 9b       	sbis	0x0b, 7	; 11
     84e:	fe cf       	rjmp	.-4      	; 0x84c <USART_receiveChar>
		;
	
	return UDR0;
     850:	8c b1       	in	r24, 0x0c	; 12
     852:	08 95       	ret

00000854 <USART_init>:

#include "uart.h"
FILE *uart ;
void USART_init(unsigned int ubrr) {
	
	UBRR0H = (unsigned char) (ubrr >> 8);
     854:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char) (ubrr);
     856:	89 b9       	out	0x09, r24	; 9
	
	/*Enable receiver and transmitter*/
	
	UCSR0B = (1<<RXEN0) | (1 <<TXEN0);
     858:	88 e1       	ldi	r24, 0x18	; 24
     85a:	8a b9       	out	0x0a, r24	; 10
	
	/* SET FRAME FORMAT: 8data, 2 stop bit */
	UCSR0C = (1 << URSEL0) | (1<<USBS0) | (3<<UCSZ00);
     85c:	8e e8       	ldi	r24, 0x8E	; 142
     85e:	80 bd       	out	0x20, r24	; 32
	
	uart = fdevopen(&USART_transmitChar, &USART_receiveChar);
     860:	66 e2       	ldi	r22, 0x26	; 38
     862:	74 e0       	ldi	r23, 0x04	; 4
     864:	82 e2       	ldi	r24, 0x22	; 34
     866:	94 e0       	ldi	r25, 0x04	; 4
     868:	0e 94 47 08 	call	0x108e	; 0x108e <fdevopen>
     86c:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <uart+0x1>
     870:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <uart>
     874:	08 95       	ret

00000876 <xmem_init>:
#define BASE_ADDRESS 0x1000;
#include <avr/io.h>
#include "xmem.h"

void xmem_init(void) {
	MCUCR |= (1<<SRE);
     876:	85 b7       	in	r24, 0x35	; 53
     878:	80 68       	ori	r24, 0x80	; 128
     87a:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1<<XMM0);
     87c:	80 b7       	in	r24, 0x30	; 48
     87e:	88 60       	ori	r24, 0x08	; 8
     880:	80 bf       	out	0x30, r24	; 48
     882:	08 95       	ret
     884:	0e 94 c9 05 	call	0xb92	; 0xb92 <__fp_pscA>
     888:	60 f0       	brcs	.+24     	; 0x8a2 <xmem_init+0x2c>
     88a:	80 e8       	ldi	r24, 0x80	; 128
     88c:	91 e0       	ldi	r25, 0x01	; 1
     88e:	09 f4       	brne	.+2      	; 0x892 <xmem_init+0x1c>
     890:	9e ef       	ldi	r25, 0xFE	; 254
     892:	0e 94 d0 05 	call	0xba0	; 0xba0 <__fp_pscB>
     896:	28 f0       	brcs	.+10     	; 0x8a2 <xmem_init+0x2c>
     898:	40 e8       	ldi	r20, 0x80	; 128
     89a:	51 e0       	ldi	r21, 0x01	; 1
     89c:	71 f4       	brne	.+28     	; 0x8ba <atan2+0x10>
     89e:	5e ef       	ldi	r21, 0xFE	; 254
     8a0:	0c c0       	rjmp	.+24     	; 0x8ba <atan2+0x10>
     8a2:	0c 94 9f 05 	jmp	0xb3e	; 0xb3e <__fp_nan>
     8a6:	0c 94 0a 06 	jmp	0xc14	; 0xc14 <__fp_zero>

000008aa <atan2>:
     8aa:	e9 2f       	mov	r30, r25
     8ac:	e0 78       	andi	r30, 0x80	; 128
     8ae:	0e 94 e8 05 	call	0xbd0	; 0xbd0 <__fp_split3>
     8b2:	40 f3       	brcs	.-48     	; 0x884 <xmem_init+0xe>
     8b4:	09 2e       	mov	r0, r25
     8b6:	05 2a       	or	r0, r21
     8b8:	b1 f3       	breq	.-20     	; 0x8a6 <xmem_init+0x30>
     8ba:	26 17       	cp	r18, r22
     8bc:	37 07       	cpc	r19, r23
     8be:	48 07       	cpc	r20, r24
     8c0:	59 07       	cpc	r21, r25
     8c2:	38 f0       	brcs	.+14     	; 0x8d2 <atan2+0x28>
     8c4:	0e 2e       	mov	r0, r30
     8c6:	07 f8       	bld	r0, 7
     8c8:	e0 25       	eor	r30, r0
     8ca:	69 f0       	breq	.+26     	; 0x8e6 <atan2+0x3c>
     8cc:	e0 25       	eor	r30, r0
     8ce:	e0 64       	ori	r30, 0x40	; 64
     8d0:	0a c0       	rjmp	.+20     	; 0x8e6 <atan2+0x3c>
     8d2:	ef 63       	ori	r30, 0x3F	; 63
     8d4:	07 f8       	bld	r0, 7
     8d6:	00 94       	com	r0
     8d8:	07 fa       	bst	r0, 7
     8da:	db 01       	movw	r26, r22
     8dc:	b9 01       	movw	r22, r18
     8de:	9d 01       	movw	r18, r26
     8e0:	dc 01       	movw	r26, r24
     8e2:	ca 01       	movw	r24, r20
     8e4:	ad 01       	movw	r20, r26
     8e6:	ef 93       	push	r30
     8e8:	0e 94 cb 04 	call	0x996	; 0x996 <__divsf3_pse>
     8ec:	0e 94 d7 05 	call	0xbae	; 0xbae <__fp_round>
     8f0:	0e 94 85 04 	call	0x90a	; 0x90a <atan>
     8f4:	5f 91       	pop	r21
     8f6:	55 23       	and	r21, r21
     8f8:	39 f0       	breq	.+14     	; 0x908 <atan2+0x5e>
     8fa:	2b ed       	ldi	r18, 0xDB	; 219
     8fc:	3f e0       	ldi	r19, 0x0F	; 15
     8fe:	49 e4       	ldi	r20, 0x49	; 73
     900:	50 fd       	sbrc	r21, 0
     902:	49 ec       	ldi	r20, 0xC9	; 201
     904:	0c 94 8b 06 	jmp	0xd16	; 0xd16 <__addsf3>
     908:	08 95       	ret

0000090a <atan>:
     90a:	df 93       	push	r29
     90c:	dd 27       	eor	r29, r29
     90e:	b9 2f       	mov	r27, r25
     910:	bf 77       	andi	r27, 0x7F	; 127
     912:	40 e8       	ldi	r20, 0x80	; 128
     914:	5f e3       	ldi	r21, 0x3F	; 63
     916:	16 16       	cp	r1, r22
     918:	17 06       	cpc	r1, r23
     91a:	48 07       	cpc	r20, r24
     91c:	5b 07       	cpc	r21, r27
     91e:	18 f4       	brcc	.+6      	; 0x926 <atan+0x1c>
     920:	d9 2f       	mov	r29, r25
     922:	0e 94 11 06 	call	0xc22	; 0xc22 <inverse>
     926:	9f 93       	push	r25
     928:	8f 93       	push	r24
     92a:	7f 93       	push	r23
     92c:	6f 93       	push	r22
     92e:	0e 94 86 06 	call	0xd0c	; 0xd0c <square>
     932:	e0 e7       	ldi	r30, 0x70	; 112
     934:	f0 e0       	ldi	r31, 0x00	; 0
     936:	0e 94 a2 05 	call	0xb44	; 0xb44 <__fp_powser>
     93a:	0e 94 d7 05 	call	0xbae	; 0xbae <__fp_round>
     93e:	2f 91       	pop	r18
     940:	3f 91       	pop	r19
     942:	4f 91       	pop	r20
     944:	5f 91       	pop	r21
     946:	0e 94 2c 06 	call	0xc58	; 0xc58 <__mulsf3x>
     94a:	dd 23       	and	r29, r29
     94c:	51 f0       	breq	.+20     	; 0x962 <atan+0x58>
     94e:	90 58       	subi	r25, 0x80	; 128
     950:	a2 ea       	ldi	r26, 0xA2	; 162
     952:	2a ed       	ldi	r18, 0xDA	; 218
     954:	3f e0       	ldi	r19, 0x0F	; 15
     956:	49 ec       	ldi	r20, 0xC9	; 201
     958:	5f e3       	ldi	r21, 0x3F	; 63
     95a:	d0 78       	andi	r29, 0x80	; 128
     95c:	5d 27       	eor	r21, r29
     95e:	0e 94 a2 06 	call	0xd44	; 0xd44 <__addsf3x>
     962:	df 91       	pop	r29
     964:	0c 94 d7 05 	jmp	0xbae	; 0xbae <__fp_round>

00000968 <__divsf3>:
     968:	0e 94 c8 04 	call	0x990	; 0x990 <__divsf3x>
     96c:	0c 94 d7 05 	jmp	0xbae	; 0xbae <__fp_round>
     970:	0e 94 d0 05 	call	0xba0	; 0xba0 <__fp_pscB>
     974:	58 f0       	brcs	.+22     	; 0x98c <__divsf3+0x24>
     976:	0e 94 c9 05 	call	0xb92	; 0xb92 <__fp_pscA>
     97a:	40 f0       	brcs	.+16     	; 0x98c <__divsf3+0x24>
     97c:	29 f4       	brne	.+10     	; 0x988 <__divsf3+0x20>
     97e:	5f 3f       	cpi	r21, 0xFF	; 255
     980:	29 f0       	breq	.+10     	; 0x98c <__divsf3+0x24>
     982:	0c 94 99 05 	jmp	0xb32	; 0xb32 <__fp_inf>
     986:	51 11       	cpse	r21, r1
     988:	0c 94 0b 06 	jmp	0xc16	; 0xc16 <__fp_szero>
     98c:	0c 94 9f 05 	jmp	0xb3e	; 0xb3e <__fp_nan>

00000990 <__divsf3x>:
     990:	0e 94 e8 05 	call	0xbd0	; 0xbd0 <__fp_split3>
     994:	68 f3       	brcs	.-38     	; 0x970 <__divsf3+0x8>

00000996 <__divsf3_pse>:
     996:	99 23       	and	r25, r25
     998:	b1 f3       	breq	.-20     	; 0x986 <__divsf3+0x1e>
     99a:	55 23       	and	r21, r21
     99c:	91 f3       	breq	.-28     	; 0x982 <__divsf3+0x1a>
     99e:	95 1b       	sub	r25, r21
     9a0:	55 0b       	sbc	r21, r21
     9a2:	bb 27       	eor	r27, r27
     9a4:	aa 27       	eor	r26, r26
     9a6:	62 17       	cp	r22, r18
     9a8:	73 07       	cpc	r23, r19
     9aa:	84 07       	cpc	r24, r20
     9ac:	38 f0       	brcs	.+14     	; 0x9bc <__divsf3_pse+0x26>
     9ae:	9f 5f       	subi	r25, 0xFF	; 255
     9b0:	5f 4f       	sbci	r21, 0xFF	; 255
     9b2:	22 0f       	add	r18, r18
     9b4:	33 1f       	adc	r19, r19
     9b6:	44 1f       	adc	r20, r20
     9b8:	aa 1f       	adc	r26, r26
     9ba:	a9 f3       	breq	.-22     	; 0x9a6 <__divsf3_pse+0x10>
     9bc:	35 d0       	rcall	.+106    	; 0xa28 <__divsf3_pse+0x92>
     9be:	0e 2e       	mov	r0, r30
     9c0:	3a f0       	brmi	.+14     	; 0x9d0 <__divsf3_pse+0x3a>
     9c2:	e0 e8       	ldi	r30, 0x80	; 128
     9c4:	32 d0       	rcall	.+100    	; 0xa2a <__divsf3_pse+0x94>
     9c6:	91 50       	subi	r25, 0x01	; 1
     9c8:	50 40       	sbci	r21, 0x00	; 0
     9ca:	e6 95       	lsr	r30
     9cc:	00 1c       	adc	r0, r0
     9ce:	ca f7       	brpl	.-14     	; 0x9c2 <__divsf3_pse+0x2c>
     9d0:	2b d0       	rcall	.+86     	; 0xa28 <__divsf3_pse+0x92>
     9d2:	fe 2f       	mov	r31, r30
     9d4:	29 d0       	rcall	.+82     	; 0xa28 <__divsf3_pse+0x92>
     9d6:	66 0f       	add	r22, r22
     9d8:	77 1f       	adc	r23, r23
     9da:	88 1f       	adc	r24, r24
     9dc:	bb 1f       	adc	r27, r27
     9de:	26 17       	cp	r18, r22
     9e0:	37 07       	cpc	r19, r23
     9e2:	48 07       	cpc	r20, r24
     9e4:	ab 07       	cpc	r26, r27
     9e6:	b0 e8       	ldi	r27, 0x80	; 128
     9e8:	09 f0       	breq	.+2      	; 0x9ec <__divsf3_pse+0x56>
     9ea:	bb 0b       	sbc	r27, r27
     9ec:	80 2d       	mov	r24, r0
     9ee:	bf 01       	movw	r22, r30
     9f0:	ff 27       	eor	r31, r31
     9f2:	93 58       	subi	r25, 0x83	; 131
     9f4:	5f 4f       	sbci	r21, 0xFF	; 255
     9f6:	3a f0       	brmi	.+14     	; 0xa06 <__divsf3_pse+0x70>
     9f8:	9e 3f       	cpi	r25, 0xFE	; 254
     9fa:	51 05       	cpc	r21, r1
     9fc:	78 f0       	brcs	.+30     	; 0xa1c <__divsf3_pse+0x86>
     9fe:	0c 94 99 05 	jmp	0xb32	; 0xb32 <__fp_inf>
     a02:	0c 94 0b 06 	jmp	0xc16	; 0xc16 <__fp_szero>
     a06:	5f 3f       	cpi	r21, 0xFF	; 255
     a08:	e4 f3       	brlt	.-8      	; 0xa02 <__divsf3_pse+0x6c>
     a0a:	98 3e       	cpi	r25, 0xE8	; 232
     a0c:	d4 f3       	brlt	.-12     	; 0xa02 <__divsf3_pse+0x6c>
     a0e:	86 95       	lsr	r24
     a10:	77 95       	ror	r23
     a12:	67 95       	ror	r22
     a14:	b7 95       	ror	r27
     a16:	f7 95       	ror	r31
     a18:	9f 5f       	subi	r25, 0xFF	; 255
     a1a:	c9 f7       	brne	.-14     	; 0xa0e <__divsf3_pse+0x78>
     a1c:	88 0f       	add	r24, r24
     a1e:	91 1d       	adc	r25, r1
     a20:	96 95       	lsr	r25
     a22:	87 95       	ror	r24
     a24:	97 f9       	bld	r25, 7
     a26:	08 95       	ret
     a28:	e1 e0       	ldi	r30, 0x01	; 1
     a2a:	66 0f       	add	r22, r22
     a2c:	77 1f       	adc	r23, r23
     a2e:	88 1f       	adc	r24, r24
     a30:	bb 1f       	adc	r27, r27
     a32:	62 17       	cp	r22, r18
     a34:	73 07       	cpc	r23, r19
     a36:	84 07       	cpc	r24, r20
     a38:	ba 07       	cpc	r27, r26
     a3a:	20 f0       	brcs	.+8      	; 0xa44 <__divsf3_pse+0xae>
     a3c:	62 1b       	sub	r22, r18
     a3e:	73 0b       	sbc	r23, r19
     a40:	84 0b       	sbc	r24, r20
     a42:	ba 0b       	sbc	r27, r26
     a44:	ee 1f       	adc	r30, r30
     a46:	88 f7       	brcc	.-30     	; 0xa2a <__divsf3_pse+0x94>
     a48:	e0 95       	com	r30
     a4a:	08 95       	ret

00000a4c <__fixsfsi>:
     a4c:	0e 94 2d 05 	call	0xa5a	; 0xa5a <__fixunssfsi>
     a50:	68 94       	set
     a52:	b1 11       	cpse	r27, r1
     a54:	0c 94 0b 06 	jmp	0xc16	; 0xc16 <__fp_szero>
     a58:	08 95       	ret

00000a5a <__fixunssfsi>:
     a5a:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__fp_splitA>
     a5e:	88 f0       	brcs	.+34     	; 0xa82 <__fixunssfsi+0x28>
     a60:	9f 57       	subi	r25, 0x7F	; 127
     a62:	98 f0       	brcs	.+38     	; 0xa8a <__fixunssfsi+0x30>
     a64:	b9 2f       	mov	r27, r25
     a66:	99 27       	eor	r25, r25
     a68:	b7 51       	subi	r27, 0x17	; 23
     a6a:	b0 f0       	brcs	.+44     	; 0xa98 <__fixunssfsi+0x3e>
     a6c:	e1 f0       	breq	.+56     	; 0xaa6 <__fixunssfsi+0x4c>
     a6e:	66 0f       	add	r22, r22
     a70:	77 1f       	adc	r23, r23
     a72:	88 1f       	adc	r24, r24
     a74:	99 1f       	adc	r25, r25
     a76:	1a f0       	brmi	.+6      	; 0xa7e <__fixunssfsi+0x24>
     a78:	ba 95       	dec	r27
     a7a:	c9 f7       	brne	.-14     	; 0xa6e <__fixunssfsi+0x14>
     a7c:	14 c0       	rjmp	.+40     	; 0xaa6 <__fixunssfsi+0x4c>
     a7e:	b1 30       	cpi	r27, 0x01	; 1
     a80:	91 f0       	breq	.+36     	; 0xaa6 <__fixunssfsi+0x4c>
     a82:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fp_zero>
     a86:	b1 e0       	ldi	r27, 0x01	; 1
     a88:	08 95       	ret
     a8a:	0c 94 0a 06 	jmp	0xc14	; 0xc14 <__fp_zero>
     a8e:	67 2f       	mov	r22, r23
     a90:	78 2f       	mov	r23, r24
     a92:	88 27       	eor	r24, r24
     a94:	b8 5f       	subi	r27, 0xF8	; 248
     a96:	39 f0       	breq	.+14     	; 0xaa6 <__fixunssfsi+0x4c>
     a98:	b9 3f       	cpi	r27, 0xF9	; 249
     a9a:	cc f3       	brlt	.-14     	; 0xa8e <__fixunssfsi+0x34>
     a9c:	86 95       	lsr	r24
     a9e:	77 95       	ror	r23
     aa0:	67 95       	ror	r22
     aa2:	b3 95       	inc	r27
     aa4:	d9 f7       	brne	.-10     	; 0xa9c <__fixunssfsi+0x42>
     aa6:	3e f4       	brtc	.+14     	; 0xab6 <__fixunssfsi+0x5c>
     aa8:	90 95       	com	r25
     aaa:	80 95       	com	r24
     aac:	70 95       	com	r23
     aae:	61 95       	neg	r22
     ab0:	7f 4f       	sbci	r23, 0xFF	; 255
     ab2:	8f 4f       	sbci	r24, 0xFF	; 255
     ab4:	9f 4f       	sbci	r25, 0xFF	; 255
     ab6:	08 95       	ret

00000ab8 <__floatunsisf>:
     ab8:	e8 94       	clt
     aba:	09 c0       	rjmp	.+18     	; 0xace <__floatsisf+0x12>

00000abc <__floatsisf>:
     abc:	97 fb       	bst	r25, 7
     abe:	3e f4       	brtc	.+14     	; 0xace <__floatsisf+0x12>
     ac0:	90 95       	com	r25
     ac2:	80 95       	com	r24
     ac4:	70 95       	com	r23
     ac6:	61 95       	neg	r22
     ac8:	7f 4f       	sbci	r23, 0xFF	; 255
     aca:	8f 4f       	sbci	r24, 0xFF	; 255
     acc:	9f 4f       	sbci	r25, 0xFF	; 255
     ace:	99 23       	and	r25, r25
     ad0:	a9 f0       	breq	.+42     	; 0xafc <__floatsisf+0x40>
     ad2:	f9 2f       	mov	r31, r25
     ad4:	96 e9       	ldi	r25, 0x96	; 150
     ad6:	bb 27       	eor	r27, r27
     ad8:	93 95       	inc	r25
     ada:	f6 95       	lsr	r31
     adc:	87 95       	ror	r24
     ade:	77 95       	ror	r23
     ae0:	67 95       	ror	r22
     ae2:	b7 95       	ror	r27
     ae4:	f1 11       	cpse	r31, r1
     ae6:	f8 cf       	rjmp	.-16     	; 0xad8 <__floatsisf+0x1c>
     ae8:	fa f4       	brpl	.+62     	; 0xb28 <__floatsisf+0x6c>
     aea:	bb 0f       	add	r27, r27
     aec:	11 f4       	brne	.+4      	; 0xaf2 <__floatsisf+0x36>
     aee:	60 ff       	sbrs	r22, 0
     af0:	1b c0       	rjmp	.+54     	; 0xb28 <__floatsisf+0x6c>
     af2:	6f 5f       	subi	r22, 0xFF	; 255
     af4:	7f 4f       	sbci	r23, 0xFF	; 255
     af6:	8f 4f       	sbci	r24, 0xFF	; 255
     af8:	9f 4f       	sbci	r25, 0xFF	; 255
     afa:	16 c0       	rjmp	.+44     	; 0xb28 <__floatsisf+0x6c>
     afc:	88 23       	and	r24, r24
     afe:	11 f0       	breq	.+4      	; 0xb04 <__floatsisf+0x48>
     b00:	96 e9       	ldi	r25, 0x96	; 150
     b02:	11 c0       	rjmp	.+34     	; 0xb26 <__floatsisf+0x6a>
     b04:	77 23       	and	r23, r23
     b06:	21 f0       	breq	.+8      	; 0xb10 <__floatsisf+0x54>
     b08:	9e e8       	ldi	r25, 0x8E	; 142
     b0a:	87 2f       	mov	r24, r23
     b0c:	76 2f       	mov	r23, r22
     b0e:	05 c0       	rjmp	.+10     	; 0xb1a <__floatsisf+0x5e>
     b10:	66 23       	and	r22, r22
     b12:	71 f0       	breq	.+28     	; 0xb30 <__floatsisf+0x74>
     b14:	96 e8       	ldi	r25, 0x86	; 134
     b16:	86 2f       	mov	r24, r22
     b18:	70 e0       	ldi	r23, 0x00	; 0
     b1a:	60 e0       	ldi	r22, 0x00	; 0
     b1c:	2a f0       	brmi	.+10     	; 0xb28 <__floatsisf+0x6c>
     b1e:	9a 95       	dec	r25
     b20:	66 0f       	add	r22, r22
     b22:	77 1f       	adc	r23, r23
     b24:	88 1f       	adc	r24, r24
     b26:	da f7       	brpl	.-10     	; 0xb1e <__floatsisf+0x62>
     b28:	88 0f       	add	r24, r24
     b2a:	96 95       	lsr	r25
     b2c:	87 95       	ror	r24
     b2e:	97 f9       	bld	r25, 7
     b30:	08 95       	ret

00000b32 <__fp_inf>:
     b32:	97 f9       	bld	r25, 7
     b34:	9f 67       	ori	r25, 0x7F	; 127
     b36:	80 e8       	ldi	r24, 0x80	; 128
     b38:	70 e0       	ldi	r23, 0x00	; 0
     b3a:	60 e0       	ldi	r22, 0x00	; 0
     b3c:	08 95       	ret

00000b3e <__fp_nan>:
     b3e:	9f ef       	ldi	r25, 0xFF	; 255
     b40:	80 ec       	ldi	r24, 0xC0	; 192
     b42:	08 95       	ret

00000b44 <__fp_powser>:
     b44:	df 93       	push	r29
     b46:	cf 93       	push	r28
     b48:	1f 93       	push	r17
     b4a:	0f 93       	push	r16
     b4c:	ff 92       	push	r15
     b4e:	ef 92       	push	r14
     b50:	df 92       	push	r13
     b52:	7b 01       	movw	r14, r22
     b54:	8c 01       	movw	r16, r24
     b56:	68 94       	set
     b58:	06 c0       	rjmp	.+12     	; 0xb66 <__fp_powser+0x22>
     b5a:	da 2e       	mov	r13, r26
     b5c:	ef 01       	movw	r28, r30
     b5e:	0e 94 2c 06 	call	0xc58	; 0xc58 <__mulsf3x>
     b62:	fe 01       	movw	r30, r28
     b64:	e8 94       	clt
     b66:	a5 91       	lpm	r26, Z+
     b68:	25 91       	lpm	r18, Z+
     b6a:	35 91       	lpm	r19, Z+
     b6c:	45 91       	lpm	r20, Z+
     b6e:	55 91       	lpm	r21, Z+
     b70:	a6 f3       	brts	.-24     	; 0xb5a <__fp_powser+0x16>
     b72:	ef 01       	movw	r28, r30
     b74:	0e 94 a2 06 	call	0xd44	; 0xd44 <__addsf3x>
     b78:	fe 01       	movw	r30, r28
     b7a:	97 01       	movw	r18, r14
     b7c:	a8 01       	movw	r20, r16
     b7e:	da 94       	dec	r13
     b80:	69 f7       	brne	.-38     	; 0xb5c <__fp_powser+0x18>
     b82:	df 90       	pop	r13
     b84:	ef 90       	pop	r14
     b86:	ff 90       	pop	r15
     b88:	0f 91       	pop	r16
     b8a:	1f 91       	pop	r17
     b8c:	cf 91       	pop	r28
     b8e:	df 91       	pop	r29
     b90:	08 95       	ret

00000b92 <__fp_pscA>:
     b92:	00 24       	eor	r0, r0
     b94:	0a 94       	dec	r0
     b96:	16 16       	cp	r1, r22
     b98:	17 06       	cpc	r1, r23
     b9a:	18 06       	cpc	r1, r24
     b9c:	09 06       	cpc	r0, r25
     b9e:	08 95       	ret

00000ba0 <__fp_pscB>:
     ba0:	00 24       	eor	r0, r0
     ba2:	0a 94       	dec	r0
     ba4:	12 16       	cp	r1, r18
     ba6:	13 06       	cpc	r1, r19
     ba8:	14 06       	cpc	r1, r20
     baa:	05 06       	cpc	r0, r21
     bac:	08 95       	ret

00000bae <__fp_round>:
     bae:	09 2e       	mov	r0, r25
     bb0:	03 94       	inc	r0
     bb2:	00 0c       	add	r0, r0
     bb4:	11 f4       	brne	.+4      	; 0xbba <__fp_round+0xc>
     bb6:	88 23       	and	r24, r24
     bb8:	52 f0       	brmi	.+20     	; 0xbce <__fp_round+0x20>
     bba:	bb 0f       	add	r27, r27
     bbc:	40 f4       	brcc	.+16     	; 0xbce <__fp_round+0x20>
     bbe:	bf 2b       	or	r27, r31
     bc0:	11 f4       	brne	.+4      	; 0xbc6 <__fp_round+0x18>
     bc2:	60 ff       	sbrs	r22, 0
     bc4:	04 c0       	rjmp	.+8      	; 0xbce <__fp_round+0x20>
     bc6:	6f 5f       	subi	r22, 0xFF	; 255
     bc8:	7f 4f       	sbci	r23, 0xFF	; 255
     bca:	8f 4f       	sbci	r24, 0xFF	; 255
     bcc:	9f 4f       	sbci	r25, 0xFF	; 255
     bce:	08 95       	ret

00000bd0 <__fp_split3>:
     bd0:	57 fd       	sbrc	r21, 7
     bd2:	90 58       	subi	r25, 0x80	; 128
     bd4:	44 0f       	add	r20, r20
     bd6:	55 1f       	adc	r21, r21
     bd8:	59 f0       	breq	.+22     	; 0xbf0 <__fp_splitA+0x10>
     bda:	5f 3f       	cpi	r21, 0xFF	; 255
     bdc:	71 f0       	breq	.+28     	; 0xbfa <__fp_splitA+0x1a>
     bde:	47 95       	ror	r20

00000be0 <__fp_splitA>:
     be0:	88 0f       	add	r24, r24
     be2:	97 fb       	bst	r25, 7
     be4:	99 1f       	adc	r25, r25
     be6:	61 f0       	breq	.+24     	; 0xc00 <__fp_splitA+0x20>
     be8:	9f 3f       	cpi	r25, 0xFF	; 255
     bea:	79 f0       	breq	.+30     	; 0xc0a <__fp_splitA+0x2a>
     bec:	87 95       	ror	r24
     bee:	08 95       	ret
     bf0:	12 16       	cp	r1, r18
     bf2:	13 06       	cpc	r1, r19
     bf4:	14 06       	cpc	r1, r20
     bf6:	55 1f       	adc	r21, r21
     bf8:	f2 cf       	rjmp	.-28     	; 0xbde <__fp_split3+0xe>
     bfa:	46 95       	lsr	r20
     bfc:	f1 df       	rcall	.-30     	; 0xbe0 <__fp_splitA>
     bfe:	08 c0       	rjmp	.+16     	; 0xc10 <__fp_splitA+0x30>
     c00:	16 16       	cp	r1, r22
     c02:	17 06       	cpc	r1, r23
     c04:	18 06       	cpc	r1, r24
     c06:	99 1f       	adc	r25, r25
     c08:	f1 cf       	rjmp	.-30     	; 0xbec <__fp_splitA+0xc>
     c0a:	86 95       	lsr	r24
     c0c:	71 05       	cpc	r23, r1
     c0e:	61 05       	cpc	r22, r1
     c10:	08 94       	sec
     c12:	08 95       	ret

00000c14 <__fp_zero>:
     c14:	e8 94       	clt

00000c16 <__fp_szero>:
     c16:	bb 27       	eor	r27, r27
     c18:	66 27       	eor	r22, r22
     c1a:	77 27       	eor	r23, r23
     c1c:	cb 01       	movw	r24, r22
     c1e:	97 f9       	bld	r25, 7
     c20:	08 95       	ret

00000c22 <inverse>:
     c22:	9b 01       	movw	r18, r22
     c24:	ac 01       	movw	r20, r24
     c26:	60 e0       	ldi	r22, 0x00	; 0
     c28:	70 e0       	ldi	r23, 0x00	; 0
     c2a:	80 e8       	ldi	r24, 0x80	; 128
     c2c:	9f e3       	ldi	r25, 0x3F	; 63
     c2e:	0c 94 b4 04 	jmp	0x968	; 0x968 <__divsf3>

00000c32 <__mulsf3>:
     c32:	0e 94 2c 06 	call	0xc58	; 0xc58 <__mulsf3x>
     c36:	0c 94 d7 05 	jmp	0xbae	; 0xbae <__fp_round>
     c3a:	0e 94 c9 05 	call	0xb92	; 0xb92 <__fp_pscA>
     c3e:	38 f0       	brcs	.+14     	; 0xc4e <__mulsf3+0x1c>
     c40:	0e 94 d0 05 	call	0xba0	; 0xba0 <__fp_pscB>
     c44:	20 f0       	brcs	.+8      	; 0xc4e <__mulsf3+0x1c>
     c46:	95 23       	and	r25, r21
     c48:	11 f0       	breq	.+4      	; 0xc4e <__mulsf3+0x1c>
     c4a:	0c 94 99 05 	jmp	0xb32	; 0xb32 <__fp_inf>
     c4e:	0c 94 9f 05 	jmp	0xb3e	; 0xb3e <__fp_nan>
     c52:	11 24       	eor	r1, r1
     c54:	0c 94 0b 06 	jmp	0xc16	; 0xc16 <__fp_szero>

00000c58 <__mulsf3x>:
     c58:	0e 94 e8 05 	call	0xbd0	; 0xbd0 <__fp_split3>
     c5c:	70 f3       	brcs	.-36     	; 0xc3a <__mulsf3+0x8>

00000c5e <__mulsf3_pse>:
     c5e:	95 9f       	mul	r25, r21
     c60:	c1 f3       	breq	.-16     	; 0xc52 <__mulsf3+0x20>
     c62:	95 0f       	add	r25, r21
     c64:	50 e0       	ldi	r21, 0x00	; 0
     c66:	55 1f       	adc	r21, r21
     c68:	62 9f       	mul	r22, r18
     c6a:	f0 01       	movw	r30, r0
     c6c:	72 9f       	mul	r23, r18
     c6e:	bb 27       	eor	r27, r27
     c70:	f0 0d       	add	r31, r0
     c72:	b1 1d       	adc	r27, r1
     c74:	63 9f       	mul	r22, r19
     c76:	aa 27       	eor	r26, r26
     c78:	f0 0d       	add	r31, r0
     c7a:	b1 1d       	adc	r27, r1
     c7c:	aa 1f       	adc	r26, r26
     c7e:	64 9f       	mul	r22, r20
     c80:	66 27       	eor	r22, r22
     c82:	b0 0d       	add	r27, r0
     c84:	a1 1d       	adc	r26, r1
     c86:	66 1f       	adc	r22, r22
     c88:	82 9f       	mul	r24, r18
     c8a:	22 27       	eor	r18, r18
     c8c:	b0 0d       	add	r27, r0
     c8e:	a1 1d       	adc	r26, r1
     c90:	62 1f       	adc	r22, r18
     c92:	73 9f       	mul	r23, r19
     c94:	b0 0d       	add	r27, r0
     c96:	a1 1d       	adc	r26, r1
     c98:	62 1f       	adc	r22, r18
     c9a:	83 9f       	mul	r24, r19
     c9c:	a0 0d       	add	r26, r0
     c9e:	61 1d       	adc	r22, r1
     ca0:	22 1f       	adc	r18, r18
     ca2:	74 9f       	mul	r23, r20
     ca4:	33 27       	eor	r19, r19
     ca6:	a0 0d       	add	r26, r0
     ca8:	61 1d       	adc	r22, r1
     caa:	23 1f       	adc	r18, r19
     cac:	84 9f       	mul	r24, r20
     cae:	60 0d       	add	r22, r0
     cb0:	21 1d       	adc	r18, r1
     cb2:	82 2f       	mov	r24, r18
     cb4:	76 2f       	mov	r23, r22
     cb6:	6a 2f       	mov	r22, r26
     cb8:	11 24       	eor	r1, r1
     cba:	9f 57       	subi	r25, 0x7F	; 127
     cbc:	50 40       	sbci	r21, 0x00	; 0
     cbe:	9a f0       	brmi	.+38     	; 0xce6 <__mulsf3_pse+0x88>
     cc0:	f1 f0       	breq	.+60     	; 0xcfe <__mulsf3_pse+0xa0>
     cc2:	88 23       	and	r24, r24
     cc4:	4a f0       	brmi	.+18     	; 0xcd8 <__mulsf3_pse+0x7a>
     cc6:	ee 0f       	add	r30, r30
     cc8:	ff 1f       	adc	r31, r31
     cca:	bb 1f       	adc	r27, r27
     ccc:	66 1f       	adc	r22, r22
     cce:	77 1f       	adc	r23, r23
     cd0:	88 1f       	adc	r24, r24
     cd2:	91 50       	subi	r25, 0x01	; 1
     cd4:	50 40       	sbci	r21, 0x00	; 0
     cd6:	a9 f7       	brne	.-22     	; 0xcc2 <__mulsf3_pse+0x64>
     cd8:	9e 3f       	cpi	r25, 0xFE	; 254
     cda:	51 05       	cpc	r21, r1
     cdc:	80 f0       	brcs	.+32     	; 0xcfe <__mulsf3_pse+0xa0>
     cde:	0c 94 99 05 	jmp	0xb32	; 0xb32 <__fp_inf>
     ce2:	0c 94 0b 06 	jmp	0xc16	; 0xc16 <__fp_szero>
     ce6:	5f 3f       	cpi	r21, 0xFF	; 255
     ce8:	e4 f3       	brlt	.-8      	; 0xce2 <__mulsf3_pse+0x84>
     cea:	98 3e       	cpi	r25, 0xE8	; 232
     cec:	d4 f3       	brlt	.-12     	; 0xce2 <__mulsf3_pse+0x84>
     cee:	86 95       	lsr	r24
     cf0:	77 95       	ror	r23
     cf2:	67 95       	ror	r22
     cf4:	b7 95       	ror	r27
     cf6:	f7 95       	ror	r31
     cf8:	e7 95       	ror	r30
     cfa:	9f 5f       	subi	r25, 0xFF	; 255
     cfc:	c1 f7       	brne	.-16     	; 0xcee <__mulsf3_pse+0x90>
     cfe:	fe 2b       	or	r31, r30
     d00:	88 0f       	add	r24, r24
     d02:	91 1d       	adc	r25, r1
     d04:	96 95       	lsr	r25
     d06:	87 95       	ror	r24
     d08:	97 f9       	bld	r25, 7
     d0a:	08 95       	ret

00000d0c <square>:
     d0c:	9b 01       	movw	r18, r22
     d0e:	ac 01       	movw	r20, r24
     d10:	0c 94 19 06 	jmp	0xc32	; 0xc32 <__mulsf3>

00000d14 <__subsf3>:
     d14:	50 58       	subi	r21, 0x80	; 128

00000d16 <__addsf3>:
     d16:	bb 27       	eor	r27, r27
     d18:	aa 27       	eor	r26, r26
     d1a:	0e 94 a2 06 	call	0xd44	; 0xd44 <__addsf3x>
     d1e:	0c 94 d7 05 	jmp	0xbae	; 0xbae <__fp_round>
     d22:	0e 94 c9 05 	call	0xb92	; 0xb92 <__fp_pscA>
     d26:	38 f0       	brcs	.+14     	; 0xd36 <__addsf3+0x20>
     d28:	0e 94 d0 05 	call	0xba0	; 0xba0 <__fp_pscB>
     d2c:	20 f0       	brcs	.+8      	; 0xd36 <__addsf3+0x20>
     d2e:	39 f4       	brne	.+14     	; 0xd3e <__addsf3+0x28>
     d30:	9f 3f       	cpi	r25, 0xFF	; 255
     d32:	19 f4       	brne	.+6      	; 0xd3a <__addsf3+0x24>
     d34:	26 f4       	brtc	.+8      	; 0xd3e <__addsf3+0x28>
     d36:	0c 94 9f 05 	jmp	0xb3e	; 0xb3e <__fp_nan>
     d3a:	0e f4       	brtc	.+2      	; 0xd3e <__addsf3+0x28>
     d3c:	e0 95       	com	r30
     d3e:	e7 fb       	bst	r30, 7
     d40:	0c 94 99 05 	jmp	0xb32	; 0xb32 <__fp_inf>

00000d44 <__addsf3x>:
     d44:	e9 2f       	mov	r30, r25
     d46:	0e 94 e8 05 	call	0xbd0	; 0xbd0 <__fp_split3>
     d4a:	58 f3       	brcs	.-42     	; 0xd22 <__addsf3+0xc>
     d4c:	ba 17       	cp	r27, r26
     d4e:	62 07       	cpc	r22, r18
     d50:	73 07       	cpc	r23, r19
     d52:	84 07       	cpc	r24, r20
     d54:	95 07       	cpc	r25, r21
     d56:	20 f0       	brcs	.+8      	; 0xd60 <__addsf3x+0x1c>
     d58:	79 f4       	brne	.+30     	; 0xd78 <__addsf3x+0x34>
     d5a:	a6 f5       	brtc	.+104    	; 0xdc4 <__addsf3x+0x80>
     d5c:	0c 94 0a 06 	jmp	0xc14	; 0xc14 <__fp_zero>
     d60:	0e f4       	brtc	.+2      	; 0xd64 <__addsf3x+0x20>
     d62:	e0 95       	com	r30
     d64:	0b 2e       	mov	r0, r27
     d66:	ba 2f       	mov	r27, r26
     d68:	a0 2d       	mov	r26, r0
     d6a:	0b 01       	movw	r0, r22
     d6c:	b9 01       	movw	r22, r18
     d6e:	90 01       	movw	r18, r0
     d70:	0c 01       	movw	r0, r24
     d72:	ca 01       	movw	r24, r20
     d74:	a0 01       	movw	r20, r0
     d76:	11 24       	eor	r1, r1
     d78:	ff 27       	eor	r31, r31
     d7a:	59 1b       	sub	r21, r25
     d7c:	99 f0       	breq	.+38     	; 0xda4 <__addsf3x+0x60>
     d7e:	59 3f       	cpi	r21, 0xF9	; 249
     d80:	50 f4       	brcc	.+20     	; 0xd96 <__addsf3x+0x52>
     d82:	50 3e       	cpi	r21, 0xE0	; 224
     d84:	68 f1       	brcs	.+90     	; 0xde0 <__addsf3x+0x9c>
     d86:	1a 16       	cp	r1, r26
     d88:	f0 40       	sbci	r31, 0x00	; 0
     d8a:	a2 2f       	mov	r26, r18
     d8c:	23 2f       	mov	r18, r19
     d8e:	34 2f       	mov	r19, r20
     d90:	44 27       	eor	r20, r20
     d92:	58 5f       	subi	r21, 0xF8	; 248
     d94:	f3 cf       	rjmp	.-26     	; 0xd7c <__addsf3x+0x38>
     d96:	46 95       	lsr	r20
     d98:	37 95       	ror	r19
     d9a:	27 95       	ror	r18
     d9c:	a7 95       	ror	r26
     d9e:	f0 40       	sbci	r31, 0x00	; 0
     da0:	53 95       	inc	r21
     da2:	c9 f7       	brne	.-14     	; 0xd96 <__addsf3x+0x52>
     da4:	7e f4       	brtc	.+30     	; 0xdc4 <__addsf3x+0x80>
     da6:	1f 16       	cp	r1, r31
     da8:	ba 0b       	sbc	r27, r26
     daa:	62 0b       	sbc	r22, r18
     dac:	73 0b       	sbc	r23, r19
     dae:	84 0b       	sbc	r24, r20
     db0:	ba f0       	brmi	.+46     	; 0xde0 <__addsf3x+0x9c>
     db2:	91 50       	subi	r25, 0x01	; 1
     db4:	a1 f0       	breq	.+40     	; 0xdde <__addsf3x+0x9a>
     db6:	ff 0f       	add	r31, r31
     db8:	bb 1f       	adc	r27, r27
     dba:	66 1f       	adc	r22, r22
     dbc:	77 1f       	adc	r23, r23
     dbe:	88 1f       	adc	r24, r24
     dc0:	c2 f7       	brpl	.-16     	; 0xdb2 <__addsf3x+0x6e>
     dc2:	0e c0       	rjmp	.+28     	; 0xde0 <__addsf3x+0x9c>
     dc4:	ba 0f       	add	r27, r26
     dc6:	62 1f       	adc	r22, r18
     dc8:	73 1f       	adc	r23, r19
     dca:	84 1f       	adc	r24, r20
     dcc:	48 f4       	brcc	.+18     	; 0xde0 <__addsf3x+0x9c>
     dce:	87 95       	ror	r24
     dd0:	77 95       	ror	r23
     dd2:	67 95       	ror	r22
     dd4:	b7 95       	ror	r27
     dd6:	f7 95       	ror	r31
     dd8:	9e 3f       	cpi	r25, 0xFE	; 254
     dda:	08 f0       	brcs	.+2      	; 0xdde <__addsf3x+0x9a>
     ddc:	b0 cf       	rjmp	.-160    	; 0xd3e <__addsf3+0x28>
     dde:	93 95       	inc	r25
     de0:	88 0f       	add	r24, r24
     de2:	08 f0       	brcs	.+2      	; 0xde6 <__addsf3x+0xa2>
     de4:	99 27       	eor	r25, r25
     de6:	ee 0f       	add	r30, r30
     de8:	97 95       	ror	r25
     dea:	87 95       	ror	r24
     dec:	08 95       	ret

00000dee <__divmodhi4>:
     dee:	97 fb       	bst	r25, 7
     df0:	07 2e       	mov	r0, r23
     df2:	16 f4       	brtc	.+4      	; 0xdf8 <__divmodhi4+0xa>
     df4:	00 94       	com	r0
     df6:	07 d0       	rcall	.+14     	; 0xe06 <__divmodhi4_neg1>
     df8:	77 fd       	sbrc	r23, 7
     dfa:	09 d0       	rcall	.+18     	; 0xe0e <__divmodhi4_neg2>
     dfc:	0e 94 0b 07 	call	0xe16	; 0xe16 <__udivmodhi4>
     e00:	07 fc       	sbrc	r0, 7
     e02:	05 d0       	rcall	.+10     	; 0xe0e <__divmodhi4_neg2>
     e04:	3e f4       	brtc	.+14     	; 0xe14 <__divmodhi4_exit>

00000e06 <__divmodhi4_neg1>:
     e06:	90 95       	com	r25
     e08:	81 95       	neg	r24
     e0a:	9f 4f       	sbci	r25, 0xFF	; 255
     e0c:	08 95       	ret

00000e0e <__divmodhi4_neg2>:
     e0e:	70 95       	com	r23
     e10:	61 95       	neg	r22
     e12:	7f 4f       	sbci	r23, 0xFF	; 255

00000e14 <__divmodhi4_exit>:
     e14:	08 95       	ret

00000e16 <__udivmodhi4>:
     e16:	aa 1b       	sub	r26, r26
     e18:	bb 1b       	sub	r27, r27
     e1a:	51 e1       	ldi	r21, 0x11	; 17
     e1c:	07 c0       	rjmp	.+14     	; 0xe2c <__udivmodhi4_ep>

00000e1e <__udivmodhi4_loop>:
     e1e:	aa 1f       	adc	r26, r26
     e20:	bb 1f       	adc	r27, r27
     e22:	a6 17       	cp	r26, r22
     e24:	b7 07       	cpc	r27, r23
     e26:	10 f0       	brcs	.+4      	; 0xe2c <__udivmodhi4_ep>
     e28:	a6 1b       	sub	r26, r22
     e2a:	b7 0b       	sbc	r27, r23

00000e2c <__udivmodhi4_ep>:
     e2c:	88 1f       	adc	r24, r24
     e2e:	99 1f       	adc	r25, r25
     e30:	5a 95       	dec	r21
     e32:	a9 f7       	brne	.-22     	; 0xe1e <__udivmodhi4_loop>
     e34:	80 95       	com	r24
     e36:	90 95       	com	r25
     e38:	bc 01       	movw	r22, r24
     e3a:	cd 01       	movw	r24, r26
     e3c:	08 95       	ret

00000e3e <malloc>:
     e3e:	0f 93       	push	r16
     e40:	1f 93       	push	r17
     e42:	cf 93       	push	r28
     e44:	df 93       	push	r29
     e46:	82 30       	cpi	r24, 0x02	; 2
     e48:	91 05       	cpc	r25, r1
     e4a:	10 f4       	brcc	.+4      	; 0xe50 <malloc+0x12>
     e4c:	82 e0       	ldi	r24, 0x02	; 2
     e4e:	90 e0       	ldi	r25, 0x00	; 0
     e50:	e0 91 24 02 	lds	r30, 0x0224	; 0x800224 <__flp>
     e54:	f0 91 25 02 	lds	r31, 0x0225	; 0x800225 <__flp+0x1>
     e58:	20 e0       	ldi	r18, 0x00	; 0
     e5a:	30 e0       	ldi	r19, 0x00	; 0
     e5c:	a0 e0       	ldi	r26, 0x00	; 0
     e5e:	b0 e0       	ldi	r27, 0x00	; 0
     e60:	30 97       	sbiw	r30, 0x00	; 0
     e62:	19 f1       	breq	.+70     	; 0xeaa <malloc+0x6c>
     e64:	40 81       	ld	r20, Z
     e66:	51 81       	ldd	r21, Z+1	; 0x01
     e68:	02 81       	ldd	r16, Z+2	; 0x02
     e6a:	13 81       	ldd	r17, Z+3	; 0x03
     e6c:	48 17       	cp	r20, r24
     e6e:	59 07       	cpc	r21, r25
     e70:	c8 f0       	brcs	.+50     	; 0xea4 <malloc+0x66>
     e72:	84 17       	cp	r24, r20
     e74:	95 07       	cpc	r25, r21
     e76:	69 f4       	brne	.+26     	; 0xe92 <malloc+0x54>
     e78:	10 97       	sbiw	r26, 0x00	; 0
     e7a:	31 f0       	breq	.+12     	; 0xe88 <malloc+0x4a>
     e7c:	12 96       	adiw	r26, 0x02	; 2
     e7e:	0c 93       	st	X, r16
     e80:	12 97       	sbiw	r26, 0x02	; 2
     e82:	13 96       	adiw	r26, 0x03	; 3
     e84:	1c 93       	st	X, r17
     e86:	27 c0       	rjmp	.+78     	; 0xed6 <malloc+0x98>
     e88:	00 93 24 02 	sts	0x0224, r16	; 0x800224 <__flp>
     e8c:	10 93 25 02 	sts	0x0225, r17	; 0x800225 <__flp+0x1>
     e90:	22 c0       	rjmp	.+68     	; 0xed6 <malloc+0x98>
     e92:	21 15       	cp	r18, r1
     e94:	31 05       	cpc	r19, r1
     e96:	19 f0       	breq	.+6      	; 0xe9e <malloc+0x60>
     e98:	42 17       	cp	r20, r18
     e9a:	53 07       	cpc	r21, r19
     e9c:	18 f4       	brcc	.+6      	; 0xea4 <malloc+0x66>
     e9e:	9a 01       	movw	r18, r20
     ea0:	bd 01       	movw	r22, r26
     ea2:	ef 01       	movw	r28, r30
     ea4:	df 01       	movw	r26, r30
     ea6:	f8 01       	movw	r30, r16
     ea8:	db cf       	rjmp	.-74     	; 0xe60 <malloc+0x22>
     eaa:	21 15       	cp	r18, r1
     eac:	31 05       	cpc	r19, r1
     eae:	f9 f0       	breq	.+62     	; 0xeee <malloc+0xb0>
     eb0:	28 1b       	sub	r18, r24
     eb2:	39 0b       	sbc	r19, r25
     eb4:	24 30       	cpi	r18, 0x04	; 4
     eb6:	31 05       	cpc	r19, r1
     eb8:	80 f4       	brcc	.+32     	; 0xeda <malloc+0x9c>
     eba:	8a 81       	ldd	r24, Y+2	; 0x02
     ebc:	9b 81       	ldd	r25, Y+3	; 0x03
     ebe:	61 15       	cp	r22, r1
     ec0:	71 05       	cpc	r23, r1
     ec2:	21 f0       	breq	.+8      	; 0xecc <malloc+0x8e>
     ec4:	fb 01       	movw	r30, r22
     ec6:	93 83       	std	Z+3, r25	; 0x03
     ec8:	82 83       	std	Z+2, r24	; 0x02
     eca:	04 c0       	rjmp	.+8      	; 0xed4 <malloc+0x96>
     ecc:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <__flp+0x1>
     ed0:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <__flp>
     ed4:	fe 01       	movw	r30, r28
     ed6:	32 96       	adiw	r30, 0x02	; 2
     ed8:	44 c0       	rjmp	.+136    	; 0xf62 <malloc+0x124>
     eda:	fe 01       	movw	r30, r28
     edc:	e2 0f       	add	r30, r18
     ede:	f3 1f       	adc	r31, r19
     ee0:	81 93       	st	Z+, r24
     ee2:	91 93       	st	Z+, r25
     ee4:	22 50       	subi	r18, 0x02	; 2
     ee6:	31 09       	sbc	r19, r1
     ee8:	39 83       	std	Y+1, r19	; 0x01
     eea:	28 83       	st	Y, r18
     eec:	3a c0       	rjmp	.+116    	; 0xf62 <malloc+0x124>
     eee:	20 91 22 02 	lds	r18, 0x0222	; 0x800222 <__brkval>
     ef2:	30 91 23 02 	lds	r19, 0x0223	; 0x800223 <__brkval+0x1>
     ef6:	23 2b       	or	r18, r19
     ef8:	41 f4       	brne	.+16     	; 0xf0a <malloc+0xcc>
     efa:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     efe:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     f02:	30 93 23 02 	sts	0x0223, r19	; 0x800223 <__brkval+0x1>
     f06:	20 93 22 02 	sts	0x0222, r18	; 0x800222 <__brkval>
     f0a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     f0e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     f12:	21 15       	cp	r18, r1
     f14:	31 05       	cpc	r19, r1
     f16:	41 f4       	brne	.+16     	; 0xf28 <malloc+0xea>
     f18:	2d b7       	in	r18, 0x3d	; 61
     f1a:	3e b7       	in	r19, 0x3e	; 62
     f1c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     f20:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     f24:	24 1b       	sub	r18, r20
     f26:	35 0b       	sbc	r19, r21
     f28:	e0 91 22 02 	lds	r30, 0x0222	; 0x800222 <__brkval>
     f2c:	f0 91 23 02 	lds	r31, 0x0223	; 0x800223 <__brkval+0x1>
     f30:	e2 17       	cp	r30, r18
     f32:	f3 07       	cpc	r31, r19
     f34:	a0 f4       	brcc	.+40     	; 0xf5e <malloc+0x120>
     f36:	2e 1b       	sub	r18, r30
     f38:	3f 0b       	sbc	r19, r31
     f3a:	28 17       	cp	r18, r24
     f3c:	39 07       	cpc	r19, r25
     f3e:	78 f0       	brcs	.+30     	; 0xf5e <malloc+0x120>
     f40:	ac 01       	movw	r20, r24
     f42:	4e 5f       	subi	r20, 0xFE	; 254
     f44:	5f 4f       	sbci	r21, 0xFF	; 255
     f46:	24 17       	cp	r18, r20
     f48:	35 07       	cpc	r19, r21
     f4a:	48 f0       	brcs	.+18     	; 0xf5e <malloc+0x120>
     f4c:	4e 0f       	add	r20, r30
     f4e:	5f 1f       	adc	r21, r31
     f50:	50 93 23 02 	sts	0x0223, r21	; 0x800223 <__brkval+0x1>
     f54:	40 93 22 02 	sts	0x0222, r20	; 0x800222 <__brkval>
     f58:	81 93       	st	Z+, r24
     f5a:	91 93       	st	Z+, r25
     f5c:	02 c0       	rjmp	.+4      	; 0xf62 <malloc+0x124>
     f5e:	e0 e0       	ldi	r30, 0x00	; 0
     f60:	f0 e0       	ldi	r31, 0x00	; 0
     f62:	cf 01       	movw	r24, r30
     f64:	df 91       	pop	r29
     f66:	cf 91       	pop	r28
     f68:	1f 91       	pop	r17
     f6a:	0f 91       	pop	r16
     f6c:	08 95       	ret

00000f6e <free>:
     f6e:	cf 93       	push	r28
     f70:	df 93       	push	r29
     f72:	00 97       	sbiw	r24, 0x00	; 0
     f74:	09 f4       	brne	.+2      	; 0xf78 <free+0xa>
     f76:	81 c0       	rjmp	.+258    	; 0x107a <free+0x10c>
     f78:	fc 01       	movw	r30, r24
     f7a:	32 97       	sbiw	r30, 0x02	; 2
     f7c:	13 82       	std	Z+3, r1	; 0x03
     f7e:	12 82       	std	Z+2, r1	; 0x02
     f80:	a0 91 24 02 	lds	r26, 0x0224	; 0x800224 <__flp>
     f84:	b0 91 25 02 	lds	r27, 0x0225	; 0x800225 <__flp+0x1>
     f88:	10 97       	sbiw	r26, 0x00	; 0
     f8a:	81 f4       	brne	.+32     	; 0xfac <free+0x3e>
     f8c:	20 81       	ld	r18, Z
     f8e:	31 81       	ldd	r19, Z+1	; 0x01
     f90:	82 0f       	add	r24, r18
     f92:	93 1f       	adc	r25, r19
     f94:	20 91 22 02 	lds	r18, 0x0222	; 0x800222 <__brkval>
     f98:	30 91 23 02 	lds	r19, 0x0223	; 0x800223 <__brkval+0x1>
     f9c:	28 17       	cp	r18, r24
     f9e:	39 07       	cpc	r19, r25
     fa0:	51 f5       	brne	.+84     	; 0xff6 <free+0x88>
     fa2:	f0 93 23 02 	sts	0x0223, r31	; 0x800223 <__brkval+0x1>
     fa6:	e0 93 22 02 	sts	0x0222, r30	; 0x800222 <__brkval>
     faa:	67 c0       	rjmp	.+206    	; 0x107a <free+0x10c>
     fac:	ed 01       	movw	r28, r26
     fae:	20 e0       	ldi	r18, 0x00	; 0
     fb0:	30 e0       	ldi	r19, 0x00	; 0
     fb2:	ce 17       	cp	r28, r30
     fb4:	df 07       	cpc	r29, r31
     fb6:	40 f4       	brcc	.+16     	; 0xfc8 <free+0x5a>
     fb8:	4a 81       	ldd	r20, Y+2	; 0x02
     fba:	5b 81       	ldd	r21, Y+3	; 0x03
     fbc:	9e 01       	movw	r18, r28
     fbe:	41 15       	cp	r20, r1
     fc0:	51 05       	cpc	r21, r1
     fc2:	f1 f0       	breq	.+60     	; 0x1000 <free+0x92>
     fc4:	ea 01       	movw	r28, r20
     fc6:	f5 cf       	rjmp	.-22     	; 0xfb2 <free+0x44>
     fc8:	d3 83       	std	Z+3, r29	; 0x03
     fca:	c2 83       	std	Z+2, r28	; 0x02
     fcc:	40 81       	ld	r20, Z
     fce:	51 81       	ldd	r21, Z+1	; 0x01
     fd0:	84 0f       	add	r24, r20
     fd2:	95 1f       	adc	r25, r21
     fd4:	c8 17       	cp	r28, r24
     fd6:	d9 07       	cpc	r29, r25
     fd8:	59 f4       	brne	.+22     	; 0xff0 <free+0x82>
     fda:	88 81       	ld	r24, Y
     fdc:	99 81       	ldd	r25, Y+1	; 0x01
     fde:	84 0f       	add	r24, r20
     fe0:	95 1f       	adc	r25, r21
     fe2:	02 96       	adiw	r24, 0x02	; 2
     fe4:	91 83       	std	Z+1, r25	; 0x01
     fe6:	80 83       	st	Z, r24
     fe8:	8a 81       	ldd	r24, Y+2	; 0x02
     fea:	9b 81       	ldd	r25, Y+3	; 0x03
     fec:	93 83       	std	Z+3, r25	; 0x03
     fee:	82 83       	std	Z+2, r24	; 0x02
     ff0:	21 15       	cp	r18, r1
     ff2:	31 05       	cpc	r19, r1
     ff4:	29 f4       	brne	.+10     	; 0x1000 <free+0x92>
     ff6:	f0 93 25 02 	sts	0x0225, r31	; 0x800225 <__flp+0x1>
     ffa:	e0 93 24 02 	sts	0x0224, r30	; 0x800224 <__flp>
     ffe:	3d c0       	rjmp	.+122    	; 0x107a <free+0x10c>
    1000:	e9 01       	movw	r28, r18
    1002:	fb 83       	std	Y+3, r31	; 0x03
    1004:	ea 83       	std	Y+2, r30	; 0x02
    1006:	49 91       	ld	r20, Y+
    1008:	59 91       	ld	r21, Y+
    100a:	c4 0f       	add	r28, r20
    100c:	d5 1f       	adc	r29, r21
    100e:	ec 17       	cp	r30, r28
    1010:	fd 07       	cpc	r31, r29
    1012:	61 f4       	brne	.+24     	; 0x102c <free+0xbe>
    1014:	80 81       	ld	r24, Z
    1016:	91 81       	ldd	r25, Z+1	; 0x01
    1018:	84 0f       	add	r24, r20
    101a:	95 1f       	adc	r25, r21
    101c:	02 96       	adiw	r24, 0x02	; 2
    101e:	e9 01       	movw	r28, r18
    1020:	99 83       	std	Y+1, r25	; 0x01
    1022:	88 83       	st	Y, r24
    1024:	82 81       	ldd	r24, Z+2	; 0x02
    1026:	93 81       	ldd	r25, Z+3	; 0x03
    1028:	9b 83       	std	Y+3, r25	; 0x03
    102a:	8a 83       	std	Y+2, r24	; 0x02
    102c:	e0 e0       	ldi	r30, 0x00	; 0
    102e:	f0 e0       	ldi	r31, 0x00	; 0
    1030:	12 96       	adiw	r26, 0x02	; 2
    1032:	8d 91       	ld	r24, X+
    1034:	9c 91       	ld	r25, X
    1036:	13 97       	sbiw	r26, 0x03	; 3
    1038:	00 97       	sbiw	r24, 0x00	; 0
    103a:	19 f0       	breq	.+6      	; 0x1042 <free+0xd4>
    103c:	fd 01       	movw	r30, r26
    103e:	dc 01       	movw	r26, r24
    1040:	f7 cf       	rjmp	.-18     	; 0x1030 <free+0xc2>
    1042:	8d 91       	ld	r24, X+
    1044:	9c 91       	ld	r25, X
    1046:	11 97       	sbiw	r26, 0x01	; 1
    1048:	9d 01       	movw	r18, r26
    104a:	2e 5f       	subi	r18, 0xFE	; 254
    104c:	3f 4f       	sbci	r19, 0xFF	; 255
    104e:	82 0f       	add	r24, r18
    1050:	93 1f       	adc	r25, r19
    1052:	20 91 22 02 	lds	r18, 0x0222	; 0x800222 <__brkval>
    1056:	30 91 23 02 	lds	r19, 0x0223	; 0x800223 <__brkval+0x1>
    105a:	28 17       	cp	r18, r24
    105c:	39 07       	cpc	r19, r25
    105e:	69 f4       	brne	.+26     	; 0x107a <free+0x10c>
    1060:	30 97       	sbiw	r30, 0x00	; 0
    1062:	29 f4       	brne	.+10     	; 0x106e <free+0x100>
    1064:	10 92 25 02 	sts	0x0225, r1	; 0x800225 <__flp+0x1>
    1068:	10 92 24 02 	sts	0x0224, r1	; 0x800224 <__flp>
    106c:	02 c0       	rjmp	.+4      	; 0x1072 <free+0x104>
    106e:	13 82       	std	Z+3, r1	; 0x03
    1070:	12 82       	std	Z+2, r1	; 0x02
    1072:	b0 93 23 02 	sts	0x0223, r27	; 0x800223 <__brkval+0x1>
    1076:	a0 93 22 02 	sts	0x0222, r26	; 0x800222 <__brkval>
    107a:	df 91       	pop	r29
    107c:	cf 91       	pop	r28
    107e:	08 95       	ret

00001080 <strcpy>:
    1080:	fb 01       	movw	r30, r22
    1082:	dc 01       	movw	r26, r24
    1084:	01 90       	ld	r0, Z+
    1086:	0d 92       	st	X+, r0
    1088:	00 20       	and	r0, r0
    108a:	e1 f7       	brne	.-8      	; 0x1084 <strcpy+0x4>
    108c:	08 95       	ret

0000108e <fdevopen>:
    108e:	0f 93       	push	r16
    1090:	1f 93       	push	r17
    1092:	cf 93       	push	r28
    1094:	df 93       	push	r29
    1096:	00 97       	sbiw	r24, 0x00	; 0
    1098:	31 f4       	brne	.+12     	; 0x10a6 <fdevopen+0x18>
    109a:	61 15       	cp	r22, r1
    109c:	71 05       	cpc	r23, r1
    109e:	19 f4       	brne	.+6      	; 0x10a6 <fdevopen+0x18>
    10a0:	80 e0       	ldi	r24, 0x00	; 0
    10a2:	90 e0       	ldi	r25, 0x00	; 0
    10a4:	3a c0       	rjmp	.+116    	; 0x111a <fdevopen+0x8c>
    10a6:	8b 01       	movw	r16, r22
    10a8:	ec 01       	movw	r28, r24
    10aa:	6e e0       	ldi	r22, 0x0E	; 14
    10ac:	70 e0       	ldi	r23, 0x00	; 0
    10ae:	81 e0       	ldi	r24, 0x01	; 1
    10b0:	90 e0       	ldi	r25, 0x00	; 0
    10b2:	0e 94 89 0a 	call	0x1512	; 0x1512 <calloc>
    10b6:	fc 01       	movw	r30, r24
    10b8:	89 2b       	or	r24, r25
    10ba:	91 f3       	breq	.-28     	; 0x10a0 <fdevopen+0x12>
    10bc:	80 e8       	ldi	r24, 0x80	; 128
    10be:	83 83       	std	Z+3, r24	; 0x03
    10c0:	01 15       	cp	r16, r1
    10c2:	11 05       	cpc	r17, r1
    10c4:	71 f0       	breq	.+28     	; 0x10e2 <fdevopen+0x54>
    10c6:	13 87       	std	Z+11, r17	; 0x0b
    10c8:	02 87       	std	Z+10, r16	; 0x0a
    10ca:	81 e8       	ldi	r24, 0x81	; 129
    10cc:	83 83       	std	Z+3, r24	; 0x03
    10ce:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <__iob>
    10d2:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <__iob+0x1>
    10d6:	89 2b       	or	r24, r25
    10d8:	21 f4       	brne	.+8      	; 0x10e2 <fdevopen+0x54>
    10da:	f0 93 27 02 	sts	0x0227, r31	; 0x800227 <__iob+0x1>
    10de:	e0 93 26 02 	sts	0x0226, r30	; 0x800226 <__iob>
    10e2:	20 97       	sbiw	r28, 0x00	; 0
    10e4:	c9 f0       	breq	.+50     	; 0x1118 <fdevopen+0x8a>
    10e6:	d1 87       	std	Z+9, r29	; 0x09
    10e8:	c0 87       	std	Z+8, r28	; 0x08
    10ea:	83 81       	ldd	r24, Z+3	; 0x03
    10ec:	82 60       	ori	r24, 0x02	; 2
    10ee:	83 83       	std	Z+3, r24	; 0x03
    10f0:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <__iob+0x2>
    10f4:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <__iob+0x3>
    10f8:	89 2b       	or	r24, r25
    10fa:	71 f4       	brne	.+28     	; 0x1118 <fdevopen+0x8a>
    10fc:	f0 93 29 02 	sts	0x0229, r31	; 0x800229 <__iob+0x3>
    1100:	e0 93 28 02 	sts	0x0228, r30	; 0x800228 <__iob+0x2>
    1104:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <__iob+0x4>
    1108:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <__iob+0x5>
    110c:	89 2b       	or	r24, r25
    110e:	21 f4       	brne	.+8      	; 0x1118 <fdevopen+0x8a>
    1110:	f0 93 2b 02 	sts	0x022B, r31	; 0x80022b <__iob+0x5>
    1114:	e0 93 2a 02 	sts	0x022A, r30	; 0x80022a <__iob+0x4>
    1118:	cf 01       	movw	r24, r30
    111a:	df 91       	pop	r29
    111c:	cf 91       	pop	r28
    111e:	1f 91       	pop	r17
    1120:	0f 91       	pop	r16
    1122:	08 95       	ret

00001124 <printf>:
    1124:	a0 e0       	ldi	r26, 0x00	; 0
    1126:	b0 e0       	ldi	r27, 0x00	; 0
    1128:	e8 e9       	ldi	r30, 0x98	; 152
    112a:	f8 e0       	ldi	r31, 0x08	; 8
    112c:	0c 94 6c 0b 	jmp	0x16d8	; 0x16d8 <__prologue_saves__+0x20>
    1130:	ae 01       	movw	r20, r28
    1132:	4b 5f       	subi	r20, 0xFB	; 251
    1134:	5f 4f       	sbci	r21, 0xFF	; 255
    1136:	fa 01       	movw	r30, r20
    1138:	61 91       	ld	r22, Z+
    113a:	71 91       	ld	r23, Z+
    113c:	af 01       	movw	r20, r30
    113e:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <__iob+0x2>
    1142:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <__iob+0x3>
    1146:	0e 94 a8 08 	call	0x1150	; 0x1150 <vfprintf>
    114a:	e2 e0       	ldi	r30, 0x02	; 2
    114c:	0c 94 88 0b 	jmp	0x1710	; 0x1710 <__epilogue_restores__+0x20>

00001150 <vfprintf>:
    1150:	ab e0       	ldi	r26, 0x0B	; 11
    1152:	b0 e0       	ldi	r27, 0x00	; 0
    1154:	ee ea       	ldi	r30, 0xAE	; 174
    1156:	f8 e0       	ldi	r31, 0x08	; 8
    1158:	0c 94 5c 0b 	jmp	0x16b8	; 0x16b8 <__prologue_saves__>
    115c:	6c 01       	movw	r12, r24
    115e:	7b 01       	movw	r14, r22
    1160:	8a 01       	movw	r16, r20
    1162:	fc 01       	movw	r30, r24
    1164:	17 82       	std	Z+7, r1	; 0x07
    1166:	16 82       	std	Z+6, r1	; 0x06
    1168:	83 81       	ldd	r24, Z+3	; 0x03
    116a:	81 ff       	sbrs	r24, 1
    116c:	cc c1       	rjmp	.+920    	; 0x1506 <vfprintf+0x3b6>
    116e:	ce 01       	movw	r24, r28
    1170:	01 96       	adiw	r24, 0x01	; 1
    1172:	3c 01       	movw	r6, r24
    1174:	f6 01       	movw	r30, r12
    1176:	93 81       	ldd	r25, Z+3	; 0x03
    1178:	f7 01       	movw	r30, r14
    117a:	93 fd       	sbrc	r25, 3
    117c:	85 91       	lpm	r24, Z+
    117e:	93 ff       	sbrs	r25, 3
    1180:	81 91       	ld	r24, Z+
    1182:	7f 01       	movw	r14, r30
    1184:	88 23       	and	r24, r24
    1186:	09 f4       	brne	.+2      	; 0x118a <vfprintf+0x3a>
    1188:	ba c1       	rjmp	.+884    	; 0x14fe <vfprintf+0x3ae>
    118a:	85 32       	cpi	r24, 0x25	; 37
    118c:	39 f4       	brne	.+14     	; 0x119c <vfprintf+0x4c>
    118e:	93 fd       	sbrc	r25, 3
    1190:	85 91       	lpm	r24, Z+
    1192:	93 ff       	sbrs	r25, 3
    1194:	81 91       	ld	r24, Z+
    1196:	7f 01       	movw	r14, r30
    1198:	85 32       	cpi	r24, 0x25	; 37
    119a:	29 f4       	brne	.+10     	; 0x11a6 <vfprintf+0x56>
    119c:	b6 01       	movw	r22, r12
    119e:	90 e0       	ldi	r25, 0x00	; 0
    11a0:	0e 94 c2 0a 	call	0x1584	; 0x1584 <fputc>
    11a4:	e7 cf       	rjmp	.-50     	; 0x1174 <vfprintf+0x24>
    11a6:	91 2c       	mov	r9, r1
    11a8:	21 2c       	mov	r2, r1
    11aa:	31 2c       	mov	r3, r1
    11ac:	ff e1       	ldi	r31, 0x1F	; 31
    11ae:	f3 15       	cp	r31, r3
    11b0:	d8 f0       	brcs	.+54     	; 0x11e8 <vfprintf+0x98>
    11b2:	8b 32       	cpi	r24, 0x2B	; 43
    11b4:	79 f0       	breq	.+30     	; 0x11d4 <vfprintf+0x84>
    11b6:	38 f4       	brcc	.+14     	; 0x11c6 <vfprintf+0x76>
    11b8:	80 32       	cpi	r24, 0x20	; 32
    11ba:	79 f0       	breq	.+30     	; 0x11da <vfprintf+0x8a>
    11bc:	83 32       	cpi	r24, 0x23	; 35
    11be:	a1 f4       	brne	.+40     	; 0x11e8 <vfprintf+0x98>
    11c0:	23 2d       	mov	r18, r3
    11c2:	20 61       	ori	r18, 0x10	; 16
    11c4:	1d c0       	rjmp	.+58     	; 0x1200 <vfprintf+0xb0>
    11c6:	8d 32       	cpi	r24, 0x2D	; 45
    11c8:	61 f0       	breq	.+24     	; 0x11e2 <vfprintf+0x92>
    11ca:	80 33       	cpi	r24, 0x30	; 48
    11cc:	69 f4       	brne	.+26     	; 0x11e8 <vfprintf+0x98>
    11ce:	23 2d       	mov	r18, r3
    11d0:	21 60       	ori	r18, 0x01	; 1
    11d2:	16 c0       	rjmp	.+44     	; 0x1200 <vfprintf+0xb0>
    11d4:	83 2d       	mov	r24, r3
    11d6:	82 60       	ori	r24, 0x02	; 2
    11d8:	38 2e       	mov	r3, r24
    11da:	e3 2d       	mov	r30, r3
    11dc:	e4 60       	ori	r30, 0x04	; 4
    11de:	3e 2e       	mov	r3, r30
    11e0:	2a c0       	rjmp	.+84     	; 0x1236 <vfprintf+0xe6>
    11e2:	f3 2d       	mov	r31, r3
    11e4:	f8 60       	ori	r31, 0x08	; 8
    11e6:	1d c0       	rjmp	.+58     	; 0x1222 <vfprintf+0xd2>
    11e8:	37 fc       	sbrc	r3, 7
    11ea:	2d c0       	rjmp	.+90     	; 0x1246 <vfprintf+0xf6>
    11ec:	20 ed       	ldi	r18, 0xD0	; 208
    11ee:	28 0f       	add	r18, r24
    11f0:	2a 30       	cpi	r18, 0x0A	; 10
    11f2:	40 f0       	brcs	.+16     	; 0x1204 <vfprintf+0xb4>
    11f4:	8e 32       	cpi	r24, 0x2E	; 46
    11f6:	b9 f4       	brne	.+46     	; 0x1226 <vfprintf+0xd6>
    11f8:	36 fc       	sbrc	r3, 6
    11fa:	81 c1       	rjmp	.+770    	; 0x14fe <vfprintf+0x3ae>
    11fc:	23 2d       	mov	r18, r3
    11fe:	20 64       	ori	r18, 0x40	; 64
    1200:	32 2e       	mov	r3, r18
    1202:	19 c0       	rjmp	.+50     	; 0x1236 <vfprintf+0xe6>
    1204:	36 fe       	sbrs	r3, 6
    1206:	06 c0       	rjmp	.+12     	; 0x1214 <vfprintf+0xc4>
    1208:	8a e0       	ldi	r24, 0x0A	; 10
    120a:	98 9e       	mul	r9, r24
    120c:	20 0d       	add	r18, r0
    120e:	11 24       	eor	r1, r1
    1210:	92 2e       	mov	r9, r18
    1212:	11 c0       	rjmp	.+34     	; 0x1236 <vfprintf+0xe6>
    1214:	ea e0       	ldi	r30, 0x0A	; 10
    1216:	2e 9e       	mul	r2, r30
    1218:	20 0d       	add	r18, r0
    121a:	11 24       	eor	r1, r1
    121c:	22 2e       	mov	r2, r18
    121e:	f3 2d       	mov	r31, r3
    1220:	f0 62       	ori	r31, 0x20	; 32
    1222:	3f 2e       	mov	r3, r31
    1224:	08 c0       	rjmp	.+16     	; 0x1236 <vfprintf+0xe6>
    1226:	8c 36       	cpi	r24, 0x6C	; 108
    1228:	21 f4       	brne	.+8      	; 0x1232 <vfprintf+0xe2>
    122a:	83 2d       	mov	r24, r3
    122c:	80 68       	ori	r24, 0x80	; 128
    122e:	38 2e       	mov	r3, r24
    1230:	02 c0       	rjmp	.+4      	; 0x1236 <vfprintf+0xe6>
    1232:	88 36       	cpi	r24, 0x68	; 104
    1234:	41 f4       	brne	.+16     	; 0x1246 <vfprintf+0xf6>
    1236:	f7 01       	movw	r30, r14
    1238:	93 fd       	sbrc	r25, 3
    123a:	85 91       	lpm	r24, Z+
    123c:	93 ff       	sbrs	r25, 3
    123e:	81 91       	ld	r24, Z+
    1240:	7f 01       	movw	r14, r30
    1242:	81 11       	cpse	r24, r1
    1244:	b3 cf       	rjmp	.-154    	; 0x11ac <vfprintf+0x5c>
    1246:	98 2f       	mov	r25, r24
    1248:	9f 7d       	andi	r25, 0xDF	; 223
    124a:	95 54       	subi	r25, 0x45	; 69
    124c:	93 30       	cpi	r25, 0x03	; 3
    124e:	28 f4       	brcc	.+10     	; 0x125a <vfprintf+0x10a>
    1250:	0c 5f       	subi	r16, 0xFC	; 252
    1252:	1f 4f       	sbci	r17, 0xFF	; 255
    1254:	9f e3       	ldi	r25, 0x3F	; 63
    1256:	99 83       	std	Y+1, r25	; 0x01
    1258:	0d c0       	rjmp	.+26     	; 0x1274 <vfprintf+0x124>
    125a:	83 36       	cpi	r24, 0x63	; 99
    125c:	31 f0       	breq	.+12     	; 0x126a <vfprintf+0x11a>
    125e:	83 37       	cpi	r24, 0x73	; 115
    1260:	71 f0       	breq	.+28     	; 0x127e <vfprintf+0x12e>
    1262:	83 35       	cpi	r24, 0x53	; 83
    1264:	09 f0       	breq	.+2      	; 0x1268 <vfprintf+0x118>
    1266:	59 c0       	rjmp	.+178    	; 0x131a <vfprintf+0x1ca>
    1268:	21 c0       	rjmp	.+66     	; 0x12ac <vfprintf+0x15c>
    126a:	f8 01       	movw	r30, r16
    126c:	80 81       	ld	r24, Z
    126e:	89 83       	std	Y+1, r24	; 0x01
    1270:	0e 5f       	subi	r16, 0xFE	; 254
    1272:	1f 4f       	sbci	r17, 0xFF	; 255
    1274:	88 24       	eor	r8, r8
    1276:	83 94       	inc	r8
    1278:	91 2c       	mov	r9, r1
    127a:	53 01       	movw	r10, r6
    127c:	13 c0       	rjmp	.+38     	; 0x12a4 <vfprintf+0x154>
    127e:	28 01       	movw	r4, r16
    1280:	f2 e0       	ldi	r31, 0x02	; 2
    1282:	4f 0e       	add	r4, r31
    1284:	51 1c       	adc	r5, r1
    1286:	f8 01       	movw	r30, r16
    1288:	a0 80       	ld	r10, Z
    128a:	b1 80       	ldd	r11, Z+1	; 0x01
    128c:	36 fe       	sbrs	r3, 6
    128e:	03 c0       	rjmp	.+6      	; 0x1296 <vfprintf+0x146>
    1290:	69 2d       	mov	r22, r9
    1292:	70 e0       	ldi	r23, 0x00	; 0
    1294:	02 c0       	rjmp	.+4      	; 0x129a <vfprintf+0x14a>
    1296:	6f ef       	ldi	r22, 0xFF	; 255
    1298:	7f ef       	ldi	r23, 0xFF	; 255
    129a:	c5 01       	movw	r24, r10
    129c:	0e 94 b7 0a 	call	0x156e	; 0x156e <strnlen>
    12a0:	4c 01       	movw	r8, r24
    12a2:	82 01       	movw	r16, r4
    12a4:	f3 2d       	mov	r31, r3
    12a6:	ff 77       	andi	r31, 0x7F	; 127
    12a8:	3f 2e       	mov	r3, r31
    12aa:	16 c0       	rjmp	.+44     	; 0x12d8 <vfprintf+0x188>
    12ac:	28 01       	movw	r4, r16
    12ae:	22 e0       	ldi	r18, 0x02	; 2
    12b0:	42 0e       	add	r4, r18
    12b2:	51 1c       	adc	r5, r1
    12b4:	f8 01       	movw	r30, r16
    12b6:	a0 80       	ld	r10, Z
    12b8:	b1 80       	ldd	r11, Z+1	; 0x01
    12ba:	36 fe       	sbrs	r3, 6
    12bc:	03 c0       	rjmp	.+6      	; 0x12c4 <vfprintf+0x174>
    12be:	69 2d       	mov	r22, r9
    12c0:	70 e0       	ldi	r23, 0x00	; 0
    12c2:	02 c0       	rjmp	.+4      	; 0x12c8 <vfprintf+0x178>
    12c4:	6f ef       	ldi	r22, 0xFF	; 255
    12c6:	7f ef       	ldi	r23, 0xFF	; 255
    12c8:	c5 01       	movw	r24, r10
    12ca:	0e 94 a5 0a 	call	0x154a	; 0x154a <strnlen_P>
    12ce:	4c 01       	movw	r8, r24
    12d0:	f3 2d       	mov	r31, r3
    12d2:	f0 68       	ori	r31, 0x80	; 128
    12d4:	3f 2e       	mov	r3, r31
    12d6:	82 01       	movw	r16, r4
    12d8:	33 fc       	sbrc	r3, 3
    12da:	1b c0       	rjmp	.+54     	; 0x1312 <vfprintf+0x1c2>
    12dc:	82 2d       	mov	r24, r2
    12de:	90 e0       	ldi	r25, 0x00	; 0
    12e0:	88 16       	cp	r8, r24
    12e2:	99 06       	cpc	r9, r25
    12e4:	b0 f4       	brcc	.+44     	; 0x1312 <vfprintf+0x1c2>
    12e6:	b6 01       	movw	r22, r12
    12e8:	80 e2       	ldi	r24, 0x20	; 32
    12ea:	90 e0       	ldi	r25, 0x00	; 0
    12ec:	0e 94 c2 0a 	call	0x1584	; 0x1584 <fputc>
    12f0:	2a 94       	dec	r2
    12f2:	f4 cf       	rjmp	.-24     	; 0x12dc <vfprintf+0x18c>
    12f4:	f5 01       	movw	r30, r10
    12f6:	37 fc       	sbrc	r3, 7
    12f8:	85 91       	lpm	r24, Z+
    12fa:	37 fe       	sbrs	r3, 7
    12fc:	81 91       	ld	r24, Z+
    12fe:	5f 01       	movw	r10, r30
    1300:	b6 01       	movw	r22, r12
    1302:	90 e0       	ldi	r25, 0x00	; 0
    1304:	0e 94 c2 0a 	call	0x1584	; 0x1584 <fputc>
    1308:	21 10       	cpse	r2, r1
    130a:	2a 94       	dec	r2
    130c:	21 e0       	ldi	r18, 0x01	; 1
    130e:	82 1a       	sub	r8, r18
    1310:	91 08       	sbc	r9, r1
    1312:	81 14       	cp	r8, r1
    1314:	91 04       	cpc	r9, r1
    1316:	71 f7       	brne	.-36     	; 0x12f4 <vfprintf+0x1a4>
    1318:	e8 c0       	rjmp	.+464    	; 0x14ea <vfprintf+0x39a>
    131a:	84 36       	cpi	r24, 0x64	; 100
    131c:	11 f0       	breq	.+4      	; 0x1322 <vfprintf+0x1d2>
    131e:	89 36       	cpi	r24, 0x69	; 105
    1320:	41 f5       	brne	.+80     	; 0x1372 <vfprintf+0x222>
    1322:	f8 01       	movw	r30, r16
    1324:	37 fe       	sbrs	r3, 7
    1326:	07 c0       	rjmp	.+14     	; 0x1336 <vfprintf+0x1e6>
    1328:	60 81       	ld	r22, Z
    132a:	71 81       	ldd	r23, Z+1	; 0x01
    132c:	82 81       	ldd	r24, Z+2	; 0x02
    132e:	93 81       	ldd	r25, Z+3	; 0x03
    1330:	0c 5f       	subi	r16, 0xFC	; 252
    1332:	1f 4f       	sbci	r17, 0xFF	; 255
    1334:	08 c0       	rjmp	.+16     	; 0x1346 <vfprintf+0x1f6>
    1336:	60 81       	ld	r22, Z
    1338:	71 81       	ldd	r23, Z+1	; 0x01
    133a:	07 2e       	mov	r0, r23
    133c:	00 0c       	add	r0, r0
    133e:	88 0b       	sbc	r24, r24
    1340:	99 0b       	sbc	r25, r25
    1342:	0e 5f       	subi	r16, 0xFE	; 254
    1344:	1f 4f       	sbci	r17, 0xFF	; 255
    1346:	f3 2d       	mov	r31, r3
    1348:	ff 76       	andi	r31, 0x6F	; 111
    134a:	3f 2e       	mov	r3, r31
    134c:	97 ff       	sbrs	r25, 7
    134e:	09 c0       	rjmp	.+18     	; 0x1362 <vfprintf+0x212>
    1350:	90 95       	com	r25
    1352:	80 95       	com	r24
    1354:	70 95       	com	r23
    1356:	61 95       	neg	r22
    1358:	7f 4f       	sbci	r23, 0xFF	; 255
    135a:	8f 4f       	sbci	r24, 0xFF	; 255
    135c:	9f 4f       	sbci	r25, 0xFF	; 255
    135e:	f0 68       	ori	r31, 0x80	; 128
    1360:	3f 2e       	mov	r3, r31
    1362:	2a e0       	ldi	r18, 0x0A	; 10
    1364:	30 e0       	ldi	r19, 0x00	; 0
    1366:	a3 01       	movw	r20, r6
    1368:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <__ultoa_invert>
    136c:	88 2e       	mov	r8, r24
    136e:	86 18       	sub	r8, r6
    1370:	45 c0       	rjmp	.+138    	; 0x13fc <vfprintf+0x2ac>
    1372:	85 37       	cpi	r24, 0x75	; 117
    1374:	31 f4       	brne	.+12     	; 0x1382 <vfprintf+0x232>
    1376:	23 2d       	mov	r18, r3
    1378:	2f 7e       	andi	r18, 0xEF	; 239
    137a:	b2 2e       	mov	r11, r18
    137c:	2a e0       	ldi	r18, 0x0A	; 10
    137e:	30 e0       	ldi	r19, 0x00	; 0
    1380:	25 c0       	rjmp	.+74     	; 0x13cc <vfprintf+0x27c>
    1382:	93 2d       	mov	r25, r3
    1384:	99 7f       	andi	r25, 0xF9	; 249
    1386:	b9 2e       	mov	r11, r25
    1388:	8f 36       	cpi	r24, 0x6F	; 111
    138a:	c1 f0       	breq	.+48     	; 0x13bc <vfprintf+0x26c>
    138c:	18 f4       	brcc	.+6      	; 0x1394 <vfprintf+0x244>
    138e:	88 35       	cpi	r24, 0x58	; 88
    1390:	79 f0       	breq	.+30     	; 0x13b0 <vfprintf+0x260>
    1392:	b5 c0       	rjmp	.+362    	; 0x14fe <vfprintf+0x3ae>
    1394:	80 37       	cpi	r24, 0x70	; 112
    1396:	19 f0       	breq	.+6      	; 0x139e <vfprintf+0x24e>
    1398:	88 37       	cpi	r24, 0x78	; 120
    139a:	21 f0       	breq	.+8      	; 0x13a4 <vfprintf+0x254>
    139c:	b0 c0       	rjmp	.+352    	; 0x14fe <vfprintf+0x3ae>
    139e:	e9 2f       	mov	r30, r25
    13a0:	e0 61       	ori	r30, 0x10	; 16
    13a2:	be 2e       	mov	r11, r30
    13a4:	b4 fe       	sbrs	r11, 4
    13a6:	0d c0       	rjmp	.+26     	; 0x13c2 <vfprintf+0x272>
    13a8:	fb 2d       	mov	r31, r11
    13aa:	f4 60       	ori	r31, 0x04	; 4
    13ac:	bf 2e       	mov	r11, r31
    13ae:	09 c0       	rjmp	.+18     	; 0x13c2 <vfprintf+0x272>
    13b0:	34 fe       	sbrs	r3, 4
    13b2:	0a c0       	rjmp	.+20     	; 0x13c8 <vfprintf+0x278>
    13b4:	29 2f       	mov	r18, r25
    13b6:	26 60       	ori	r18, 0x06	; 6
    13b8:	b2 2e       	mov	r11, r18
    13ba:	06 c0       	rjmp	.+12     	; 0x13c8 <vfprintf+0x278>
    13bc:	28 e0       	ldi	r18, 0x08	; 8
    13be:	30 e0       	ldi	r19, 0x00	; 0
    13c0:	05 c0       	rjmp	.+10     	; 0x13cc <vfprintf+0x27c>
    13c2:	20 e1       	ldi	r18, 0x10	; 16
    13c4:	30 e0       	ldi	r19, 0x00	; 0
    13c6:	02 c0       	rjmp	.+4      	; 0x13cc <vfprintf+0x27c>
    13c8:	20 e1       	ldi	r18, 0x10	; 16
    13ca:	32 e0       	ldi	r19, 0x02	; 2
    13cc:	f8 01       	movw	r30, r16
    13ce:	b7 fe       	sbrs	r11, 7
    13d0:	07 c0       	rjmp	.+14     	; 0x13e0 <vfprintf+0x290>
    13d2:	60 81       	ld	r22, Z
    13d4:	71 81       	ldd	r23, Z+1	; 0x01
    13d6:	82 81       	ldd	r24, Z+2	; 0x02
    13d8:	93 81       	ldd	r25, Z+3	; 0x03
    13da:	0c 5f       	subi	r16, 0xFC	; 252
    13dc:	1f 4f       	sbci	r17, 0xFF	; 255
    13de:	06 c0       	rjmp	.+12     	; 0x13ec <vfprintf+0x29c>
    13e0:	60 81       	ld	r22, Z
    13e2:	71 81       	ldd	r23, Z+1	; 0x01
    13e4:	80 e0       	ldi	r24, 0x00	; 0
    13e6:	90 e0       	ldi	r25, 0x00	; 0
    13e8:	0e 5f       	subi	r16, 0xFE	; 254
    13ea:	1f 4f       	sbci	r17, 0xFF	; 255
    13ec:	a3 01       	movw	r20, r6
    13ee:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <__ultoa_invert>
    13f2:	88 2e       	mov	r8, r24
    13f4:	86 18       	sub	r8, r6
    13f6:	fb 2d       	mov	r31, r11
    13f8:	ff 77       	andi	r31, 0x7F	; 127
    13fa:	3f 2e       	mov	r3, r31
    13fc:	36 fe       	sbrs	r3, 6
    13fe:	0d c0       	rjmp	.+26     	; 0x141a <vfprintf+0x2ca>
    1400:	23 2d       	mov	r18, r3
    1402:	2e 7f       	andi	r18, 0xFE	; 254
    1404:	a2 2e       	mov	r10, r18
    1406:	89 14       	cp	r8, r9
    1408:	58 f4       	brcc	.+22     	; 0x1420 <vfprintf+0x2d0>
    140a:	34 fe       	sbrs	r3, 4
    140c:	0b c0       	rjmp	.+22     	; 0x1424 <vfprintf+0x2d4>
    140e:	32 fc       	sbrc	r3, 2
    1410:	09 c0       	rjmp	.+18     	; 0x1424 <vfprintf+0x2d4>
    1412:	83 2d       	mov	r24, r3
    1414:	8e 7e       	andi	r24, 0xEE	; 238
    1416:	a8 2e       	mov	r10, r24
    1418:	05 c0       	rjmp	.+10     	; 0x1424 <vfprintf+0x2d4>
    141a:	b8 2c       	mov	r11, r8
    141c:	a3 2c       	mov	r10, r3
    141e:	03 c0       	rjmp	.+6      	; 0x1426 <vfprintf+0x2d6>
    1420:	b8 2c       	mov	r11, r8
    1422:	01 c0       	rjmp	.+2      	; 0x1426 <vfprintf+0x2d6>
    1424:	b9 2c       	mov	r11, r9
    1426:	a4 fe       	sbrs	r10, 4
    1428:	0f c0       	rjmp	.+30     	; 0x1448 <vfprintf+0x2f8>
    142a:	fe 01       	movw	r30, r28
    142c:	e8 0d       	add	r30, r8
    142e:	f1 1d       	adc	r31, r1
    1430:	80 81       	ld	r24, Z
    1432:	80 33       	cpi	r24, 0x30	; 48
    1434:	21 f4       	brne	.+8      	; 0x143e <vfprintf+0x2ee>
    1436:	9a 2d       	mov	r25, r10
    1438:	99 7e       	andi	r25, 0xE9	; 233
    143a:	a9 2e       	mov	r10, r25
    143c:	09 c0       	rjmp	.+18     	; 0x1450 <vfprintf+0x300>
    143e:	a2 fe       	sbrs	r10, 2
    1440:	06 c0       	rjmp	.+12     	; 0x144e <vfprintf+0x2fe>
    1442:	b3 94       	inc	r11
    1444:	b3 94       	inc	r11
    1446:	04 c0       	rjmp	.+8      	; 0x1450 <vfprintf+0x300>
    1448:	8a 2d       	mov	r24, r10
    144a:	86 78       	andi	r24, 0x86	; 134
    144c:	09 f0       	breq	.+2      	; 0x1450 <vfprintf+0x300>
    144e:	b3 94       	inc	r11
    1450:	a3 fc       	sbrc	r10, 3
    1452:	11 c0       	rjmp	.+34     	; 0x1476 <vfprintf+0x326>
    1454:	a0 fe       	sbrs	r10, 0
    1456:	06 c0       	rjmp	.+12     	; 0x1464 <vfprintf+0x314>
    1458:	b2 14       	cp	r11, r2
    145a:	88 f4       	brcc	.+34     	; 0x147e <vfprintf+0x32e>
    145c:	28 0c       	add	r2, r8
    145e:	92 2c       	mov	r9, r2
    1460:	9b 18       	sub	r9, r11
    1462:	0e c0       	rjmp	.+28     	; 0x1480 <vfprintf+0x330>
    1464:	b2 14       	cp	r11, r2
    1466:	60 f4       	brcc	.+24     	; 0x1480 <vfprintf+0x330>
    1468:	b6 01       	movw	r22, r12
    146a:	80 e2       	ldi	r24, 0x20	; 32
    146c:	90 e0       	ldi	r25, 0x00	; 0
    146e:	0e 94 c2 0a 	call	0x1584	; 0x1584 <fputc>
    1472:	b3 94       	inc	r11
    1474:	f7 cf       	rjmp	.-18     	; 0x1464 <vfprintf+0x314>
    1476:	b2 14       	cp	r11, r2
    1478:	18 f4       	brcc	.+6      	; 0x1480 <vfprintf+0x330>
    147a:	2b 18       	sub	r2, r11
    147c:	02 c0       	rjmp	.+4      	; 0x1482 <vfprintf+0x332>
    147e:	98 2c       	mov	r9, r8
    1480:	21 2c       	mov	r2, r1
    1482:	a4 fe       	sbrs	r10, 4
    1484:	10 c0       	rjmp	.+32     	; 0x14a6 <vfprintf+0x356>
    1486:	b6 01       	movw	r22, r12
    1488:	80 e3       	ldi	r24, 0x30	; 48
    148a:	90 e0       	ldi	r25, 0x00	; 0
    148c:	0e 94 c2 0a 	call	0x1584	; 0x1584 <fputc>
    1490:	a2 fe       	sbrs	r10, 2
    1492:	17 c0       	rjmp	.+46     	; 0x14c2 <vfprintf+0x372>
    1494:	a1 fc       	sbrc	r10, 1
    1496:	03 c0       	rjmp	.+6      	; 0x149e <vfprintf+0x34e>
    1498:	88 e7       	ldi	r24, 0x78	; 120
    149a:	90 e0       	ldi	r25, 0x00	; 0
    149c:	02 c0       	rjmp	.+4      	; 0x14a2 <vfprintf+0x352>
    149e:	88 e5       	ldi	r24, 0x58	; 88
    14a0:	90 e0       	ldi	r25, 0x00	; 0
    14a2:	b6 01       	movw	r22, r12
    14a4:	0c c0       	rjmp	.+24     	; 0x14be <vfprintf+0x36e>
    14a6:	8a 2d       	mov	r24, r10
    14a8:	86 78       	andi	r24, 0x86	; 134
    14aa:	59 f0       	breq	.+22     	; 0x14c2 <vfprintf+0x372>
    14ac:	a1 fe       	sbrs	r10, 1
    14ae:	02 c0       	rjmp	.+4      	; 0x14b4 <vfprintf+0x364>
    14b0:	8b e2       	ldi	r24, 0x2B	; 43
    14b2:	01 c0       	rjmp	.+2      	; 0x14b6 <vfprintf+0x366>
    14b4:	80 e2       	ldi	r24, 0x20	; 32
    14b6:	a7 fc       	sbrc	r10, 7
    14b8:	8d e2       	ldi	r24, 0x2D	; 45
    14ba:	b6 01       	movw	r22, r12
    14bc:	90 e0       	ldi	r25, 0x00	; 0
    14be:	0e 94 c2 0a 	call	0x1584	; 0x1584 <fputc>
    14c2:	89 14       	cp	r8, r9
    14c4:	38 f4       	brcc	.+14     	; 0x14d4 <vfprintf+0x384>
    14c6:	b6 01       	movw	r22, r12
    14c8:	80 e3       	ldi	r24, 0x30	; 48
    14ca:	90 e0       	ldi	r25, 0x00	; 0
    14cc:	0e 94 c2 0a 	call	0x1584	; 0x1584 <fputc>
    14d0:	9a 94       	dec	r9
    14d2:	f7 cf       	rjmp	.-18     	; 0x14c2 <vfprintf+0x372>
    14d4:	8a 94       	dec	r8
    14d6:	f3 01       	movw	r30, r6
    14d8:	e8 0d       	add	r30, r8
    14da:	f1 1d       	adc	r31, r1
    14dc:	80 81       	ld	r24, Z
    14de:	b6 01       	movw	r22, r12
    14e0:	90 e0       	ldi	r25, 0x00	; 0
    14e2:	0e 94 c2 0a 	call	0x1584	; 0x1584 <fputc>
    14e6:	81 10       	cpse	r8, r1
    14e8:	f5 cf       	rjmp	.-22     	; 0x14d4 <vfprintf+0x384>
    14ea:	22 20       	and	r2, r2
    14ec:	09 f4       	brne	.+2      	; 0x14f0 <vfprintf+0x3a0>
    14ee:	42 ce       	rjmp	.-892    	; 0x1174 <vfprintf+0x24>
    14f0:	b6 01       	movw	r22, r12
    14f2:	80 e2       	ldi	r24, 0x20	; 32
    14f4:	90 e0       	ldi	r25, 0x00	; 0
    14f6:	0e 94 c2 0a 	call	0x1584	; 0x1584 <fputc>
    14fa:	2a 94       	dec	r2
    14fc:	f6 cf       	rjmp	.-20     	; 0x14ea <vfprintf+0x39a>
    14fe:	f6 01       	movw	r30, r12
    1500:	86 81       	ldd	r24, Z+6	; 0x06
    1502:	97 81       	ldd	r25, Z+7	; 0x07
    1504:	02 c0       	rjmp	.+4      	; 0x150a <vfprintf+0x3ba>
    1506:	8f ef       	ldi	r24, 0xFF	; 255
    1508:	9f ef       	ldi	r25, 0xFF	; 255
    150a:	2b 96       	adiw	r28, 0x0b	; 11
    150c:	e2 e1       	ldi	r30, 0x12	; 18
    150e:	0c 94 78 0b 	jmp	0x16f0	; 0x16f0 <__epilogue_restores__>

00001512 <calloc>:
    1512:	0f 93       	push	r16
    1514:	1f 93       	push	r17
    1516:	cf 93       	push	r28
    1518:	df 93       	push	r29
    151a:	86 9f       	mul	r24, r22
    151c:	80 01       	movw	r16, r0
    151e:	87 9f       	mul	r24, r23
    1520:	10 0d       	add	r17, r0
    1522:	96 9f       	mul	r25, r22
    1524:	10 0d       	add	r17, r0
    1526:	11 24       	eor	r1, r1
    1528:	c8 01       	movw	r24, r16
    152a:	0e 94 1f 07 	call	0xe3e	; 0xe3e <malloc>
    152e:	ec 01       	movw	r28, r24
    1530:	00 97       	sbiw	r24, 0x00	; 0
    1532:	29 f0       	breq	.+10     	; 0x153e <calloc+0x2c>
    1534:	a8 01       	movw	r20, r16
    1536:	60 e0       	ldi	r22, 0x00	; 0
    1538:	70 e0       	ldi	r23, 0x00	; 0
    153a:	0e 94 b0 0a 	call	0x1560	; 0x1560 <memset>
    153e:	ce 01       	movw	r24, r28
    1540:	df 91       	pop	r29
    1542:	cf 91       	pop	r28
    1544:	1f 91       	pop	r17
    1546:	0f 91       	pop	r16
    1548:	08 95       	ret

0000154a <strnlen_P>:
    154a:	fc 01       	movw	r30, r24
    154c:	05 90       	lpm	r0, Z+
    154e:	61 50       	subi	r22, 0x01	; 1
    1550:	70 40       	sbci	r23, 0x00	; 0
    1552:	01 10       	cpse	r0, r1
    1554:	d8 f7       	brcc	.-10     	; 0x154c <strnlen_P+0x2>
    1556:	80 95       	com	r24
    1558:	90 95       	com	r25
    155a:	8e 0f       	add	r24, r30
    155c:	9f 1f       	adc	r25, r31
    155e:	08 95       	ret

00001560 <memset>:
    1560:	dc 01       	movw	r26, r24
    1562:	01 c0       	rjmp	.+2      	; 0x1566 <memset+0x6>
    1564:	6d 93       	st	X+, r22
    1566:	41 50       	subi	r20, 0x01	; 1
    1568:	50 40       	sbci	r21, 0x00	; 0
    156a:	e0 f7       	brcc	.-8      	; 0x1564 <memset+0x4>
    156c:	08 95       	ret

0000156e <strnlen>:
    156e:	fc 01       	movw	r30, r24
    1570:	61 50       	subi	r22, 0x01	; 1
    1572:	70 40       	sbci	r23, 0x00	; 0
    1574:	01 90       	ld	r0, Z+
    1576:	01 10       	cpse	r0, r1
    1578:	d8 f7       	brcc	.-10     	; 0x1570 <strnlen+0x2>
    157a:	80 95       	com	r24
    157c:	90 95       	com	r25
    157e:	8e 0f       	add	r24, r30
    1580:	9f 1f       	adc	r25, r31
    1582:	08 95       	ret

00001584 <fputc>:
    1584:	0f 93       	push	r16
    1586:	1f 93       	push	r17
    1588:	cf 93       	push	r28
    158a:	df 93       	push	r29
    158c:	fb 01       	movw	r30, r22
    158e:	23 81       	ldd	r18, Z+3	; 0x03
    1590:	21 fd       	sbrc	r18, 1
    1592:	03 c0       	rjmp	.+6      	; 0x159a <fputc+0x16>
    1594:	8f ef       	ldi	r24, 0xFF	; 255
    1596:	9f ef       	ldi	r25, 0xFF	; 255
    1598:	2c c0       	rjmp	.+88     	; 0x15f2 <fputc+0x6e>
    159a:	22 ff       	sbrs	r18, 2
    159c:	16 c0       	rjmp	.+44     	; 0x15ca <fputc+0x46>
    159e:	46 81       	ldd	r20, Z+6	; 0x06
    15a0:	57 81       	ldd	r21, Z+7	; 0x07
    15a2:	24 81       	ldd	r18, Z+4	; 0x04
    15a4:	35 81       	ldd	r19, Z+5	; 0x05
    15a6:	42 17       	cp	r20, r18
    15a8:	53 07       	cpc	r21, r19
    15aa:	44 f4       	brge	.+16     	; 0x15bc <fputc+0x38>
    15ac:	a0 81       	ld	r26, Z
    15ae:	b1 81       	ldd	r27, Z+1	; 0x01
    15b0:	9d 01       	movw	r18, r26
    15b2:	2f 5f       	subi	r18, 0xFF	; 255
    15b4:	3f 4f       	sbci	r19, 0xFF	; 255
    15b6:	31 83       	std	Z+1, r19	; 0x01
    15b8:	20 83       	st	Z, r18
    15ba:	8c 93       	st	X, r24
    15bc:	26 81       	ldd	r18, Z+6	; 0x06
    15be:	37 81       	ldd	r19, Z+7	; 0x07
    15c0:	2f 5f       	subi	r18, 0xFF	; 255
    15c2:	3f 4f       	sbci	r19, 0xFF	; 255
    15c4:	37 83       	std	Z+7, r19	; 0x07
    15c6:	26 83       	std	Z+6, r18	; 0x06
    15c8:	14 c0       	rjmp	.+40     	; 0x15f2 <fputc+0x6e>
    15ca:	8b 01       	movw	r16, r22
    15cc:	ec 01       	movw	r28, r24
    15ce:	fb 01       	movw	r30, r22
    15d0:	00 84       	ldd	r0, Z+8	; 0x08
    15d2:	f1 85       	ldd	r31, Z+9	; 0x09
    15d4:	e0 2d       	mov	r30, r0
    15d6:	09 95       	icall
    15d8:	89 2b       	or	r24, r25
    15da:	e1 f6       	brne	.-72     	; 0x1594 <fputc+0x10>
    15dc:	d8 01       	movw	r26, r16
    15de:	16 96       	adiw	r26, 0x06	; 6
    15e0:	8d 91       	ld	r24, X+
    15e2:	9c 91       	ld	r25, X
    15e4:	17 97       	sbiw	r26, 0x07	; 7
    15e6:	01 96       	adiw	r24, 0x01	; 1
    15e8:	17 96       	adiw	r26, 0x07	; 7
    15ea:	9c 93       	st	X, r25
    15ec:	8e 93       	st	-X, r24
    15ee:	16 97       	sbiw	r26, 0x06	; 6
    15f0:	ce 01       	movw	r24, r28
    15f2:	df 91       	pop	r29
    15f4:	cf 91       	pop	r28
    15f6:	1f 91       	pop	r17
    15f8:	0f 91       	pop	r16
    15fa:	08 95       	ret

000015fc <__ultoa_invert>:
    15fc:	fa 01       	movw	r30, r20
    15fe:	aa 27       	eor	r26, r26
    1600:	28 30       	cpi	r18, 0x08	; 8
    1602:	51 f1       	breq	.+84     	; 0x1658 <__ultoa_invert+0x5c>
    1604:	20 31       	cpi	r18, 0x10	; 16
    1606:	81 f1       	breq	.+96     	; 0x1668 <__ultoa_invert+0x6c>
    1608:	e8 94       	clt
    160a:	6f 93       	push	r22
    160c:	6e 7f       	andi	r22, 0xFE	; 254
    160e:	6e 5f       	subi	r22, 0xFE	; 254
    1610:	7f 4f       	sbci	r23, 0xFF	; 255
    1612:	8f 4f       	sbci	r24, 0xFF	; 255
    1614:	9f 4f       	sbci	r25, 0xFF	; 255
    1616:	af 4f       	sbci	r26, 0xFF	; 255
    1618:	b1 e0       	ldi	r27, 0x01	; 1
    161a:	3e d0       	rcall	.+124    	; 0x1698 <__ultoa_invert+0x9c>
    161c:	b4 e0       	ldi	r27, 0x04	; 4
    161e:	3c d0       	rcall	.+120    	; 0x1698 <__ultoa_invert+0x9c>
    1620:	67 0f       	add	r22, r23
    1622:	78 1f       	adc	r23, r24
    1624:	89 1f       	adc	r24, r25
    1626:	9a 1f       	adc	r25, r26
    1628:	a1 1d       	adc	r26, r1
    162a:	68 0f       	add	r22, r24
    162c:	79 1f       	adc	r23, r25
    162e:	8a 1f       	adc	r24, r26
    1630:	91 1d       	adc	r25, r1
    1632:	a1 1d       	adc	r26, r1
    1634:	6a 0f       	add	r22, r26
    1636:	71 1d       	adc	r23, r1
    1638:	81 1d       	adc	r24, r1
    163a:	91 1d       	adc	r25, r1
    163c:	a1 1d       	adc	r26, r1
    163e:	20 d0       	rcall	.+64     	; 0x1680 <__ultoa_invert+0x84>
    1640:	09 f4       	brne	.+2      	; 0x1644 <__ultoa_invert+0x48>
    1642:	68 94       	set
    1644:	3f 91       	pop	r19
    1646:	2a e0       	ldi	r18, 0x0A	; 10
    1648:	26 9f       	mul	r18, r22
    164a:	11 24       	eor	r1, r1
    164c:	30 19       	sub	r19, r0
    164e:	30 5d       	subi	r19, 0xD0	; 208
    1650:	31 93       	st	Z+, r19
    1652:	de f6       	brtc	.-74     	; 0x160a <__ultoa_invert+0xe>
    1654:	cf 01       	movw	r24, r30
    1656:	08 95       	ret
    1658:	46 2f       	mov	r20, r22
    165a:	47 70       	andi	r20, 0x07	; 7
    165c:	40 5d       	subi	r20, 0xD0	; 208
    165e:	41 93       	st	Z+, r20
    1660:	b3 e0       	ldi	r27, 0x03	; 3
    1662:	0f d0       	rcall	.+30     	; 0x1682 <__ultoa_invert+0x86>
    1664:	c9 f7       	brne	.-14     	; 0x1658 <__ultoa_invert+0x5c>
    1666:	f6 cf       	rjmp	.-20     	; 0x1654 <__ultoa_invert+0x58>
    1668:	46 2f       	mov	r20, r22
    166a:	4f 70       	andi	r20, 0x0F	; 15
    166c:	40 5d       	subi	r20, 0xD0	; 208
    166e:	4a 33       	cpi	r20, 0x3A	; 58
    1670:	18 f0       	brcs	.+6      	; 0x1678 <__ultoa_invert+0x7c>
    1672:	49 5d       	subi	r20, 0xD9	; 217
    1674:	31 fd       	sbrc	r19, 1
    1676:	40 52       	subi	r20, 0x20	; 32
    1678:	41 93       	st	Z+, r20
    167a:	02 d0       	rcall	.+4      	; 0x1680 <__ultoa_invert+0x84>
    167c:	a9 f7       	brne	.-22     	; 0x1668 <__ultoa_invert+0x6c>
    167e:	ea cf       	rjmp	.-44     	; 0x1654 <__ultoa_invert+0x58>
    1680:	b4 e0       	ldi	r27, 0x04	; 4
    1682:	a6 95       	lsr	r26
    1684:	97 95       	ror	r25
    1686:	87 95       	ror	r24
    1688:	77 95       	ror	r23
    168a:	67 95       	ror	r22
    168c:	ba 95       	dec	r27
    168e:	c9 f7       	brne	.-14     	; 0x1682 <__ultoa_invert+0x86>
    1690:	00 97       	sbiw	r24, 0x00	; 0
    1692:	61 05       	cpc	r22, r1
    1694:	71 05       	cpc	r23, r1
    1696:	08 95       	ret
    1698:	9b 01       	movw	r18, r22
    169a:	ac 01       	movw	r20, r24
    169c:	0a 2e       	mov	r0, r26
    169e:	06 94       	lsr	r0
    16a0:	57 95       	ror	r21
    16a2:	47 95       	ror	r20
    16a4:	37 95       	ror	r19
    16a6:	27 95       	ror	r18
    16a8:	ba 95       	dec	r27
    16aa:	c9 f7       	brne	.-14     	; 0x169e <__ultoa_invert+0xa2>
    16ac:	62 0f       	add	r22, r18
    16ae:	73 1f       	adc	r23, r19
    16b0:	84 1f       	adc	r24, r20
    16b2:	95 1f       	adc	r25, r21
    16b4:	a0 1d       	adc	r26, r0
    16b6:	08 95       	ret

000016b8 <__prologue_saves__>:
    16b8:	2f 92       	push	r2
    16ba:	3f 92       	push	r3
    16bc:	4f 92       	push	r4
    16be:	5f 92       	push	r5
    16c0:	6f 92       	push	r6
    16c2:	7f 92       	push	r7
    16c4:	8f 92       	push	r8
    16c6:	9f 92       	push	r9
    16c8:	af 92       	push	r10
    16ca:	bf 92       	push	r11
    16cc:	cf 92       	push	r12
    16ce:	df 92       	push	r13
    16d0:	ef 92       	push	r14
    16d2:	ff 92       	push	r15
    16d4:	0f 93       	push	r16
    16d6:	1f 93       	push	r17
    16d8:	cf 93       	push	r28
    16da:	df 93       	push	r29
    16dc:	cd b7       	in	r28, 0x3d	; 61
    16de:	de b7       	in	r29, 0x3e	; 62
    16e0:	ca 1b       	sub	r28, r26
    16e2:	db 0b       	sbc	r29, r27
    16e4:	0f b6       	in	r0, 0x3f	; 63
    16e6:	f8 94       	cli
    16e8:	de bf       	out	0x3e, r29	; 62
    16ea:	0f be       	out	0x3f, r0	; 63
    16ec:	cd bf       	out	0x3d, r28	; 61
    16ee:	09 94       	ijmp

000016f0 <__epilogue_restores__>:
    16f0:	2a 88       	ldd	r2, Y+18	; 0x12
    16f2:	39 88       	ldd	r3, Y+17	; 0x11
    16f4:	48 88       	ldd	r4, Y+16	; 0x10
    16f6:	5f 84       	ldd	r5, Y+15	; 0x0f
    16f8:	6e 84       	ldd	r6, Y+14	; 0x0e
    16fa:	7d 84       	ldd	r7, Y+13	; 0x0d
    16fc:	8c 84       	ldd	r8, Y+12	; 0x0c
    16fe:	9b 84       	ldd	r9, Y+11	; 0x0b
    1700:	aa 84       	ldd	r10, Y+10	; 0x0a
    1702:	b9 84       	ldd	r11, Y+9	; 0x09
    1704:	c8 84       	ldd	r12, Y+8	; 0x08
    1706:	df 80       	ldd	r13, Y+7	; 0x07
    1708:	ee 80       	ldd	r14, Y+6	; 0x06
    170a:	fd 80       	ldd	r15, Y+5	; 0x05
    170c:	0c 81       	ldd	r16, Y+4	; 0x04
    170e:	1b 81       	ldd	r17, Y+3	; 0x03
    1710:	aa 81       	ldd	r26, Y+2	; 0x02
    1712:	b9 81       	ldd	r27, Y+1	; 0x01
    1714:	ce 0f       	add	r28, r30
    1716:	d1 1d       	adc	r29, r1
    1718:	0f b6       	in	r0, 0x3f	; 63
    171a:	f8 94       	cli
    171c:	de bf       	out	0x3e, r29	; 62
    171e:	0f be       	out	0x3f, r0	; 63
    1720:	cd bf       	out	0x3d, r28	; 61
    1722:	ed 01       	movw	r28, r26
    1724:	08 95       	ret

00001726 <_exit>:
    1726:	f8 94       	cli

00001728 <__stop_program>:
    1728:	ff cf       	rjmp	.-2      	; 0x1728 <__stop_program>
