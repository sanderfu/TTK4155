
byggern.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000146  00800100  0000192c  000019c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000192c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001a  00800246  00800246  00001b06  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001b06  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001b64  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000210  00000000  00000000  00001ba0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000024c3  00000000  00000000  00001db0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001145  00000000  00000000  00004273  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f6e  00000000  00000000  000053b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004c4  00000000  00000000  00006328  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000876  00000000  00000000  000067ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f2a  00000000  00000000  00007062  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  00007f8c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 cb 01 	jmp	0x396	; 0x396 <__ctors_end>
       4:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
       8:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
       c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      10:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      14:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      18:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      1c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      20:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      24:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      28:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      2c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      30:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      34:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      38:	0c 94 f4 01 	jmp	0x3e8	; 0x3e8 <__vector_14>
      3c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      40:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      44:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      48:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      4c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      50:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      54:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      58:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      5c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      60:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      64:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      68:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      6c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      70:	08 4a       	sbci	r16, 0xA8	; 168
      72:	d7 3b       	cpi	r29, 0xB7	; 183
      74:	3b ce       	rjmp	.-906    	; 0xfffffcec <__eeprom_end+0xff7efcec>
      76:	01 6e       	ori	r16, 0xE1	; 225
      78:	84 bc       	out	0x24, r8	; 36
      7a:	bf fd       	.word	0xfdbf	; ????
      7c:	c1 2f       	mov	r28, r17
      7e:	3d 6c       	ori	r19, 0xCD	; 205
      80:	74 31       	cpi	r23, 0x14	; 20
      82:	9a bd       	out	0x2a, r25	; 42
      84:	56 83       	std	Z+6, r21	; 0x06
      86:	3d da       	rcall	.-2950   	; 0xfffff502 <__eeprom_end+0xff7ef502>
      88:	3d 00       	.word	0x003d	; ????
      8a:	c7 7f       	andi	r28, 0xF7	; 247
      8c:	11 be       	out	0x31, r1	; 49
      8e:	d9 e4       	ldi	r29, 0x49	; 73
      90:	bb 4c       	sbci	r27, 0xCB	; 203
      92:	3e 91       	ld	r19, -X
      94:	6b aa       	std	Y+51, r6	; 0x33
      96:	aa be       	out	0x3a, r10	; 58
      98:	00 00       	nop
      9a:	00 80       	ld	r0, Z
      9c:	3f 00       	.word	0x003f	; ????

0000009e <__trampolines_end>:
	...
      a6:	00 06       	cpc	r0, r16
      a8:	5f 5f       	subi	r21, 0xFF	; 255
      aa:	06 00       	.word	0x0006	; ????
      ac:	00 00       	nop
      ae:	00 07       	cpc	r16, r16
      b0:	07 00       	.word	0x0007	; ????
      b2:	07 07       	cpc	r16, r23
      b4:	00 00       	nop
      b6:	14 7f       	andi	r17, 0xF4	; 244
      b8:	7f 14       	cp	r7, r15
      ba:	7f 7f       	andi	r23, 0xFF	; 255
      bc:	14 00       	.word	0x0014	; ????
      be:	24 2e       	mov	r2, r20
      c0:	6b 6b       	ori	r22, 0xBB	; 187
      c2:	3a 12       	cpse	r3, r26
      c4:	00 00       	nop
      c6:	46 66       	ori	r20, 0x66	; 102
      c8:	30 18       	sub	r3, r0
      ca:	0c 66       	ori	r16, 0x6C	; 108
      cc:	62 00       	.word	0x0062	; ????
      ce:	30 7a       	andi	r19, 0xA0	; 160
      d0:	4f 5d       	subi	r20, 0xDF	; 223
      d2:	37 7a       	andi	r19, 0xA7	; 167
      d4:	48 00       	.word	0x0048	; ????
      d6:	04 07       	cpc	r16, r20
      d8:	03 00       	.word	0x0003	; ????
      da:	00 00       	nop
      dc:	00 00       	nop
      de:	00 1c       	adc	r0, r0
      e0:	3e 63       	ori	r19, 0x3E	; 62
      e2:	41 00       	.word	0x0041	; ????
      e4:	00 00       	nop
      e6:	00 41       	sbci	r16, 0x10	; 16
      e8:	63 3e       	cpi	r22, 0xE3	; 227
      ea:	1c 00       	.word	0x001c	; ????
      ec:	00 00       	nop
      ee:	08 2a       	or	r0, r24
      f0:	3e 1c       	adc	r3, r14
      f2:	1c 3e       	cpi	r17, 0xEC	; 236
      f4:	2a 08       	sbc	r2, r10
      f6:	08 08       	sbc	r0, r8
      f8:	3e 3e       	cpi	r19, 0xEE	; 238
      fa:	08 08       	sbc	r0, r8
      fc:	00 00       	nop
      fe:	00 a0       	ldd	r0, Z+32	; 0x20
     100:	e0 60       	ori	r30, 0x00	; 0
     102:	00 00       	nop
     104:	00 00       	nop
     106:	08 08       	sbc	r0, r8
     108:	08 08       	sbc	r0, r8
     10a:	08 08       	sbc	r0, r8
     10c:	00 00       	nop
     10e:	00 00       	nop
     110:	60 60       	ori	r22, 0x00	; 0
     112:	00 00       	nop
     114:	00 00       	nop
     116:	60 30       	cpi	r22, 0x00	; 0
     118:	18 0c       	add	r1, r8
     11a:	06 03       	mulsu	r16, r22
     11c:	01 00       	.word	0x0001	; ????
     11e:	3e 7f       	andi	r19, 0xFE	; 254
     120:	59 4d       	sbci	r21, 0xD9	; 217
     122:	7f 3e       	cpi	r23, 0xEF	; 239
     124:	00 00       	nop
     126:	42 42       	sbci	r20, 0x22	; 34
     128:	7f 7f       	andi	r23, 0xFF	; 255
     12a:	40 40       	sbci	r20, 0x00	; 0
     12c:	00 00       	nop
     12e:	62 73       	andi	r22, 0x32	; 50
     130:	59 49       	sbci	r21, 0x99	; 153
     132:	6f 66       	ori	r22, 0x6F	; 111
     134:	00 00       	nop
     136:	22 63       	ori	r18, 0x32	; 50
     138:	49 49       	sbci	r20, 0x99	; 153
     13a:	7f 36       	cpi	r23, 0x6F	; 111
     13c:	00 00       	nop
     13e:	18 1c       	adc	r1, r8
     140:	16 13       	cpse	r17, r22
     142:	7f 7f       	andi	r23, 0xFF	; 255
     144:	10 00       	.word	0x0010	; ????
     146:	27 67       	ori	r18, 0x77	; 119
     148:	45 45       	sbci	r20, 0x55	; 85
     14a:	7d 39       	cpi	r23, 0x9D	; 157
     14c:	00 00       	nop
     14e:	3c 7e       	andi	r19, 0xEC	; 236
     150:	4b 49       	sbci	r20, 0x9B	; 155
     152:	79 30       	cpi	r23, 0x09	; 9
     154:	00 00       	nop
     156:	03 63       	ori	r16, 0x33	; 51
     158:	71 19       	sub	r23, r1
     15a:	0f 07       	cpc	r16, r31
     15c:	00 00       	nop
     15e:	36 7f       	andi	r19, 0xF6	; 246
     160:	49 49       	sbci	r20, 0x99	; 153
     162:	7f 36       	cpi	r23, 0x6F	; 111
     164:	00 00       	nop
     166:	06 4f       	sbci	r16, 0xF6	; 246
     168:	49 69       	ori	r20, 0x99	; 153
     16a:	3f 1e       	adc	r3, r31
     16c:	00 00       	nop
     16e:	00 00       	nop
     170:	6c 6c       	ori	r22, 0xCC	; 204
     172:	00 00       	nop
     174:	00 00       	nop
     176:	00 a0       	ldd	r0, Z+32	; 0x20
     178:	ec 6c       	ori	r30, 0xCC	; 204
     17a:	00 00       	nop
     17c:	00 00       	nop
     17e:	08 1c       	adc	r0, r8
     180:	36 63       	ori	r19, 0x36	; 54
     182:	41 00       	.word	0x0041	; ????
     184:	00 00       	nop
     186:	14 14       	cp	r1, r4
     188:	14 14       	cp	r1, r4
     18a:	14 14       	cp	r1, r4
     18c:	00 00       	nop
     18e:	00 41       	sbci	r16, 0x10	; 16
     190:	63 36       	cpi	r22, 0x63	; 99
     192:	1c 08       	sbc	r1, r12
     194:	00 00       	nop
     196:	02 03       	mulsu	r16, r18
     198:	51 59       	subi	r21, 0x91	; 145
     19a:	0f 06       	cpc	r0, r31
     19c:	00 00       	nop
     19e:	3e 7f       	andi	r19, 0xFE	; 254
     1a0:	41 5d       	subi	r20, 0xD1	; 209
     1a2:	5d 1f       	adc	r21, r29
     1a4:	1e 00       	.word	0x001e	; ????
     1a6:	7c 7e       	andi	r23, 0xEC	; 236
     1a8:	13 13       	cpse	r17, r19
     1aa:	7e 7c       	andi	r23, 0xCE	; 206
     1ac:	00 00       	nop
     1ae:	41 7f       	andi	r20, 0xF1	; 241
     1b0:	7f 49       	sbci	r23, 0x9F	; 159
     1b2:	49 7f       	andi	r20, 0xF9	; 249
     1b4:	36 00       	.word	0x0036	; ????
     1b6:	1c 3e       	cpi	r17, 0xEC	; 236
     1b8:	63 41       	sbci	r22, 0x13	; 19
     1ba:	41 63       	ori	r20, 0x31	; 49
     1bc:	22 00       	.word	0x0022	; ????
     1be:	41 7f       	andi	r20, 0xF1	; 241
     1c0:	7f 41       	sbci	r23, 0x1F	; 31
     1c2:	63 7f       	andi	r22, 0xF3	; 243
     1c4:	1c 00       	.word	0x001c	; ????
     1c6:	41 7f       	andi	r20, 0xF1	; 241
     1c8:	7f 49       	sbci	r23, 0x9F	; 159
     1ca:	5d 41       	sbci	r21, 0x1D	; 29
     1cc:	63 00       	.word	0x0063	; ????
     1ce:	41 7f       	andi	r20, 0xF1	; 241
     1d0:	7f 49       	sbci	r23, 0x9F	; 159
     1d2:	1d 01       	movw	r2, r26
     1d4:	03 00       	.word	0x0003	; ????
     1d6:	1c 3e       	cpi	r17, 0xEC	; 236
     1d8:	63 41       	sbci	r22, 0x13	; 19
     1da:	51 73       	andi	r21, 0x31	; 49
     1dc:	72 00       	.word	0x0072	; ????
     1de:	7f 7f       	andi	r23, 0xFF	; 255
     1e0:	08 08       	sbc	r0, r8
     1e2:	7f 7f       	andi	r23, 0xFF	; 255
     1e4:	00 00       	nop
     1e6:	00 41       	sbci	r16, 0x10	; 16
     1e8:	7f 7f       	andi	r23, 0xFF	; 255
     1ea:	41 00       	.word	0x0041	; ????
     1ec:	00 00       	nop
     1ee:	30 70       	andi	r19, 0x00	; 0
     1f0:	40 41       	sbci	r20, 0x10	; 16
     1f2:	7f 3f       	cpi	r23, 0xFF	; 255
     1f4:	01 00       	.word	0x0001	; ????
     1f6:	41 7f       	andi	r20, 0xF1	; 241
     1f8:	7f 08       	sbc	r7, r15
     1fa:	1c 77       	andi	r17, 0x7C	; 124
     1fc:	63 00       	.word	0x0063	; ????
     1fe:	41 7f       	andi	r20, 0xF1	; 241
     200:	7f 41       	sbci	r23, 0x1F	; 31
     202:	40 60       	ori	r20, 0x00	; 0
     204:	70 00       	.word	0x0070	; ????
     206:	7f 7f       	andi	r23, 0xFF	; 255
     208:	06 0c       	add	r0, r6
     20a:	06 7f       	andi	r16, 0xF6	; 246
     20c:	7f 00       	.word	0x007f	; ????
     20e:	7f 7f       	andi	r23, 0xFF	; 255
     210:	06 0c       	add	r0, r6
     212:	18 7f       	andi	r17, 0xF8	; 248
     214:	7f 00       	.word	0x007f	; ????
     216:	1c 3e       	cpi	r17, 0xEC	; 236
     218:	63 41       	sbci	r22, 0x13	; 19
     21a:	63 3e       	cpi	r22, 0xE3	; 227
     21c:	1c 00       	.word	0x001c	; ????
     21e:	41 7f       	andi	r20, 0xF1	; 241
     220:	7f 49       	sbci	r23, 0x9F	; 159
     222:	09 0f       	add	r16, r25
     224:	06 00       	.word	0x0006	; ????
     226:	1e 3f       	cpi	r17, 0xFE	; 254
     228:	21 71       	andi	r18, 0x11	; 17
     22a:	7f 5e       	subi	r23, 0xEF	; 239
     22c:	00 00       	nop
     22e:	41 7f       	andi	r20, 0xF1	; 241
     230:	7f 19       	sub	r23, r15
     232:	39 6f       	ori	r19, 0xF9	; 249
     234:	46 00       	.word	0x0046	; ????
     236:	26 67       	ori	r18, 0x76	; 118
     238:	4d 59       	subi	r20, 0x9D	; 157
     23a:	7b 32       	cpi	r23, 0x2B	; 43
     23c:	00 00       	nop
     23e:	03 41       	sbci	r16, 0x13	; 19
     240:	7f 7f       	andi	r23, 0xFF	; 255
     242:	41 03       	mulsu	r20, r17
     244:	00 00       	nop
     246:	7f 7f       	andi	r23, 0xFF	; 255
     248:	40 40       	sbci	r20, 0x00	; 0
     24a:	7f 7f       	andi	r23, 0xFF	; 255
     24c:	00 00       	nop
     24e:	1f 3f       	cpi	r17, 0xFF	; 255
     250:	60 60       	ori	r22, 0x00	; 0
     252:	3f 1f       	adc	r19, r31
     254:	00 00       	nop
     256:	7f 7f       	andi	r23, 0xFF	; 255
     258:	30 18       	sub	r3, r0
     25a:	30 7f       	andi	r19, 0xF0	; 240
     25c:	7f 00       	.word	0x007f	; ????
     25e:	63 77       	andi	r22, 0x73	; 115
     260:	1c 08       	sbc	r1, r12
     262:	1c 77       	andi	r17, 0x7C	; 124
     264:	63 00       	.word	0x0063	; ????
     266:	07 4f       	sbci	r16, 0xF7	; 247
     268:	78 78       	andi	r23, 0x88	; 136
     26a:	4f 07       	cpc	r20, r31
     26c:	00 00       	nop
     26e:	67 73       	andi	r22, 0x37	; 55
     270:	59 4d       	sbci	r21, 0xD9	; 217
     272:	47 63       	ori	r20, 0x37	; 55
     274:	71 00       	.word	0x0071	; ????
     276:	00 7f       	andi	r16, 0xF0	; 240
     278:	7f 41       	sbci	r23, 0x1F	; 31
     27a:	41 00       	.word	0x0041	; ????
     27c:	00 00       	nop
     27e:	01 03       	mulsu	r16, r17
     280:	06 0c       	add	r0, r6
     282:	18 30       	cpi	r17, 0x08	; 8
     284:	60 00       	.word	0x0060	; ????
     286:	00 41       	sbci	r16, 0x10	; 16
     288:	41 7f       	andi	r20, 0xF1	; 241
     28a:	7f 00       	.word	0x007f	; ????
     28c:	00 00       	nop
     28e:	08 0c       	add	r0, r8
     290:	06 03       	mulsu	r16, r22
     292:	06 0c       	add	r0, r6
     294:	08 00       	.word	0x0008	; ????
     296:	80 80       	ld	r8, Z
     298:	80 80       	ld	r8, Z
     29a:	80 80       	ld	r8, Z
     29c:	80 80       	ld	r8, Z
     29e:	00 00       	nop
     2a0:	03 07       	cpc	r16, r19
     2a2:	04 00       	.word	0x0004	; ????
     2a4:	00 00       	nop
     2a6:	20 74       	andi	r18, 0x40	; 64
     2a8:	54 54       	subi	r21, 0x44	; 68
     2aa:	3c 78       	andi	r19, 0x8C	; 140
     2ac:	40 00       	.word	0x0040	; ????
     2ae:	41 3f       	cpi	r20, 0xF1	; 241
     2b0:	7f 44       	sbci	r23, 0x4F	; 79
     2b2:	44 7c       	andi	r20, 0xC4	; 196
     2b4:	38 00       	.word	0x0038	; ????
     2b6:	38 7c       	andi	r19, 0xC8	; 200
     2b8:	44 44       	sbci	r20, 0x44	; 68
     2ba:	6c 28       	or	r6, r12
     2bc:	00 00       	nop
     2be:	30 78       	andi	r19, 0x80	; 128
     2c0:	48 49       	sbci	r20, 0x98	; 152
     2c2:	3f 7f       	andi	r19, 0xFF	; 255
     2c4:	40 00       	.word	0x0040	; ????
     2c6:	38 7c       	andi	r19, 0xC8	; 200
     2c8:	54 54       	subi	r21, 0x44	; 68
     2ca:	5c 18       	sub	r5, r12
     2cc:	00 00       	nop
     2ce:	48 7e       	andi	r20, 0xE8	; 232
     2d0:	7f 49       	sbci	r23, 0x9F	; 159
     2d2:	03 02       	muls	r16, r19
     2d4:	00 00       	nop
     2d6:	98 bc       	out	0x28, r9	; 40
     2d8:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2da:	f8 7c       	andi	r31, 0xC8	; 200
     2dc:	04 00       	.word	0x0004	; ????
     2de:	41 7f       	andi	r20, 0xF1	; 241
     2e0:	7f 08       	sbc	r7, r15
     2e2:	04 7c       	andi	r16, 0xC4	; 196
     2e4:	78 00       	.word	0x0078	; ????
     2e6:	00 44       	sbci	r16, 0x40	; 64
     2e8:	7d 7d       	andi	r23, 0xDD	; 221
     2ea:	40 00       	.word	0x0040	; ????
     2ec:	00 00       	nop
     2ee:	40 c4       	rjmp	.+2176   	; 0xb70 <__divsf3+0x6>
     2f0:	84 fd       	sbrc	r24, 4
     2f2:	7d 00       	.word	0x007d	; ????
     2f4:	00 00       	nop
     2f6:	41 7f       	andi	r20, 0xF1	; 241
     2f8:	7f 10       	cpse	r7, r15
     2fa:	38 6c       	ori	r19, 0xC8	; 200
     2fc:	44 00       	.word	0x0044	; ????
     2fe:	00 41       	sbci	r16, 0x10	; 16
     300:	7f 7f       	andi	r23, 0xFF	; 255
     302:	40 00       	.word	0x0040	; ????
     304:	00 00       	nop
     306:	7c 7c       	andi	r23, 0xCC	; 204
     308:	0c 18       	sub	r0, r12
     30a:	0c 7c       	andi	r16, 0xCC	; 204
     30c:	78 00       	.word	0x0078	; ????
     30e:	7c 7c       	andi	r23, 0xCC	; 204
     310:	04 04       	cpc	r0, r4
     312:	7c 78       	andi	r23, 0x8C	; 140
     314:	00 00       	nop
     316:	38 7c       	andi	r19, 0xC8	; 200
     318:	44 44       	sbci	r20, 0x44	; 68
     31a:	7c 38       	cpi	r23, 0x8C	; 140
     31c:	00 00       	nop
     31e:	84 fc       	sbrc	r8, 4
     320:	f8 a4       	ldd	r15, Y+40	; 0x28
     322:	24 3c       	cpi	r18, 0xC4	; 196
     324:	18 00       	.word	0x0018	; ????
     326:	18 3c       	cpi	r17, 0xC8	; 200
     328:	24 a4       	ldd	r2, Z+44	; 0x2c
     32a:	f8 fc       	.word	0xfcf8	; ????
     32c:	84 00       	.word	0x0084	; ????
     32e:	44 7c       	andi	r20, 0xC4	; 196
     330:	78 44       	sbci	r23, 0x48	; 72
     332:	1c 18       	sub	r1, r12
     334:	00 00       	nop
     336:	48 5c       	subi	r20, 0xC8	; 200
     338:	54 54       	subi	r21, 0x44	; 68
     33a:	74 24       	eor	r7, r4
     33c:	00 00       	nop
     33e:	00 04       	cpc	r0, r0
     340:	3e 7f       	andi	r19, 0xFE	; 254
     342:	44 24       	eor	r4, r4
     344:	00 00       	nop
     346:	3c 7c       	andi	r19, 0xCC	; 204
     348:	40 40       	sbci	r20, 0x00	; 0
     34a:	3c 7c       	andi	r19, 0xCC	; 204
     34c:	40 00       	.word	0x0040	; ????
     34e:	1c 3c       	cpi	r17, 0xCC	; 204
     350:	60 60       	ori	r22, 0x00	; 0
     352:	3c 1c       	adc	r3, r12
     354:	00 00       	nop
     356:	3c 7c       	andi	r19, 0xCC	; 204
     358:	60 30       	cpi	r22, 0x00	; 0
     35a:	60 7c       	andi	r22, 0xC0	; 192
     35c:	3c 00       	.word	0x003c	; ????
     35e:	44 6c       	ori	r20, 0xC4	; 196
     360:	38 10       	cpse	r3, r8
     362:	38 6c       	ori	r19, 0xC8	; 200
     364:	44 00       	.word	0x0044	; ????
     366:	9c bc       	out	0x2c, r9	; 44
     368:	a0 a0       	ldd	r10, Z+32	; 0x20
     36a:	fc 7c       	andi	r31, 0xCC	; 204
     36c:	00 00       	nop
     36e:	4c 64       	ori	r20, 0x4C	; 76
     370:	74 5c       	subi	r23, 0xC4	; 196
     372:	4c 64       	ori	r20, 0x4C	; 76
     374:	00 00       	nop
     376:	08 08       	sbc	r0, r8
     378:	3e 77       	andi	r19, 0x7E	; 126
     37a:	41 41       	sbci	r20, 0x11	; 17
     37c:	00 00       	nop
     37e:	00 00       	nop
     380:	00 77       	andi	r16, 0x70	; 112
     382:	77 00       	.word	0x0077	; ????
     384:	00 00       	nop
     386:	41 41       	sbci	r20, 0x11	; 17
     388:	77 3e       	cpi	r23, 0xE7	; 231
     38a:	08 08       	sbc	r0, r8
     38c:	00 00       	nop
     38e:	02 03       	mulsu	r16, r18
     390:	01 03       	mulsu	r16, r17
     392:	02 03       	mulsu	r16, r18
     394:	01 00       	.word	0x0001	; ????

00000396 <__ctors_end>:
     396:	11 24       	eor	r1, r1
     398:	1f be       	out	0x3f, r1	; 63
     39a:	cf ef       	ldi	r28, 0xFF	; 255
     39c:	d4 e0       	ldi	r29, 0x04	; 4
     39e:	de bf       	out	0x3e, r29	; 62
     3a0:	cd bf       	out	0x3d, r28	; 61

000003a2 <__do_copy_data>:
     3a2:	12 e0       	ldi	r17, 0x02	; 2
     3a4:	a0 e0       	ldi	r26, 0x00	; 0
     3a6:	b1 e0       	ldi	r27, 0x01	; 1
     3a8:	ec e2       	ldi	r30, 0x2C	; 44
     3aa:	f9 e1       	ldi	r31, 0x19	; 25
     3ac:	02 c0       	rjmp	.+4      	; 0x3b2 <__do_copy_data+0x10>
     3ae:	05 90       	lpm	r0, Z+
     3b0:	0d 92       	st	X+, r0
     3b2:	a6 34       	cpi	r26, 0x46	; 70
     3b4:	b1 07       	cpc	r27, r17
     3b6:	d9 f7       	brne	.-10     	; 0x3ae <__do_copy_data+0xc>

000003b8 <__do_clear_bss>:
     3b8:	22 e0       	ldi	r18, 0x02	; 2
     3ba:	a6 e4       	ldi	r26, 0x46	; 70
     3bc:	b2 e0       	ldi	r27, 0x02	; 2
     3be:	01 c0       	rjmp	.+2      	; 0x3c2 <.do_clear_bss_start>

000003c0 <.do_clear_bss_loop>:
     3c0:	1d 92       	st	X+, r1

000003c2 <.do_clear_bss_start>:
     3c2:	a0 36       	cpi	r26, 0x60	; 96
     3c4:	b2 07       	cpc	r27, r18
     3c6:	e1 f7       	brne	.-8      	; 0x3c0 <.do_clear_bss_loop>
     3c8:	0e 94 26 02 	call	0x44c	; 0x44c <main>
     3cc:	0c 94 94 0c 	jmp	0x1928	; 0x1928 <_exit>

000003d0 <__bad_interrupt>:
     3d0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003d4 <adcInit>:



void adcInit(void) {
	
	DDRE &= ~(1<<PINE0);
     3d4:	30 98       	cbi	0x06, 0	; 6
     3d6:	08 95       	ret

000003d8 <readAdc>:

 
uint8_t readAdc(uint8_t channel){ //for ch1 channel = 0;
	volatile char * adc = (char *) 0x1400;
	
	*adc = 0x04 | channel;
     3d8:	84 60       	ori	r24, 0x04	; 4
     3da:	80 93 00 14 	sts	0x1400, r24	; 0x801400 <__bss_end+0x11a0>
	

	while (test_bit(PINE, PINE0)) {
     3de:	28 99       	sbic	0x05, 0	; 5
     3e0:	fe cf       	rjmp	.-4      	; 0x3de <readAdc+0x6>

	}
	
	return *adc;
     3e2:	80 91 00 14 	lds	r24, 0x1400	; 0x801400 <__bss_end+0x11a0>
     3e6:	08 95       	ret

000003e8 <__vector_14>:
	joystick_readPosition(&joystick_pos);
	slider_readPosition(&slider_pos);
	touchButton_readButtons(&buttons);
	sei();
}
void timer_init() {
     3e8:	1f 92       	push	r1
     3ea:	0f 92       	push	r0
     3ec:	0f b6       	in	r0, 0x3f	; 63
     3ee:	0f 92       	push	r0
     3f0:	11 24       	eor	r1, r1
     3f2:	2f 93       	push	r18
     3f4:	3f 93       	push	r19
     3f6:	4f 93       	push	r20
     3f8:	5f 93       	push	r21
     3fa:	6f 93       	push	r22
     3fc:	7f 93       	push	r23
     3fe:	8f 93       	push	r24
     400:	9f 93       	push	r25
     402:	af 93       	push	r26
     404:	bf 93       	push	r27
     406:	ef 93       	push	r30
     408:	ff 93       	push	r31
     40a:	f8 94       	cli
     40c:	1d bc       	out	0x2d, r1	; 45
     40e:	1c bc       	out	0x2c, r1	; 44
     410:	86 e4       	ldi	r24, 0x46	; 70
     412:	92 e0       	ldi	r25, 0x02	; 2
     414:	0e 94 60 02 	call	0x4c0	; 0x4c0 <joystick_readPosition>
     418:	8c e4       	ldi	r24, 0x4C	; 76
     41a:	92 e0       	ldi	r25, 0x02	; 2
     41c:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <slider_readPosition>
     420:	8a e4       	ldi	r24, 0x4A	; 74
     422:	92 e0       	ldi	r25, 0x02	; 2
     424:	0e 94 1a 05 	call	0xa34	; 0xa34 <touchButton_readButtons>
     428:	78 94       	sei
     42a:	ff 91       	pop	r31
     42c:	ef 91       	pop	r30
     42e:	bf 91       	pop	r27
     430:	af 91       	pop	r26
     432:	9f 91       	pop	r25
     434:	8f 91       	pop	r24
     436:	7f 91       	pop	r23
     438:	6f 91       	pop	r22
     43a:	5f 91       	pop	r21
     43c:	4f 91       	pop	r20
     43e:	3f 91       	pop	r19
     440:	2f 91       	pop	r18
     442:	0f 90       	pop	r0
     444:	0f be       	out	0x3f, r0	; 63
     446:	0f 90       	pop	r0
     448:	1f 90       	pop	r1
     44a:	18 95       	reti

0000044c <main>:
	
}
int main(void)
{
	//DDRB &= ~(1 << BUTTON_LEFT | 1 << BUTTON_RIGHT);
	setupInit();
     44c:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <setupInit>
	//SRAM_test();
	printf("Hello, world!\n\r");
     450:	81 ef       	ldi	r24, 0xF1	; 241
     452:	91 e0       	ldi	r25, 0x01	; 1
     454:	9f 93       	push	r25
     456:	8f 93       	push	r24
     458:	0e 94 93 09 	call	0x1326	; 0x1326 <printf>
	MenuNode* gameMenu = menuInit();
     45c:	0e 94 75 03 	call	0x6ea	; 0x6ea <menuInit>
	menu_printCurrentMenu();
     460:	0e 94 16 04 	call	0x82c	; 0x82c <menu_printCurrentMenu>
	//oled_print(gameMenu->name);
	
	//Enable interrupt from timer
	
	//Disable global interrupts
	cli();
     464:	f8 94       	cli
	
	//enable timer 0
	TIMSK |= (1 << OCIE1B);
     466:	89 b7       	in	r24, 0x39	; 57
     468:	80 62       	ori	r24, 0x20	; 32
     46a:	89 bf       	out	0x39, r24	; 57

	
	//Setup code here for timer interrupt
	TCNT1 = 0x00;
     46c:	1d bc       	out	0x2d, r1	; 45
     46e:	1c bc       	out	0x2c, r1	; 44
	TCCR1A = (1 << COM1B0 | 1 << COM1B1);
     470:	80 e3       	ldi	r24, 0x30	; 48
     472:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = (1 << CS12 | 1 << CS00);
     474:	85 e0       	ldi	r24, 0x05	; 5
     476:	8e bd       	out	0x2e, r24	; 46
	
	OCR1B = TIMER_RESET;
     478:	80 ef       	ldi	r24, 0xF0	; 240
     47a:	90 e0       	ldi	r25, 0x00	; 0
     47c:	99 bd       	out	0x29, r25	; 41
     47e:	88 bd       	out	0x28, r24	; 40
	
	//Enable global interrupts
	sei();
     480:	78 94       	sei
	//printf("Timer initialized");
	
	oled_home();
     482:	0e 94 81 04 	call	0x902	; 0x902 <oled_home>
	oled_gotoLine(2);
     486:	82 e0       	ldi	r24, 0x02	; 2
     488:	0e 94 b8 04 	call	0x970	; 0x970 <oled_gotoLine>
     48c:	0f 90       	pop	r0
     48e:	0f 90       	pop	r0
		//joystick_printDirection(joystick_getDirection(&joystick_pos));
		//printf("Slider left: %i\tSlider right: %i\n\r", slider_pos.left_pos, slider_pos.right_pos);
		//printf("Button left: %i \tButton right: %i\n\r", buttons.left_button, buttons.right_button);
		//printf("Angle: %i\n\r", joystick_pos.angle);
		//oled_print_arrow(0x6, 0x6);
		navigateMenu(&joystick_pos);
     490:	86 e4       	ldi	r24, 0x46	; 70
     492:	92 e0       	ldi	r25, 0x02	; 2
     494:	0e 94 b3 03 	call	0x766	; 0x766 <navigateMenu>
		menu_printCurrentMenu();
     498:	0e 94 16 04 	call	0x82c	; 0x82c <menu_printCurrentMenu>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     49c:	8f ef       	ldi	r24, 0xFF	; 255
     49e:	9f e2       	ldi	r25, 0x2F	; 47
     4a0:	01 97       	sbiw	r24, 0x01	; 1
     4a2:	f1 f7       	brne	.-4      	; 0x4a0 <main+0x54>
     4a4:	00 c0       	rjmp	.+0      	; 0x4a6 <main+0x5a>
     4a6:	00 00       	nop
     4a8:	f3 cf       	rjmp	.-26     	; 0x490 <main+0x44>

000004aa <joystickInit>:
uint8_t joystickOffsetX;
uint8_t joystickOffsetY;


void joystickInit() {
	joystickOffsetX = readAdc(X_POS_CHANNEL);
     4aa:	80 e0       	ldi	r24, 0x00	; 0
     4ac:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <readAdc>
     4b0:	80 93 4f 02 	sts	0x024F, r24	; 0x80024f <joystickOffsetX>
	joystickOffsetY = readAdc(Y_POS_CHANNEL);
     4b4:	81 e0       	ldi	r24, 0x01	; 1
     4b6:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <readAdc>
     4ba:	80 93 4e 02 	sts	0x024E, r24	; 0x80024e <joystickOffsetY>
     4be:	08 95       	ret

000004c0 <joystick_readPosition>:
}
void joystick_readPosition(joystick_position_t * pos) {
     4c0:	cf 92       	push	r12
     4c2:	df 92       	push	r13
     4c4:	ef 92       	push	r14
     4c6:	ff 92       	push	r15
     4c8:	1f 93       	push	r17
     4ca:	cf 93       	push	r28
     4cc:	df 93       	push	r29
     4ce:	ec 01       	movw	r28, r24
	uint8_t x_pos = readAdc(X_POS_CHANNEL);
     4d0:	80 e0       	ldi	r24, 0x00	; 0
     4d2:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <readAdc>
     4d6:	18 2f       	mov	r17, r24
	uint8_t y_pos = readAdc(Y_POS_CHANNEL);
     4d8:	81 e0       	ldi	r24, 0x01	; 1
     4da:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <readAdc>
     4de:	e8 2f       	mov	r30, r24
	if (x_pos < joystickOffsetX) {
     4e0:	60 91 4f 02 	lds	r22, 0x024F	; 0x80024f <joystickOffsetX>
     4e4:	16 17       	cp	r17, r22
     4e6:	78 f4       	brcc	.+30     	; 0x506 <__stack+0x7>
		pos->x_pos = ((x_pos - joystickOffsetX)*100)/(joystickOffsetX);
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	21 2f       	mov	r18, r17
     4ec:	30 e0       	ldi	r19, 0x00	; 0
     4ee:	26 1b       	sub	r18, r22
     4f0:	37 0b       	sbc	r19, r23
     4f2:	44 e6       	ldi	r20, 0x64	; 100
     4f4:	42 9f       	mul	r20, r18
     4f6:	c0 01       	movw	r24, r0
     4f8:	43 9f       	mul	r20, r19
     4fa:	90 0d       	add	r25, r0
     4fc:	11 24       	eor	r1, r1
     4fe:	0e 94 f8 07 	call	0xff0	; 0xff0 <__divmodhi4>
     502:	68 83       	st	Y, r22
     504:	13 c0       	rjmp	.+38     	; 0x52c <__stack+0x2d>
	} else {
		pos->x_pos = ((x_pos - joystickOffsetX)*100)/(255-joystickOffsetX);
     506:	46 2f       	mov	r20, r22
     508:	50 e0       	ldi	r21, 0x00	; 0
     50a:	21 2f       	mov	r18, r17
     50c:	30 e0       	ldi	r19, 0x00	; 0
     50e:	24 1b       	sub	r18, r20
     510:	35 0b       	sbc	r19, r21
     512:	64 e6       	ldi	r22, 0x64	; 100
     514:	62 9f       	mul	r22, r18
     516:	c0 01       	movw	r24, r0
     518:	63 9f       	mul	r22, r19
     51a:	90 0d       	add	r25, r0
     51c:	11 24       	eor	r1, r1
     51e:	6f ef       	ldi	r22, 0xFF	; 255
     520:	70 e0       	ldi	r23, 0x00	; 0
     522:	64 1b       	sub	r22, r20
     524:	75 0b       	sbc	r23, r21
     526:	0e 94 f8 07 	call	0xff0	; 0xff0 <__divmodhi4>
     52a:	68 83       	st	Y, r22
	}
	if (y_pos < joystickOffsetY) {
     52c:	20 91 4e 02 	lds	r18, 0x024E	; 0x80024e <joystickOffsetY>
     530:	e2 17       	cp	r30, r18
     532:	80 f4       	brcc	.+32     	; 0x554 <__stack+0x55>
		pos->y_pos = ((y_pos - joystickOffsetY)*100)/(joystickOffsetY);
     534:	62 2f       	mov	r22, r18
     536:	70 e0       	ldi	r23, 0x00	; 0
     538:	4e 2f       	mov	r20, r30
     53a:	50 e0       	ldi	r21, 0x00	; 0
     53c:	46 1b       	sub	r20, r22
     53e:	57 0b       	sbc	r21, r23
     540:	24 e6       	ldi	r18, 0x64	; 100
     542:	24 9f       	mul	r18, r20
     544:	c0 01       	movw	r24, r0
     546:	25 9f       	mul	r18, r21
     548:	90 0d       	add	r25, r0
     54a:	11 24       	eor	r1, r1
     54c:	0e 94 f8 07 	call	0xff0	; 0xff0 <__divmodhi4>
     550:	69 83       	std	Y+1, r22	; 0x01
     552:	12 c0       	rjmp	.+36     	; 0x578 <__stack+0x79>
	} else {
		pos->y_pos = ((y_pos - joystickOffsetY)*100)/(255-joystickOffsetY);
     554:	30 e0       	ldi	r19, 0x00	; 0
     556:	4e 2f       	mov	r20, r30
     558:	50 e0       	ldi	r21, 0x00	; 0
     55a:	42 1b       	sub	r20, r18
     55c:	53 0b       	sbc	r21, r19
     55e:	64 e6       	ldi	r22, 0x64	; 100
     560:	64 9f       	mul	r22, r20
     562:	c0 01       	movw	r24, r0
     564:	65 9f       	mul	r22, r21
     566:	90 0d       	add	r25, r0
     568:	11 24       	eor	r1, r1
     56a:	6f ef       	ldi	r22, 0xFF	; 255
     56c:	70 e0       	ldi	r23, 0x00	; 0
     56e:	62 1b       	sub	r22, r18
     570:	73 0b       	sbc	r23, r19
     572:	0e 94 f8 07 	call	0xff0	; 0xff0 <__divmodhi4>
     576:	69 83       	std	Y+1, r22	; 0x01
	}
	pos->angle = atan2(pos->y_pos, pos->x_pos)*360/2.0/3.14;
     578:	68 81       	ld	r22, Y
     57a:	06 2e       	mov	r0, r22
     57c:	00 0c       	add	r0, r0
     57e:	77 0b       	sbc	r23, r23
     580:	88 0b       	sbc	r24, r24
     582:	99 0b       	sbc	r25, r25
     584:	0e 94 5f 06 	call	0xcbe	; 0xcbe <__floatsisf>
     588:	6b 01       	movw	r12, r22
     58a:	7c 01       	movw	r14, r24
     58c:	69 81       	ldd	r22, Y+1	; 0x01
     58e:	06 2e       	mov	r0, r22
     590:	00 0c       	add	r0, r0
     592:	77 0b       	sbc	r23, r23
     594:	88 0b       	sbc	r24, r24
     596:	99 0b       	sbc	r25, r25
     598:	0e 94 5f 06 	call	0xcbe	; 0xcbe <__floatsisf>
     59c:	a7 01       	movw	r20, r14
     59e:	96 01       	movw	r18, r12
     5a0:	0e 94 56 05 	call	0xaac	; 0xaac <atan2>
     5a4:	20 e0       	ldi	r18, 0x00	; 0
     5a6:	30 e0       	ldi	r19, 0x00	; 0
     5a8:	44 eb       	ldi	r20, 0xB4	; 180
     5aa:	53 e4       	ldi	r21, 0x43	; 67
     5ac:	0e 94 1a 07 	call	0xe34	; 0xe34 <__mulsf3>
     5b0:	20 e0       	ldi	r18, 0x00	; 0
     5b2:	30 e0       	ldi	r19, 0x00	; 0
     5b4:	40 e0       	ldi	r20, 0x00	; 0
     5b6:	5f e3       	ldi	r21, 0x3F	; 63
     5b8:	0e 94 1a 07 	call	0xe34	; 0xe34 <__mulsf3>
     5bc:	23 ec       	ldi	r18, 0xC3	; 195
     5be:	35 ef       	ldi	r19, 0xF5	; 245
     5c0:	48 e4       	ldi	r20, 0x48	; 72
     5c2:	50 e4       	ldi	r21, 0x40	; 64
     5c4:	0e 94 b5 05 	call	0xb6a	; 0xb6a <__divsf3>
     5c8:	0e 94 27 06 	call	0xc4e	; 0xc4e <__fixsfsi>
     5cc:	7b 83       	std	Y+3, r23	; 0x03
     5ce:	6a 83       	std	Y+2, r22	; 0x02
}
     5d0:	df 91       	pop	r29
     5d2:	cf 91       	pop	r28
     5d4:	1f 91       	pop	r17
     5d6:	ff 90       	pop	r15
     5d8:	ef 90       	pop	r14
     5da:	df 90       	pop	r13
     5dc:	cf 90       	pop	r12
     5de:	08 95       	ret

000005e0 <joystick_getDirection>:

DIRECTION_t joystick_getDirection(joystick_position_t * pos) {
     5e0:	fc 01       	movw	r30, r24
	if (abs(pos->x_pos) < 5 && abs(pos->y_pos) <5) {
     5e2:	80 81       	ld	r24, Z
     5e4:	94 e0       	ldi	r25, 0x04	; 4
     5e6:	98 0f       	add	r25, r24
     5e8:	99 30       	cpi	r25, 0x09	; 9
     5ea:	20 f4       	brcc	.+8      	; 0x5f4 <joystick_getDirection+0x14>
     5ec:	91 81       	ldd	r25, Z+1	; 0x01
     5ee:	9c 5f       	subi	r25, 0xFC	; 252
     5f0:	99 30       	cpi	r25, 0x09	; 9
     5f2:	90 f0       	brcs	.+36     	; 0x618 <joystick_getDirection+0x38>
		return NEUTRAL;
	}
	if (pos->x_pos >= 5 && abs(pos->y_pos) < 50) {
     5f4:	85 30       	cpi	r24, 0x05	; 5
     5f6:	2c f0       	brlt	.+10     	; 0x602 <joystick_getDirection+0x22>
     5f8:	81 81       	ldd	r24, Z+1	; 0x01
     5fa:	8f 5c       	subi	r24, 0xCF	; 207
     5fc:	83 36       	cpi	r24, 0x63	; 99
     5fe:	38 f4       	brcc	.+14     	; 0x60e <joystick_getDirection+0x2e>
     600:	0d c0       	rjmp	.+26     	; 0x61c <joystick_getDirection+0x3c>
		return RIGHT;
	}
	if (pos->x_pos <= -5 && abs(pos->y_pos) < 50) {
     602:	8c 3f       	cpi	r24, 0xFC	; 252
     604:	24 f4       	brge	.+8      	; 0x60e <joystick_getDirection+0x2e>
     606:	81 81       	ldd	r24, Z+1	; 0x01
     608:	8f 5c       	subi	r24, 0xCF	; 207
     60a:	83 36       	cpi	r24, 0x63	; 99
     60c:	48 f0       	brcs	.+18     	; 0x620 <joystick_getDirection+0x40>
		return LEFT;
	}
	
	if (pos->y_pos <= -5) {
     60e:	81 81       	ldd	r24, Z+1	; 0x01
     610:	8c 3f       	cpi	r24, 0xFC	; 252
     612:	44 f0       	brlt	.+16     	; 0x624 <joystick_getDirection+0x44>
		return DOWN;
	}
	else {
		return UP;
     614:	82 e0       	ldi	r24, 0x02	; 2
     616:	08 95       	ret
	pos->angle = atan2(pos->y_pos, pos->x_pos)*360/2.0/3.14;
}

DIRECTION_t joystick_getDirection(joystick_position_t * pos) {
	if (abs(pos->x_pos) < 5 && abs(pos->y_pos) <5) {
		return NEUTRAL;
     618:	84 e0       	ldi	r24, 0x04	; 4
     61a:	08 95       	ret
	}
	if (pos->x_pos >= 5 && abs(pos->y_pos) < 50) {
		return RIGHT;
     61c:	81 e0       	ldi	r24, 0x01	; 1
     61e:	08 95       	ret
	}
	if (pos->x_pos <= -5 && abs(pos->y_pos) < 50) {
		return LEFT;
     620:	80 e0       	ldi	r24, 0x00	; 0
     622:	08 95       	ret
	}
	
	if (pos->y_pos <= -5) {
		return DOWN;
     624:	83 e0       	ldi	r24, 0x03	; 3
	}
	else {
		return UP;
	}
	
} 
     626:	08 95       	ret

00000628 <mainMenuInit>:
	DIRECTION_t lastDir;
} menu;

menu currentMenu;

MenuNode* mainMenuInit (void){
     628:	cf 93       	push	r28
     62a:	df 93       	push	r29
	MenuNode* ptr = (MenuNode*) malloc(sizeof(MenuNode));
     62c:	89 e1       	ldi	r24, 0x19	; 25
     62e:	90 e0       	ldi	r25, 0x00	; 0
     630:	0e 94 20 08 	call	0x1040	; 0x1040 <malloc>
     634:	ec 01       	movw	r28, r24
	strcpy(ptr->name, "Main menu");
     636:	8a e0       	ldi	r24, 0x0A	; 10
     638:	e1 e0       	ldi	r30, 0x01	; 1
     63a:	f2 e0       	ldi	r31, 0x02	; 2
     63c:	de 01       	movw	r26, r28
     63e:	01 90       	ld	r0, Z+
     640:	0d 92       	st	X+, r0
     642:	8a 95       	dec	r24
     644:	e1 f7       	brne	.-8      	; 0x63e <mainMenuInit+0x16>
	ptr->parent = NULL;
     646:	1b 86       	std	Y+11, r1	; 0x0b
     648:	1a 86       	std	Y+10, r1	; 0x0a
	for (int i = 0; i< MAXCHILDREN; i++) {
		ptr->children[i] = NULL;
     64a:	1d 86       	std	Y+13, r1	; 0x0d
     64c:	1c 86       	std	Y+12, r1	; 0x0c
     64e:	1f 86       	std	Y+15, r1	; 0x0f
     650:	1e 86       	std	Y+14, r1	; 0x0e
     652:	19 8a       	std	Y+17, r1	; 0x11
     654:	18 8a       	std	Y+16, r1	; 0x10
     656:	1b 8a       	std	Y+19, r1	; 0x13
     658:	1a 8a       	std	Y+18, r1	; 0x12
     65a:	1d 8a       	std	Y+21, r1	; 0x15
     65c:	1c 8a       	std	Y+20, r1	; 0x14
     65e:	1f 8a       	std	Y+23, r1	; 0x17
     660:	1e 8a       	std	Y+22, r1	; 0x16
	}

	return ptr;
}
     662:	ce 01       	movw	r24, r28
     664:	df 91       	pop	r29
     666:	cf 91       	pop	r28
     668:	08 95       	ret

0000066a <addChild>:

MenuNode * addChild(MenuNode* parent, char* child_name)
{
     66a:	cf 92       	push	r12
     66c:	df 92       	push	r13
     66e:	ef 92       	push	r14
     670:	ff 92       	push	r15
     672:	1f 93       	push	r17
     674:	cf 93       	push	r28
     676:	df 93       	push	r29
     678:	7c 01       	movw	r14, r24
     67a:	6b 01       	movw	r12, r22
	MenuNode* childPtr = (MenuNode*) malloc(sizeof(MenuNode));
     67c:	89 e1       	ldi	r24, 0x19	; 25
     67e:	90 e0       	ldi	r25, 0x00	; 0
     680:	0e 94 20 08 	call	0x1040	; 0x1040 <malloc>
     684:	ec 01       	movw	r28, r24
	
	parent->numChildren++;
     686:	d7 01       	movw	r26, r14
     688:	58 96       	adiw	r26, 0x18	; 24
     68a:	ec 91       	ld	r30, X
     68c:	58 97       	sbiw	r26, 0x18	; 24
     68e:	11 e0       	ldi	r17, 0x01	; 1
     690:	1e 0f       	add	r17, r30
     692:	58 96       	adiw	r26, 0x18	; 24
     694:	1c 93       	st	X, r17
	strcpy(childPtr->name, child_name);
     696:	b6 01       	movw	r22, r12
     698:	0e 94 41 09 	call	0x1282	; 0x1282 <strcpy>
	childPtr->parent = parent;
     69c:	fb 86       	std	Y+11, r15	; 0x0b
     69e:	ea 86       	std	Y+10, r14	; 0x0a
	for (int i = 0; i< MAXCHILDREN; i++) {
		childPtr->children[i] = NULL;
     6a0:	1d 86       	std	Y+13, r1	; 0x0d
     6a2:	1c 86       	std	Y+12, r1	; 0x0c
     6a4:	1f 86       	std	Y+15, r1	; 0x0f
     6a6:	1e 86       	std	Y+14, r1	; 0x0e
     6a8:	19 8a       	std	Y+17, r1	; 0x11
     6aa:	18 8a       	std	Y+16, r1	; 0x10
     6ac:	1b 8a       	std	Y+19, r1	; 0x13
     6ae:	1a 8a       	std	Y+18, r1	; 0x12
     6b0:	1d 8a       	std	Y+21, r1	; 0x15
     6b2:	1c 8a       	std	Y+20, r1	; 0x14
     6b4:	1f 8a       	std	Y+23, r1	; 0x17
     6b6:	1e 8a       	std	Y+22, r1	; 0x16
	}
	if (parent->numChildren > MAXCHILDREN) {
     6b8:	17 30       	cpi	r17, 0x07	; 7
     6ba:	68 f4       	brcc	.+26     	; 0x6d6 <addChild+0x6c>
		return NULL;
	} 
	parent->children[parent->numChildren-1]=childPtr;
     6bc:	e1 2f       	mov	r30, r17
     6be:	f0 e0       	ldi	r31, 0x00	; 0
     6c0:	35 96       	adiw	r30, 0x05	; 5
     6c2:	ee 0f       	add	r30, r30
     6c4:	ff 1f       	adc	r31, r31
     6c6:	ee 0d       	add	r30, r14
     6c8:	ff 1d       	adc	r31, r15
     6ca:	d1 83       	std	Z+1, r29	; 0x01
     6cc:	c0 83       	st	Z, r28
	parent->children[parent->numChildren-1]->numChildren = 0;
     6ce:	18 8e       	std	Y+24, r1	; 0x18
	return childPtr;
     6d0:	8c 2f       	mov	r24, r28
     6d2:	9d 2f       	mov	r25, r29
     6d4:	02 c0       	rjmp	.+4      	; 0x6da <addChild+0x70>
	childPtr->parent = parent;
	for (int i = 0; i< MAXCHILDREN; i++) {
		childPtr->children[i] = NULL;
	}
	if (parent->numChildren > MAXCHILDREN) {
		return NULL;
     6d6:	80 e0       	ldi	r24, 0x00	; 0
     6d8:	90 e0       	ldi	r25, 0x00	; 0
	} 
	parent->children[parent->numChildren-1]=childPtr;
	parent->children[parent->numChildren-1]->numChildren = 0;
	return childPtr;
}
     6da:	df 91       	pop	r29
     6dc:	cf 91       	pop	r28
     6de:	1f 91       	pop	r17
     6e0:	ff 90       	pop	r15
     6e2:	ef 90       	pop	r14
     6e4:	df 90       	pop	r13
     6e6:	cf 90       	pop	r12
     6e8:	08 95       	ret

000006ea <menuInit>:

MenuNode* menuInit(void)
{
     6ea:	ef 92       	push	r14
     6ec:	ff 92       	push	r15
     6ee:	0f 93       	push	r16
     6f0:	1f 93       	push	r17
     6f2:	cf 93       	push	r28
     6f4:	df 93       	push	r29
	MenuNode* mainMenu = mainMenuInit();
     6f6:	0e 94 14 03 	call	0x628	; 0x628 <mainMenuInit>
     6fa:	7c 01       	movw	r14, r24
		
	MenuNode * childPlayGame = addChild(mainMenu,"Play game");
     6fc:	6b e0       	ldi	r22, 0x0B	; 11
     6fe:	72 e0       	ldi	r23, 0x02	; 2
     700:	0e 94 35 03 	call	0x66a	; 0x66a <addChild>
     704:	ec 01       	movw	r28, r24
	addChild(childPlayGame,"GAME 1");
     706:	65 e1       	ldi	r22, 0x15	; 21
     708:	72 e0       	ldi	r23, 0x02	; 2
     70a:	0e 94 35 03 	call	0x66a	; 0x66a <addChild>
	addChild(childPlayGame,"GAME 2");
     70e:	6c e1       	ldi	r22, 0x1C	; 28
     710:	72 e0       	ldi	r23, 0x02	; 2
     712:	ce 01       	movw	r24, r28
     714:	0e 94 35 03 	call	0x66a	; 0x66a <addChild>
	
	
	MenuNode * childHighscore = addChild(mainMenu,"Highscore");
     718:	63 e2       	ldi	r22, 0x23	; 35
     71a:	72 e0       	ldi	r23, 0x02	; 2
     71c:	c7 01       	movw	r24, r14
     71e:	0e 94 35 03 	call	0x66a	; 0x66a <addChild>
     722:	8c 01       	movw	r16, r24
     724:	c5 e0       	ldi	r28, 0x05	; 5
     726:	d0 e0       	ldi	r29, 0x00	; 0
	//childHighscore->numChildren = 5;
	
	for (int i = 0; i< 5; i++) {
		addChild(childHighscore, "High: 1");
     728:	6d e2       	ldi	r22, 0x2D	; 45
     72a:	72 e0       	ldi	r23, 0x02	; 2
     72c:	c8 01       	movw	r24, r16
     72e:	0e 94 35 03 	call	0x66a	; 0x66a <addChild>
     732:	21 97       	sbiw	r28, 0x01	; 1
	
	
	MenuNode * childHighscore = addChild(mainMenu,"Highscore");
	//childHighscore->numChildren = 5;
	
	for (int i = 0; i< 5; i++) {
     734:	c9 f7       	brne	.-14     	; 0x728 <menuInit+0x3e>
		addChild(childHighscore, "High: 1");
	}
	
	MenuNode* childSettings = addChild(mainMenu,"Settings");
     736:	65 e3       	ldi	r22, 0x35	; 53
     738:	72 e0       	ldi	r23, 0x02	; 2
     73a:	c7 01       	movw	r24, r14
     73c:	0e 94 35 03 	call	0x66a	; 0x66a <addChild>
	//childSettings->numChildren = 1;
	addChild(childSettings, "No sett");
     740:	6e e3       	ldi	r22, 0x3E	; 62
     742:	72 e0       	ldi	r23, 0x02	; 2
     744:	0e 94 35 03 	call	0x66a	; 0x66a <addChild>
	currentMenu.currentMenuItem = mainMenu;
     748:	e0 e5       	ldi	r30, 0x50	; 80
     74a:	f2 e0       	ldi	r31, 0x02	; 2
     74c:	f1 82       	std	Z+1, r15	; 0x01
     74e:	e0 82       	st	Z, r14
	currentMenu.childIndex = 0;
     750:	12 82       	std	Z+2, r1	; 0x02
	currentMenu.lastDir = NEUTRAL;
     752:	84 e0       	ldi	r24, 0x04	; 4
     754:	83 83       	std	Z+3, r24	; 0x03
	

	return mainMenu;
}
     756:	c7 01       	movw	r24, r14
     758:	df 91       	pop	r29
     75a:	cf 91       	pop	r28
     75c:	1f 91       	pop	r17
     75e:	0f 91       	pop	r16
     760:	ff 90       	pop	r15
     762:	ef 90       	pop	r14
     764:	08 95       	ret

00000766 <navigateMenu>:

void navigateMenu(joystick_position_t * joystick_position_p) {
	DIRECTION_t dir = joystick_getDirection(joystick_position_p);
     766:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <joystick_getDirection>
	if (currentMenu.lastDir == NEUTRAL) {
     76a:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <currentMenu+0x3>
     76e:	94 30       	cpi	r25, 0x04	; 4
     770:	09 f0       	breq	.+2      	; 0x774 <navigateMenu+0xe>
     772:	59 c0       	rjmp	.+178    	; 0x826 <navigateMenu+0xc0>
			switch (dir) {
     774:	81 30       	cpi	r24, 0x01	; 1
     776:	e1 f1       	breq	.+120    	; 0x7f0 <navigateMenu+0x8a>
     778:	60 f1       	brcs	.+88     	; 0x7d2 <navigateMenu+0x6c>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	c9 f0       	breq	.+50     	; 0x7b0 <navigateMenu+0x4a>
     77e:	83 30       	cpi	r24, 0x03	; 3
     780:	09 f0       	breq	.+2      	; 0x784 <navigateMenu+0x1e>
     782:	51 c0       	rjmp	.+162    	; 0x826 <navigateMenu+0xc0>
			case DOWN:
				if (currentMenu.childIndex < currentMenu.currentMenuItem->numChildren -1 ) {
     784:	e0 e5       	ldi	r30, 0x50	; 80
     786:	f2 e0       	ldi	r31, 0x02	; 2
     788:	92 81       	ldd	r25, Z+2	; 0x02
     78a:	49 2f       	mov	r20, r25
     78c:	50 e0       	ldi	r21, 0x00	; 0
     78e:	01 90       	ld	r0, Z+
     790:	f0 81       	ld	r31, Z
     792:	e0 2d       	mov	r30, r0
     794:	20 8d       	ldd	r18, Z+24	; 0x18
     796:	30 e0       	ldi	r19, 0x00	; 0
     798:	21 50       	subi	r18, 0x01	; 1
     79a:	31 09       	sbc	r19, r1
     79c:	42 17       	cp	r20, r18
     79e:	53 07       	cpc	r21, r19
     7a0:	24 f4       	brge	.+8      	; 0x7aa <navigateMenu+0x44>
					currentMenu.childIndex++;
     7a2:	9f 5f       	subi	r25, 0xFF	; 255
     7a4:	90 93 52 02 	sts	0x0252, r25	; 0x800252 <currentMenu+0x2>
     7a8:	3e c0       	rjmp	.+124    	; 0x826 <navigateMenu+0xc0>
				} else {
					currentMenu.childIndex = 0;
     7aa:	10 92 52 02 	sts	0x0252, r1	; 0x800252 <currentMenu+0x2>
     7ae:	3b c0       	rjmp	.+118    	; 0x826 <navigateMenu+0xc0>
				}
				break;
			case UP:
				if (currentMenu.childIndex > 0 ) {
     7b0:	90 91 52 02 	lds	r25, 0x0252	; 0x800252 <currentMenu+0x2>
     7b4:	99 23       	and	r25, r25
     7b6:	21 f0       	breq	.+8      	; 0x7c0 <navigateMenu+0x5a>
					currentMenu.childIndex--;
     7b8:	91 50       	subi	r25, 0x01	; 1
     7ba:	90 93 52 02 	sts	0x0252, r25	; 0x800252 <currentMenu+0x2>
     7be:	33 c0       	rjmp	.+102    	; 0x826 <navigateMenu+0xc0>
				} else {
					currentMenu.childIndex = currentMenu.currentMenuItem->numChildren-1;
     7c0:	e0 e5       	ldi	r30, 0x50	; 80
     7c2:	f2 e0       	ldi	r31, 0x02	; 2
     7c4:	a0 81       	ld	r26, Z
     7c6:	b1 81       	ldd	r27, Z+1	; 0x01
     7c8:	58 96       	adiw	r26, 0x18	; 24
     7ca:	9c 91       	ld	r25, X
     7cc:	91 50       	subi	r25, 0x01	; 1
     7ce:	92 83       	std	Z+2, r25	; 0x02
     7d0:	2a c0       	rjmp	.+84     	; 0x826 <navigateMenu+0xc0>
				}
				break;
			case LEFT:
				if (currentMenu.currentMenuItem->parent != NULL) {
     7d2:	e0 91 50 02 	lds	r30, 0x0250	; 0x800250 <currentMenu>
     7d6:	f0 91 51 02 	lds	r31, 0x0251	; 0x800251 <currentMenu+0x1>
     7da:	22 85       	ldd	r18, Z+10	; 0x0a
     7dc:	33 85       	ldd	r19, Z+11	; 0x0b
     7de:	21 15       	cp	r18, r1
     7e0:	31 05       	cpc	r19, r1
     7e2:	09 f1       	breq	.+66     	; 0x826 <navigateMenu+0xc0>
					currentMenu.currentMenuItem = currentMenu.currentMenuItem->parent;
     7e4:	e0 e5       	ldi	r30, 0x50	; 80
     7e6:	f2 e0       	ldi	r31, 0x02	; 2
     7e8:	31 83       	std	Z+1, r19	; 0x01
     7ea:	20 83       	st	Z, r18
					currentMenu.childIndex = 0;
     7ec:	12 82       	std	Z+2, r1	; 0x02
     7ee:	1b c0       	rjmp	.+54     	; 0x826 <navigateMenu+0xc0>
				}
				
				break;
			case RIGHT:
				if (currentMenu.currentMenuItem->children[currentMenu.childIndex]->children[0] != NULL) {
     7f0:	a0 e5       	ldi	r26, 0x50	; 80
     7f2:	b2 e0       	ldi	r27, 0x02	; 2
     7f4:	2d 91       	ld	r18, X+
     7f6:	3c 91       	ld	r19, X
     7f8:	11 97       	sbiw	r26, 0x01	; 1
     7fa:	12 96       	adiw	r26, 0x02	; 2
     7fc:	9c 91       	ld	r25, X
     7fe:	12 97       	sbiw	r26, 0x02	; 2
     800:	e9 2f       	mov	r30, r25
     802:	f0 e0       	ldi	r31, 0x00	; 0
     804:	36 96       	adiw	r30, 0x06	; 6
     806:	ee 0f       	add	r30, r30
     808:	ff 1f       	adc	r31, r31
     80a:	e2 0f       	add	r30, r18
     80c:	f3 1f       	adc	r31, r19
     80e:	01 90       	ld	r0, Z+
     810:	f0 81       	ld	r31, Z
     812:	e0 2d       	mov	r30, r0
     814:	24 85       	ldd	r18, Z+12	; 0x0c
     816:	35 85       	ldd	r19, Z+13	; 0x0d
     818:	23 2b       	or	r18, r19
     81a:	29 f0       	breq	.+10     	; 0x826 <navigateMenu+0xc0>
					currentMenu.currentMenuItem = currentMenu.currentMenuItem->children[currentMenu.childIndex];
     81c:	11 96       	adiw	r26, 0x01	; 1
     81e:	fc 93       	st	X, r31
     820:	ee 93       	st	-X, r30
					currentMenu.childIndex = 0;
     822:	12 96       	adiw	r26, 0x02	; 2
     824:	1c 92       	st	X, r1
				break;
		
		}
	}
	
	currentMenu.lastDir = dir;
     826:	80 93 53 02 	sts	0x0253, r24	; 0x800253 <currentMenu+0x3>
     82a:	08 95       	ret

0000082c <menu_printCurrentMenu>:
	
}

void menu_printCurrentMenu() {
     82c:	0f 93       	push	r16
     82e:	1f 93       	push	r17
     830:	cf 93       	push	r28
     832:	df 93       	push	r29
	oled_reset();
     834:	0e 94 60 04 	call	0x8c0	; 0x8c0 <oled_reset>
	oled_home();
     838:	0e 94 81 04 	call	0x902	; 0x902 <oled_home>
	oled_print(currentMenu.currentMenuItem->name);
     83c:	c0 e5       	ldi	r28, 0x50	; 80
     83e:	d2 e0       	ldi	r29, 0x02	; 2
     840:	88 81       	ld	r24, Y
     842:	99 81       	ldd	r25, Y+1	; 0x01
     844:	0e 94 bc 04 	call	0x978	; 0x978 <oled_print>
	
	for (int i = 0; i<currentMenu.currentMenuItem->numChildren; i++) {
     848:	e8 81       	ld	r30, Y
     84a:	f9 81       	ldd	r31, Y+1	; 0x01
     84c:	80 8d       	ldd	r24, Z+24	; 0x18
     84e:	88 23       	and	r24, r24
     850:	31 f1       	breq	.+76     	; 0x89e <menu_printCurrentMenu+0x72>
     852:	c0 e0       	ldi	r28, 0x00	; 0
     854:	d0 e0       	ldi	r29, 0x00	; 0
		oled_gotoLine(i+2);
		oled_print(((currentMenu.currentMenuItem->children)[i])->name);
     856:	00 e5       	ldi	r16, 0x50	; 80
     858:	12 e0       	ldi	r17, 0x02	; 2
	oled_reset();
	oled_home();
	oled_print(currentMenu.currentMenuItem->name);
	
	for (int i = 0; i<currentMenu.currentMenuItem->numChildren; i++) {
		oled_gotoLine(i+2);
     85a:	ce 01       	movw	r24, r28
     85c:	02 96       	adiw	r24, 0x02	; 2
     85e:	0e 94 b8 04 	call	0x970	; 0x970 <oled_gotoLine>
		oled_print(((currentMenu.currentMenuItem->children)[i])->name);
     862:	d8 01       	movw	r26, r16
     864:	8d 91       	ld	r24, X+
     866:	9c 91       	ld	r25, X
     868:	fe 01       	movw	r30, r28
     86a:	36 96       	adiw	r30, 0x06	; 6
     86c:	ee 0f       	add	r30, r30
     86e:	ff 1f       	adc	r31, r31
     870:	e8 0f       	add	r30, r24
     872:	f9 1f       	adc	r31, r25
     874:	80 81       	ld	r24, Z
     876:	91 81       	ldd	r25, Z+1	; 0x01
     878:	0e 94 bc 04 	call	0x978	; 0x978 <oled_print>
		if (currentMenu.childIndex == i) {
     87c:	f8 01       	movw	r30, r16
     87e:	82 81       	ldd	r24, Z+2	; 0x02
     880:	90 e0       	ldi	r25, 0x00	; 0
     882:	8c 17       	cp	r24, r28
     884:	9d 07       	cpc	r25, r29
     886:	11 f4       	brne	.+4      	; 0x88c <menu_printCurrentMenu+0x60>
			oled_print_arrow();
     888:	0e 94 76 04 	call	0x8ec	; 0x8ec <oled_print_arrow>
void menu_printCurrentMenu() {
	oled_reset();
	oled_home();
	oled_print(currentMenu.currentMenuItem->name);
	
	for (int i = 0; i<currentMenu.currentMenuItem->numChildren; i++) {
     88c:	21 96       	adiw	r28, 0x01	; 1
     88e:	d8 01       	movw	r26, r16
     890:	ed 91       	ld	r30, X+
     892:	fc 91       	ld	r31, X
     894:	80 8d       	ldd	r24, Z+24	; 0x18
     896:	90 e0       	ldi	r25, 0x00	; 0
     898:	c8 17       	cp	r28, r24
     89a:	d9 07       	cpc	r29, r25
     89c:	f4 f2       	brlt	.-68     	; 0x85a <menu_printCurrentMenu+0x2e>
		if (currentMenu.childIndex == i) {
			oled_print_arrow();
		}
	}
	
     89e:	df 91       	pop	r29
     8a0:	cf 91       	pop	r28
     8a2:	1f 91       	pop	r17
     8a4:	0f 91       	pop	r16
     8a6:	08 95       	ret

000008a8 <oled_pos>:
void oled_clearLine(uint8_t page){
	oled_pos(page, 0);
	for (int col = 0; col < 128; col++ ) {
		oled_write_d(0x00);
	}
}
     8a8:	80 55       	subi	r24, 0x50	; 80
     8aa:	e0 e0       	ldi	r30, 0x00	; 0
     8ac:	f0 e1       	ldi	r31, 0x10	; 16
     8ae:	80 83       	st	Z, r24
     8b0:	86 2f       	mov	r24, r22
     8b2:	8f 70       	andi	r24, 0x0F	; 15
     8b4:	80 83       	st	Z, r24
     8b6:	62 95       	swap	r22
     8b8:	6f 70       	andi	r22, 0x0F	; 15
     8ba:	60 61       	ori	r22, 0x10	; 16
     8bc:	60 83       	st	Z, r22
     8be:	08 95       	ret

000008c0 <oled_reset>:
     8c0:	1f 93       	push	r17
     8c2:	cf 93       	push	r28
     8c4:	df 93       	push	r29
     8c6:	10 e0       	ldi	r17, 0x00	; 0
     8c8:	c0 e0       	ldi	r28, 0x00	; 0
     8ca:	d2 e1       	ldi	r29, 0x12	; 18
     8cc:	60 e0       	ldi	r22, 0x00	; 0
     8ce:	81 2f       	mov	r24, r17
     8d0:	0e 94 54 04 	call	0x8a8	; 0x8a8 <oled_pos>
     8d4:	80 e8       	ldi	r24, 0x80	; 128
     8d6:	90 e0       	ldi	r25, 0x00	; 0
     8d8:	18 82       	st	Y, r1
     8da:	01 97       	sbiw	r24, 0x01	; 1
     8dc:	e9 f7       	brne	.-6      	; 0x8d8 <oled_reset+0x18>
     8de:	1f 5f       	subi	r17, 0xFF	; 255
     8e0:	18 30       	cpi	r17, 0x08	; 8
     8e2:	a1 f7       	brne	.-24     	; 0x8cc <oled_reset+0xc>
     8e4:	df 91       	pop	r29
     8e6:	cf 91       	pop	r28
     8e8:	1f 91       	pop	r17
     8ea:	08 95       	ret

000008ec <oled_print_arrow>:
     8ec:	e0 e0       	ldi	r30, 0x00	; 0
     8ee:	f2 e1       	ldi	r31, 0x12	; 18
     8f0:	88 e1       	ldi	r24, 0x18	; 24
     8f2:	80 83       	st	Z, r24
     8f4:	9c e3       	ldi	r25, 0x3C	; 60
     8f6:	90 83       	st	Z, r25
     8f8:	9e e7       	ldi	r25, 0x7E	; 126
     8fa:	90 83       	st	Z, r25
     8fc:	80 83       	st	Z, r24
     8fe:	80 83       	st	Z, r24
     900:	08 95       	ret

00000902 <oled_home>:
     902:	60 e0       	ldi	r22, 0x00	; 0
     904:	80 e0       	ldi	r24, 0x00	; 0
     906:	0e 94 54 04 	call	0x8a8	; 0x8a8 <oled_pos>
     90a:	08 95       	ret

0000090c <oled_init>:
     90c:	e0 e0       	ldi	r30, 0x00	; 0
     90e:	f0 e1       	ldi	r31, 0x10	; 16
     910:	8e ea       	ldi	r24, 0xAE	; 174
     912:	80 83       	st	Z, r24
     914:	81 ea       	ldi	r24, 0xA1	; 161
     916:	80 83       	st	Z, r24
     918:	8a ed       	ldi	r24, 0xDA	; 218
     91a:	80 83       	st	Z, r24
     91c:	82 e1       	ldi	r24, 0x12	; 18
     91e:	80 83       	st	Z, r24
     920:	88 ec       	ldi	r24, 0xC8	; 200
     922:	80 83       	st	Z, r24
     924:	88 ea       	ldi	r24, 0xA8	; 168
     926:	80 83       	st	Z, r24
     928:	8f e3       	ldi	r24, 0x3F	; 63
     92a:	80 83       	st	Z, r24
     92c:	85 ed       	ldi	r24, 0xD5	; 213
     92e:	80 83       	st	Z, r24
     930:	80 e8       	ldi	r24, 0x80	; 128
     932:	80 83       	st	Z, r24
     934:	81 e8       	ldi	r24, 0x81	; 129
     936:	80 83       	st	Z, r24
     938:	80 e5       	ldi	r24, 0x50	; 80
     93a:	80 83       	st	Z, r24
     93c:	89 ed       	ldi	r24, 0xD9	; 217
     93e:	80 83       	st	Z, r24
     940:	81 e2       	ldi	r24, 0x21	; 33
     942:	80 83       	st	Z, r24
     944:	80 e2       	ldi	r24, 0x20	; 32
     946:	80 83       	st	Z, r24
     948:	82 e0       	ldi	r24, 0x02	; 2
     94a:	80 83       	st	Z, r24
     94c:	8b ed       	ldi	r24, 0xDB	; 219
     94e:	80 83       	st	Z, r24
     950:	80 e3       	ldi	r24, 0x30	; 48
     952:	80 83       	st	Z, r24
     954:	8d ea       	ldi	r24, 0xAD	; 173
     956:	80 83       	st	Z, r24
     958:	10 82       	st	Z, r1
     95a:	84 ea       	ldi	r24, 0xA4	; 164
     95c:	80 83       	st	Z, r24
     95e:	86 ea       	ldi	r24, 0xA6	; 166
     960:	80 83       	st	Z, r24
     962:	8f ea       	ldi	r24, 0xAF	; 175
     964:	80 83       	st	Z, r24
     966:	0e 94 60 04 	call	0x8c0	; 0x8c0 <oled_reset>
     96a:	0e 94 81 04 	call	0x902	; 0x902 <oled_home>
     96e:	08 95       	ret

00000970 <oled_gotoLine>:
     970:	60 e0       	ldi	r22, 0x00	; 0
     972:	0e 94 54 04 	call	0x8a8	; 0x8a8 <oled_pos>
     976:	08 95       	ret

00000978 <oled_print>:

void oled_print(char* character){
     978:	cf 93       	push	r28
     97a:	df 93       	push	r29
     97c:	dc 01       	movw	r26, r24
	while (*character != '\0')
     97e:	8c 91       	ld	r24, X
     980:	81 11       	cpse	r24, r1
     982:	1a c0       	rjmp	.+52     	; 0x9b8 <oled_print+0x40>
     984:	1e c0       	rjmp	.+60     	; 0x9c2 <oled_print+0x4a>
	{
		for (int col = 0; col < 8; col++ ) {
			oled_write_d(pgm_read_byte(&(font8[*character-ASCII_SPACE][col])));
     986:	ec 91       	ld	r30, X
     988:	f0 e0       	ldi	r31, 0x00	; 0
     98a:	b0 97       	sbiw	r30, 0x20	; 32
     98c:	ee 0f       	add	r30, r30
     98e:	ff 1f       	adc	r31, r31
     990:	ee 0f       	add	r30, r30
     992:	ff 1f       	adc	r31, r31
     994:	ee 0f       	add	r30, r30
     996:	ff 1f       	adc	r31, r31
     998:	e2 0f       	add	r30, r18
     99a:	f3 1f       	adc	r31, r19
     99c:	e2 56       	subi	r30, 0x62	; 98
     99e:	ff 4f       	sbci	r31, 0xFF	; 255
     9a0:	e4 91       	lpm	r30, Z
	volatile char *ext_mem = (char *) OLED_COMMAND_BASE_ADDRESS;
	*ext_mem = data;
}
void oled_write_d(uint8_t data) {
	volatile char *ext_mem = (char *) OLED_DATA_BASE_ADDRESS;
	*ext_mem = data;
     9a2:	e8 83       	st	Y, r30
}

void oled_print(char* character){
	while (*character != '\0')
	{
		for (int col = 0; col < 8; col++ ) {
     9a4:	2f 5f       	subi	r18, 0xFF	; 255
     9a6:	3f 4f       	sbci	r19, 0xFF	; 255
     9a8:	28 30       	cpi	r18, 0x08	; 8
     9aa:	31 05       	cpc	r19, r1
     9ac:	61 f7       	brne	.-40     	; 0x986 <oled_print+0xe>
			oled_write_d(pgm_read_byte(&(font8[*character-ASCII_SPACE][col])));
		}
		character++;
     9ae:	11 96       	adiw	r26, 0x01	; 1
		oled_write_d(0x00);
	}
}

void oled_print(char* character){
	while (*character != '\0')
     9b0:	8c 91       	ld	r24, X
     9b2:	81 11       	cpse	r24, r1
     9b4:	03 c0       	rjmp	.+6      	; 0x9bc <oled_print+0x44>
     9b6:	05 c0       	rjmp	.+10     	; 0x9c2 <oled_print+0x4a>
	volatile char *ext_mem = (char *) OLED_COMMAND_BASE_ADDRESS;
	*ext_mem = data;
}
void oled_write_d(uint8_t data) {
	volatile char *ext_mem = (char *) OLED_DATA_BASE_ADDRESS;
	*ext_mem = data;
     9b8:	c0 e0       	ldi	r28, 0x00	; 0
     9ba:	d2 e1       	ldi	r29, 0x12	; 18
	for (int col = 0; col < 128; col++ ) {
		oled_write_d(0x00);
	}
}

void oled_print(char* character){
     9bc:	20 e0       	ldi	r18, 0x00	; 0
     9be:	30 e0       	ldi	r19, 0x00	; 0
     9c0:	e2 cf       	rjmp	.-60     	; 0x986 <oled_print+0xe>
			oled_write_d(pgm_read_byte(&(font8[*character-ASCII_SPACE][col])));
		}
		character++;
	}
	
}
     9c2:	df 91       	pop	r29
     9c4:	cf 91       	pop	r28
     9c6:	08 95       	ret

000009c8 <setupInit>:
#include "joystick.h"
#include "setup.h"
#include "oled.h"

	void setupInit(void){
	xmem_init();
     9c8:	0e 94 3c 05 	call	0xa78	; 0xa78 <xmem_init>
	USART_init(MYUBRR);
     9cc:	8f e1       	ldi	r24, 0x1F	; 31
     9ce:	90 e0       	ldi	r25, 0x00	; 0
     9d0:	0e 94 2b 05 	call	0xa56	; 0xa56 <USART_init>
	adcInit();
     9d4:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <adcInit>
	joystickInit();
     9d8:	0e 94 55 02 	call	0x4aa	; 0x4aa <joystickInit>
	touchButton_init();
     9dc:	0e 94 01 05 	call	0xa02	; 0xa02 <touchButton_init>
	oled_init();
     9e0:	0e 94 86 04 	call	0x90c	; 0x90c <oled_init>
     9e4:	08 95       	ret

000009e6 <slider_readPosition>:
#define LEFT_POS_CHANNEL 2
#define RIGHT_POS_CHANNEL 3
#include "slider.h"
#include "adc.h"
void slider_readPosition(slider_position_t * pos) {
     9e6:	cf 93       	push	r28
     9e8:	df 93       	push	r29
     9ea:	ec 01       	movw	r28, r24
	pos->left_pos = readAdc(LEFT_POS_CHANNEL);
     9ec:	82 e0       	ldi	r24, 0x02	; 2
     9ee:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <readAdc>
     9f2:	88 83       	st	Y, r24
	pos->right_pos = readAdc(RIGHT_POS_CHANNEL);
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <readAdc>
     9fa:	89 83       	std	Y+1, r24	; 0x01
     9fc:	df 91       	pop	r29
     9fe:	cf 91       	pop	r28
     a00:	08 95       	ret

00000a02 <touchButton_init>:

#include "touchButton.h"
#include "adc.h"

void touchButton_init() {
	DDRB &= ~(1 << BUTTON_LEFT | 1 << BUTTON_RIGHT);
     a02:	36 b3       	in	r19, 0x16	; 22
     a04:	26 b3       	in	r18, 0x16	; 22
     a06:	47 b3       	in	r20, 0x17	; 23
     a08:	31 70       	andi	r19, 0x01	; 1
     a0a:	81 e0       	ldi	r24, 0x01	; 1
     a0c:	90 e0       	ldi	r25, 0x00	; 0
     a0e:	bc 01       	movw	r22, r24
     a10:	02 c0       	rjmp	.+4      	; 0xa16 <touchButton_init+0x14>
     a12:	66 0f       	add	r22, r22
     a14:	77 1f       	adc	r23, r23
     a16:	3a 95       	dec	r19
     a18:	e2 f7       	brpl	.-8      	; 0xa12 <touchButton_init+0x10>
     a1a:	22 70       	andi	r18, 0x02	; 2
     a1c:	02 c0       	rjmp	.+4      	; 0xa22 <touchButton_init+0x20>
     a1e:	88 0f       	add	r24, r24
     a20:	99 1f       	adc	r25, r25
     a22:	2a 95       	dec	r18
     a24:	e2 f7       	brpl	.-8      	; 0xa1e <touchButton_init+0x1c>
     a26:	86 2b       	or	r24, r22
     a28:	97 2b       	or	r25, r23
     a2a:	80 95       	com	r24
     a2c:	90 95       	com	r25
     a2e:	84 23       	and	r24, r20
     a30:	87 bb       	out	0x17, r24	; 23
     a32:	08 95       	ret

00000a34 <touchButton_readButtons>:
}
touchButton_readButtons(buttonValues_t * buttons) {
     a34:	fc 01       	movw	r30, r24
	buttons->left_button = !!(BUTTON_LEFT);
     a36:	96 b3       	in	r25, 0x16	; 22
     a38:	91 70       	andi	r25, 0x01	; 1
     a3a:	90 83       	st	Z, r25
	buttons->right_button = !!(BUTTON_RIGHT);
     a3c:	96 b3       	in	r25, 0x16	; 22
     a3e:	96 95       	lsr	r25
     a40:	91 70       	andi	r25, 0x01	; 1
     a42:	91 83       	std	Z+1, r25	; 0x01
     a44:	08 95       	ret

00000a46 <USART_transmitChar>:
	uart = fdevopen(&USART_transmitChar, &USART_receiveChar);
}

void USART_transmitChar(unsigned char data) {
	/* wait for empty transmit buffer */
	while ( ! ( UCSR0A & (1<<UDRE0)))
     a46:	5d 9b       	sbis	0x0b, 5	; 11
     a48:	fe cf       	rjmp	.-4      	; 0xa46 <USART_transmitChar>
		;
		
	/* Put data in buffer, send data */
	UDR0 = data;
     a4a:	8c b9       	out	0x0c, r24	; 12
     a4c:	08 95       	ret

00000a4e <USART_receiveChar>:
}

unsigned char USART_receiveChar( void ) {
	/* wait for data to be received*/
	while ( !(UCSR0A & (1<<RXC0) ) ) 
     a4e:	5f 9b       	sbis	0x0b, 7	; 11
     a50:	fe cf       	rjmp	.-4      	; 0xa4e <USART_receiveChar>
		;
	
	return UDR0;
     a52:	8c b1       	in	r24, 0x0c	; 12
     a54:	08 95       	ret

00000a56 <USART_init>:

#include "uart.h"
FILE *uart ;
void USART_init(unsigned int ubrr) {
	
	UBRR0H = (unsigned char) (ubrr >> 8);
     a56:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char) (ubrr);
     a58:	89 b9       	out	0x09, r24	; 9
	
	/*Enable receiver and transmitter*/
	
	UCSR0B = (1<<RXEN0) | (1 <<TXEN0);
     a5a:	88 e1       	ldi	r24, 0x18	; 24
     a5c:	8a b9       	out	0x0a, r24	; 10
	
	/* SET FRAME FORMAT: 8data, 2 stop bit */
	UCSR0C = (1 << URSEL0) | (1<<USBS0) | (3<<UCSZ00);
     a5e:	8e e8       	ldi	r24, 0x8E	; 142
     a60:	80 bd       	out	0x20, r24	; 32
	
	uart = fdevopen(&USART_transmitChar, &USART_receiveChar);
     a62:	67 e2       	ldi	r22, 0x27	; 39
     a64:	75 e0       	ldi	r23, 0x05	; 5
     a66:	83 e2       	ldi	r24, 0x23	; 35
     a68:	95 e0       	ldi	r25, 0x05	; 5
     a6a:	0e 94 48 09 	call	0x1290	; 0x1290 <fdevopen>
     a6e:	90 93 55 02 	sts	0x0255, r25	; 0x800255 <uart+0x1>
     a72:	80 93 54 02 	sts	0x0254, r24	; 0x800254 <uart>
     a76:	08 95       	ret

00000a78 <xmem_init>:
#define BASE_ADDRESS 0x1000;
#include <avr/io.h>
#include "xmem.h"

void xmem_init(void) {
	MCUCR |= (1<<SRE);
     a78:	85 b7       	in	r24, 0x35	; 53
     a7a:	80 68       	ori	r24, 0x80	; 128
     a7c:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1<<XMM0);
     a7e:	80 b7       	in	r24, 0x30	; 48
     a80:	88 60       	ori	r24, 0x08	; 8
     a82:	80 bf       	out	0x30, r24	; 48
     a84:	08 95       	ret
     a86:	0e 94 ca 06 	call	0xd94	; 0xd94 <__fp_pscA>
     a8a:	60 f0       	brcs	.+24     	; 0xaa4 <xmem_init+0x2c>
     a8c:	80 e8       	ldi	r24, 0x80	; 128
     a8e:	91 e0       	ldi	r25, 0x01	; 1
     a90:	09 f4       	brne	.+2      	; 0xa94 <xmem_init+0x1c>
     a92:	9e ef       	ldi	r25, 0xFE	; 254
     a94:	0e 94 d1 06 	call	0xda2	; 0xda2 <__fp_pscB>
     a98:	28 f0       	brcs	.+10     	; 0xaa4 <xmem_init+0x2c>
     a9a:	40 e8       	ldi	r20, 0x80	; 128
     a9c:	51 e0       	ldi	r21, 0x01	; 1
     a9e:	71 f4       	brne	.+28     	; 0xabc <atan2+0x10>
     aa0:	5e ef       	ldi	r21, 0xFE	; 254
     aa2:	0c c0       	rjmp	.+24     	; 0xabc <atan2+0x10>
     aa4:	0c 94 a0 06 	jmp	0xd40	; 0xd40 <__fp_nan>
     aa8:	0c 94 0b 07 	jmp	0xe16	; 0xe16 <__fp_zero>

00000aac <atan2>:
     aac:	e9 2f       	mov	r30, r25
     aae:	e0 78       	andi	r30, 0x80	; 128
     ab0:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <__fp_split3>
     ab4:	40 f3       	brcs	.-48     	; 0xa86 <xmem_init+0xe>
     ab6:	09 2e       	mov	r0, r25
     ab8:	05 2a       	or	r0, r21
     aba:	b1 f3       	breq	.-20     	; 0xaa8 <xmem_init+0x30>
     abc:	26 17       	cp	r18, r22
     abe:	37 07       	cpc	r19, r23
     ac0:	48 07       	cpc	r20, r24
     ac2:	59 07       	cpc	r21, r25
     ac4:	38 f0       	brcs	.+14     	; 0xad4 <atan2+0x28>
     ac6:	0e 2e       	mov	r0, r30
     ac8:	07 f8       	bld	r0, 7
     aca:	e0 25       	eor	r30, r0
     acc:	69 f0       	breq	.+26     	; 0xae8 <atan2+0x3c>
     ace:	e0 25       	eor	r30, r0
     ad0:	e0 64       	ori	r30, 0x40	; 64
     ad2:	0a c0       	rjmp	.+20     	; 0xae8 <atan2+0x3c>
     ad4:	ef 63       	ori	r30, 0x3F	; 63
     ad6:	07 f8       	bld	r0, 7
     ad8:	00 94       	com	r0
     ada:	07 fa       	bst	r0, 7
     adc:	db 01       	movw	r26, r22
     ade:	b9 01       	movw	r22, r18
     ae0:	9d 01       	movw	r18, r26
     ae2:	dc 01       	movw	r26, r24
     ae4:	ca 01       	movw	r24, r20
     ae6:	ad 01       	movw	r20, r26
     ae8:	ef 93       	push	r30
     aea:	0e 94 cc 05 	call	0xb98	; 0xb98 <__divsf3_pse>
     aee:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <__fp_round>
     af2:	0e 94 86 05 	call	0xb0c	; 0xb0c <atan>
     af6:	5f 91       	pop	r21
     af8:	55 23       	and	r21, r21
     afa:	39 f0       	breq	.+14     	; 0xb0a <atan2+0x5e>
     afc:	2b ed       	ldi	r18, 0xDB	; 219
     afe:	3f e0       	ldi	r19, 0x0F	; 15
     b00:	49 e4       	ldi	r20, 0x49	; 73
     b02:	50 fd       	sbrc	r21, 0
     b04:	49 ec       	ldi	r20, 0xC9	; 201
     b06:	0c 94 8c 07 	jmp	0xf18	; 0xf18 <__addsf3>
     b0a:	08 95       	ret

00000b0c <atan>:
     b0c:	df 93       	push	r29
     b0e:	dd 27       	eor	r29, r29
     b10:	b9 2f       	mov	r27, r25
     b12:	bf 77       	andi	r27, 0x7F	; 127
     b14:	40 e8       	ldi	r20, 0x80	; 128
     b16:	5f e3       	ldi	r21, 0x3F	; 63
     b18:	16 16       	cp	r1, r22
     b1a:	17 06       	cpc	r1, r23
     b1c:	48 07       	cpc	r20, r24
     b1e:	5b 07       	cpc	r21, r27
     b20:	18 f4       	brcc	.+6      	; 0xb28 <atan+0x1c>
     b22:	d9 2f       	mov	r29, r25
     b24:	0e 94 12 07 	call	0xe24	; 0xe24 <inverse>
     b28:	9f 93       	push	r25
     b2a:	8f 93       	push	r24
     b2c:	7f 93       	push	r23
     b2e:	6f 93       	push	r22
     b30:	0e 94 87 07 	call	0xf0e	; 0xf0e <square>
     b34:	e0 e7       	ldi	r30, 0x70	; 112
     b36:	f0 e0       	ldi	r31, 0x00	; 0
     b38:	0e 94 a3 06 	call	0xd46	; 0xd46 <__fp_powser>
     b3c:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <__fp_round>
     b40:	2f 91       	pop	r18
     b42:	3f 91       	pop	r19
     b44:	4f 91       	pop	r20
     b46:	5f 91       	pop	r21
     b48:	0e 94 2d 07 	call	0xe5a	; 0xe5a <__mulsf3x>
     b4c:	dd 23       	and	r29, r29
     b4e:	51 f0       	breq	.+20     	; 0xb64 <atan+0x58>
     b50:	90 58       	subi	r25, 0x80	; 128
     b52:	a2 ea       	ldi	r26, 0xA2	; 162
     b54:	2a ed       	ldi	r18, 0xDA	; 218
     b56:	3f e0       	ldi	r19, 0x0F	; 15
     b58:	49 ec       	ldi	r20, 0xC9	; 201
     b5a:	5f e3       	ldi	r21, 0x3F	; 63
     b5c:	d0 78       	andi	r29, 0x80	; 128
     b5e:	5d 27       	eor	r21, r29
     b60:	0e 94 a3 07 	call	0xf46	; 0xf46 <__addsf3x>
     b64:	df 91       	pop	r29
     b66:	0c 94 d8 06 	jmp	0xdb0	; 0xdb0 <__fp_round>

00000b6a <__divsf3>:
     b6a:	0e 94 c9 05 	call	0xb92	; 0xb92 <__divsf3x>
     b6e:	0c 94 d8 06 	jmp	0xdb0	; 0xdb0 <__fp_round>
     b72:	0e 94 d1 06 	call	0xda2	; 0xda2 <__fp_pscB>
     b76:	58 f0       	brcs	.+22     	; 0xb8e <__divsf3+0x24>
     b78:	0e 94 ca 06 	call	0xd94	; 0xd94 <__fp_pscA>
     b7c:	40 f0       	brcs	.+16     	; 0xb8e <__divsf3+0x24>
     b7e:	29 f4       	brne	.+10     	; 0xb8a <__divsf3+0x20>
     b80:	5f 3f       	cpi	r21, 0xFF	; 255
     b82:	29 f0       	breq	.+10     	; 0xb8e <__divsf3+0x24>
     b84:	0c 94 9a 06 	jmp	0xd34	; 0xd34 <__fp_inf>
     b88:	51 11       	cpse	r21, r1
     b8a:	0c 94 0c 07 	jmp	0xe18	; 0xe18 <__fp_szero>
     b8e:	0c 94 a0 06 	jmp	0xd40	; 0xd40 <__fp_nan>

00000b92 <__divsf3x>:
     b92:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <__fp_split3>
     b96:	68 f3       	brcs	.-38     	; 0xb72 <__divsf3+0x8>

00000b98 <__divsf3_pse>:
     b98:	99 23       	and	r25, r25
     b9a:	b1 f3       	breq	.-20     	; 0xb88 <__divsf3+0x1e>
     b9c:	55 23       	and	r21, r21
     b9e:	91 f3       	breq	.-28     	; 0xb84 <__divsf3+0x1a>
     ba0:	95 1b       	sub	r25, r21
     ba2:	55 0b       	sbc	r21, r21
     ba4:	bb 27       	eor	r27, r27
     ba6:	aa 27       	eor	r26, r26
     ba8:	62 17       	cp	r22, r18
     baa:	73 07       	cpc	r23, r19
     bac:	84 07       	cpc	r24, r20
     bae:	38 f0       	brcs	.+14     	; 0xbbe <__divsf3_pse+0x26>
     bb0:	9f 5f       	subi	r25, 0xFF	; 255
     bb2:	5f 4f       	sbci	r21, 0xFF	; 255
     bb4:	22 0f       	add	r18, r18
     bb6:	33 1f       	adc	r19, r19
     bb8:	44 1f       	adc	r20, r20
     bba:	aa 1f       	adc	r26, r26
     bbc:	a9 f3       	breq	.-22     	; 0xba8 <__divsf3_pse+0x10>
     bbe:	35 d0       	rcall	.+106    	; 0xc2a <__divsf3_pse+0x92>
     bc0:	0e 2e       	mov	r0, r30
     bc2:	3a f0       	brmi	.+14     	; 0xbd2 <__divsf3_pse+0x3a>
     bc4:	e0 e8       	ldi	r30, 0x80	; 128
     bc6:	32 d0       	rcall	.+100    	; 0xc2c <__divsf3_pse+0x94>
     bc8:	91 50       	subi	r25, 0x01	; 1
     bca:	50 40       	sbci	r21, 0x00	; 0
     bcc:	e6 95       	lsr	r30
     bce:	00 1c       	adc	r0, r0
     bd0:	ca f7       	brpl	.-14     	; 0xbc4 <__divsf3_pse+0x2c>
     bd2:	2b d0       	rcall	.+86     	; 0xc2a <__divsf3_pse+0x92>
     bd4:	fe 2f       	mov	r31, r30
     bd6:	29 d0       	rcall	.+82     	; 0xc2a <__divsf3_pse+0x92>
     bd8:	66 0f       	add	r22, r22
     bda:	77 1f       	adc	r23, r23
     bdc:	88 1f       	adc	r24, r24
     bde:	bb 1f       	adc	r27, r27
     be0:	26 17       	cp	r18, r22
     be2:	37 07       	cpc	r19, r23
     be4:	48 07       	cpc	r20, r24
     be6:	ab 07       	cpc	r26, r27
     be8:	b0 e8       	ldi	r27, 0x80	; 128
     bea:	09 f0       	breq	.+2      	; 0xbee <__divsf3_pse+0x56>
     bec:	bb 0b       	sbc	r27, r27
     bee:	80 2d       	mov	r24, r0
     bf0:	bf 01       	movw	r22, r30
     bf2:	ff 27       	eor	r31, r31
     bf4:	93 58       	subi	r25, 0x83	; 131
     bf6:	5f 4f       	sbci	r21, 0xFF	; 255
     bf8:	3a f0       	brmi	.+14     	; 0xc08 <__divsf3_pse+0x70>
     bfa:	9e 3f       	cpi	r25, 0xFE	; 254
     bfc:	51 05       	cpc	r21, r1
     bfe:	78 f0       	brcs	.+30     	; 0xc1e <__divsf3_pse+0x86>
     c00:	0c 94 9a 06 	jmp	0xd34	; 0xd34 <__fp_inf>
     c04:	0c 94 0c 07 	jmp	0xe18	; 0xe18 <__fp_szero>
     c08:	5f 3f       	cpi	r21, 0xFF	; 255
     c0a:	e4 f3       	brlt	.-8      	; 0xc04 <__divsf3_pse+0x6c>
     c0c:	98 3e       	cpi	r25, 0xE8	; 232
     c0e:	d4 f3       	brlt	.-12     	; 0xc04 <__divsf3_pse+0x6c>
     c10:	86 95       	lsr	r24
     c12:	77 95       	ror	r23
     c14:	67 95       	ror	r22
     c16:	b7 95       	ror	r27
     c18:	f7 95       	ror	r31
     c1a:	9f 5f       	subi	r25, 0xFF	; 255
     c1c:	c9 f7       	brne	.-14     	; 0xc10 <__divsf3_pse+0x78>
     c1e:	88 0f       	add	r24, r24
     c20:	91 1d       	adc	r25, r1
     c22:	96 95       	lsr	r25
     c24:	87 95       	ror	r24
     c26:	97 f9       	bld	r25, 7
     c28:	08 95       	ret
     c2a:	e1 e0       	ldi	r30, 0x01	; 1
     c2c:	66 0f       	add	r22, r22
     c2e:	77 1f       	adc	r23, r23
     c30:	88 1f       	adc	r24, r24
     c32:	bb 1f       	adc	r27, r27
     c34:	62 17       	cp	r22, r18
     c36:	73 07       	cpc	r23, r19
     c38:	84 07       	cpc	r24, r20
     c3a:	ba 07       	cpc	r27, r26
     c3c:	20 f0       	brcs	.+8      	; 0xc46 <__divsf3_pse+0xae>
     c3e:	62 1b       	sub	r22, r18
     c40:	73 0b       	sbc	r23, r19
     c42:	84 0b       	sbc	r24, r20
     c44:	ba 0b       	sbc	r27, r26
     c46:	ee 1f       	adc	r30, r30
     c48:	88 f7       	brcc	.-30     	; 0xc2c <__divsf3_pse+0x94>
     c4a:	e0 95       	com	r30
     c4c:	08 95       	ret

00000c4e <__fixsfsi>:
     c4e:	0e 94 2e 06 	call	0xc5c	; 0xc5c <__fixunssfsi>
     c52:	68 94       	set
     c54:	b1 11       	cpse	r27, r1
     c56:	0c 94 0c 07 	jmp	0xe18	; 0xe18 <__fp_szero>
     c5a:	08 95       	ret

00000c5c <__fixunssfsi>:
     c5c:	0e 94 f1 06 	call	0xde2	; 0xde2 <__fp_splitA>
     c60:	88 f0       	brcs	.+34     	; 0xc84 <__fixunssfsi+0x28>
     c62:	9f 57       	subi	r25, 0x7F	; 127
     c64:	98 f0       	brcs	.+38     	; 0xc8c <__fixunssfsi+0x30>
     c66:	b9 2f       	mov	r27, r25
     c68:	99 27       	eor	r25, r25
     c6a:	b7 51       	subi	r27, 0x17	; 23
     c6c:	b0 f0       	brcs	.+44     	; 0xc9a <__fixunssfsi+0x3e>
     c6e:	e1 f0       	breq	.+56     	; 0xca8 <__fixunssfsi+0x4c>
     c70:	66 0f       	add	r22, r22
     c72:	77 1f       	adc	r23, r23
     c74:	88 1f       	adc	r24, r24
     c76:	99 1f       	adc	r25, r25
     c78:	1a f0       	brmi	.+6      	; 0xc80 <__fixunssfsi+0x24>
     c7a:	ba 95       	dec	r27
     c7c:	c9 f7       	brne	.-14     	; 0xc70 <__fixunssfsi+0x14>
     c7e:	14 c0       	rjmp	.+40     	; 0xca8 <__fixunssfsi+0x4c>
     c80:	b1 30       	cpi	r27, 0x01	; 1
     c82:	91 f0       	breq	.+36     	; 0xca8 <__fixunssfsi+0x4c>
     c84:	0e 94 0b 07 	call	0xe16	; 0xe16 <__fp_zero>
     c88:	b1 e0       	ldi	r27, 0x01	; 1
     c8a:	08 95       	ret
     c8c:	0c 94 0b 07 	jmp	0xe16	; 0xe16 <__fp_zero>
     c90:	67 2f       	mov	r22, r23
     c92:	78 2f       	mov	r23, r24
     c94:	88 27       	eor	r24, r24
     c96:	b8 5f       	subi	r27, 0xF8	; 248
     c98:	39 f0       	breq	.+14     	; 0xca8 <__fixunssfsi+0x4c>
     c9a:	b9 3f       	cpi	r27, 0xF9	; 249
     c9c:	cc f3       	brlt	.-14     	; 0xc90 <__fixunssfsi+0x34>
     c9e:	86 95       	lsr	r24
     ca0:	77 95       	ror	r23
     ca2:	67 95       	ror	r22
     ca4:	b3 95       	inc	r27
     ca6:	d9 f7       	brne	.-10     	; 0xc9e <__fixunssfsi+0x42>
     ca8:	3e f4       	brtc	.+14     	; 0xcb8 <__fixunssfsi+0x5c>
     caa:	90 95       	com	r25
     cac:	80 95       	com	r24
     cae:	70 95       	com	r23
     cb0:	61 95       	neg	r22
     cb2:	7f 4f       	sbci	r23, 0xFF	; 255
     cb4:	8f 4f       	sbci	r24, 0xFF	; 255
     cb6:	9f 4f       	sbci	r25, 0xFF	; 255
     cb8:	08 95       	ret

00000cba <__floatunsisf>:
     cba:	e8 94       	clt
     cbc:	09 c0       	rjmp	.+18     	; 0xcd0 <__floatsisf+0x12>

00000cbe <__floatsisf>:
     cbe:	97 fb       	bst	r25, 7
     cc0:	3e f4       	brtc	.+14     	; 0xcd0 <__floatsisf+0x12>
     cc2:	90 95       	com	r25
     cc4:	80 95       	com	r24
     cc6:	70 95       	com	r23
     cc8:	61 95       	neg	r22
     cca:	7f 4f       	sbci	r23, 0xFF	; 255
     ccc:	8f 4f       	sbci	r24, 0xFF	; 255
     cce:	9f 4f       	sbci	r25, 0xFF	; 255
     cd0:	99 23       	and	r25, r25
     cd2:	a9 f0       	breq	.+42     	; 0xcfe <__floatsisf+0x40>
     cd4:	f9 2f       	mov	r31, r25
     cd6:	96 e9       	ldi	r25, 0x96	; 150
     cd8:	bb 27       	eor	r27, r27
     cda:	93 95       	inc	r25
     cdc:	f6 95       	lsr	r31
     cde:	87 95       	ror	r24
     ce0:	77 95       	ror	r23
     ce2:	67 95       	ror	r22
     ce4:	b7 95       	ror	r27
     ce6:	f1 11       	cpse	r31, r1
     ce8:	f8 cf       	rjmp	.-16     	; 0xcda <__floatsisf+0x1c>
     cea:	fa f4       	brpl	.+62     	; 0xd2a <__floatsisf+0x6c>
     cec:	bb 0f       	add	r27, r27
     cee:	11 f4       	brne	.+4      	; 0xcf4 <__floatsisf+0x36>
     cf0:	60 ff       	sbrs	r22, 0
     cf2:	1b c0       	rjmp	.+54     	; 0xd2a <__floatsisf+0x6c>
     cf4:	6f 5f       	subi	r22, 0xFF	; 255
     cf6:	7f 4f       	sbci	r23, 0xFF	; 255
     cf8:	8f 4f       	sbci	r24, 0xFF	; 255
     cfa:	9f 4f       	sbci	r25, 0xFF	; 255
     cfc:	16 c0       	rjmp	.+44     	; 0xd2a <__floatsisf+0x6c>
     cfe:	88 23       	and	r24, r24
     d00:	11 f0       	breq	.+4      	; 0xd06 <__floatsisf+0x48>
     d02:	96 e9       	ldi	r25, 0x96	; 150
     d04:	11 c0       	rjmp	.+34     	; 0xd28 <__floatsisf+0x6a>
     d06:	77 23       	and	r23, r23
     d08:	21 f0       	breq	.+8      	; 0xd12 <__floatsisf+0x54>
     d0a:	9e e8       	ldi	r25, 0x8E	; 142
     d0c:	87 2f       	mov	r24, r23
     d0e:	76 2f       	mov	r23, r22
     d10:	05 c0       	rjmp	.+10     	; 0xd1c <__floatsisf+0x5e>
     d12:	66 23       	and	r22, r22
     d14:	71 f0       	breq	.+28     	; 0xd32 <__floatsisf+0x74>
     d16:	96 e8       	ldi	r25, 0x86	; 134
     d18:	86 2f       	mov	r24, r22
     d1a:	70 e0       	ldi	r23, 0x00	; 0
     d1c:	60 e0       	ldi	r22, 0x00	; 0
     d1e:	2a f0       	brmi	.+10     	; 0xd2a <__floatsisf+0x6c>
     d20:	9a 95       	dec	r25
     d22:	66 0f       	add	r22, r22
     d24:	77 1f       	adc	r23, r23
     d26:	88 1f       	adc	r24, r24
     d28:	da f7       	brpl	.-10     	; 0xd20 <__floatsisf+0x62>
     d2a:	88 0f       	add	r24, r24
     d2c:	96 95       	lsr	r25
     d2e:	87 95       	ror	r24
     d30:	97 f9       	bld	r25, 7
     d32:	08 95       	ret

00000d34 <__fp_inf>:
     d34:	97 f9       	bld	r25, 7
     d36:	9f 67       	ori	r25, 0x7F	; 127
     d38:	80 e8       	ldi	r24, 0x80	; 128
     d3a:	70 e0       	ldi	r23, 0x00	; 0
     d3c:	60 e0       	ldi	r22, 0x00	; 0
     d3e:	08 95       	ret

00000d40 <__fp_nan>:
     d40:	9f ef       	ldi	r25, 0xFF	; 255
     d42:	80 ec       	ldi	r24, 0xC0	; 192
     d44:	08 95       	ret

00000d46 <__fp_powser>:
     d46:	df 93       	push	r29
     d48:	cf 93       	push	r28
     d4a:	1f 93       	push	r17
     d4c:	0f 93       	push	r16
     d4e:	ff 92       	push	r15
     d50:	ef 92       	push	r14
     d52:	df 92       	push	r13
     d54:	7b 01       	movw	r14, r22
     d56:	8c 01       	movw	r16, r24
     d58:	68 94       	set
     d5a:	06 c0       	rjmp	.+12     	; 0xd68 <__fp_powser+0x22>
     d5c:	da 2e       	mov	r13, r26
     d5e:	ef 01       	movw	r28, r30
     d60:	0e 94 2d 07 	call	0xe5a	; 0xe5a <__mulsf3x>
     d64:	fe 01       	movw	r30, r28
     d66:	e8 94       	clt
     d68:	a5 91       	lpm	r26, Z+
     d6a:	25 91       	lpm	r18, Z+
     d6c:	35 91       	lpm	r19, Z+
     d6e:	45 91       	lpm	r20, Z+
     d70:	55 91       	lpm	r21, Z+
     d72:	a6 f3       	brts	.-24     	; 0xd5c <__fp_powser+0x16>
     d74:	ef 01       	movw	r28, r30
     d76:	0e 94 a3 07 	call	0xf46	; 0xf46 <__addsf3x>
     d7a:	fe 01       	movw	r30, r28
     d7c:	97 01       	movw	r18, r14
     d7e:	a8 01       	movw	r20, r16
     d80:	da 94       	dec	r13
     d82:	69 f7       	brne	.-38     	; 0xd5e <__fp_powser+0x18>
     d84:	df 90       	pop	r13
     d86:	ef 90       	pop	r14
     d88:	ff 90       	pop	r15
     d8a:	0f 91       	pop	r16
     d8c:	1f 91       	pop	r17
     d8e:	cf 91       	pop	r28
     d90:	df 91       	pop	r29
     d92:	08 95       	ret

00000d94 <__fp_pscA>:
     d94:	00 24       	eor	r0, r0
     d96:	0a 94       	dec	r0
     d98:	16 16       	cp	r1, r22
     d9a:	17 06       	cpc	r1, r23
     d9c:	18 06       	cpc	r1, r24
     d9e:	09 06       	cpc	r0, r25
     da0:	08 95       	ret

00000da2 <__fp_pscB>:
     da2:	00 24       	eor	r0, r0
     da4:	0a 94       	dec	r0
     da6:	12 16       	cp	r1, r18
     da8:	13 06       	cpc	r1, r19
     daa:	14 06       	cpc	r1, r20
     dac:	05 06       	cpc	r0, r21
     dae:	08 95       	ret

00000db0 <__fp_round>:
     db0:	09 2e       	mov	r0, r25
     db2:	03 94       	inc	r0
     db4:	00 0c       	add	r0, r0
     db6:	11 f4       	brne	.+4      	; 0xdbc <__fp_round+0xc>
     db8:	88 23       	and	r24, r24
     dba:	52 f0       	brmi	.+20     	; 0xdd0 <__fp_round+0x20>
     dbc:	bb 0f       	add	r27, r27
     dbe:	40 f4       	brcc	.+16     	; 0xdd0 <__fp_round+0x20>
     dc0:	bf 2b       	or	r27, r31
     dc2:	11 f4       	brne	.+4      	; 0xdc8 <__fp_round+0x18>
     dc4:	60 ff       	sbrs	r22, 0
     dc6:	04 c0       	rjmp	.+8      	; 0xdd0 <__fp_round+0x20>
     dc8:	6f 5f       	subi	r22, 0xFF	; 255
     dca:	7f 4f       	sbci	r23, 0xFF	; 255
     dcc:	8f 4f       	sbci	r24, 0xFF	; 255
     dce:	9f 4f       	sbci	r25, 0xFF	; 255
     dd0:	08 95       	ret

00000dd2 <__fp_split3>:
     dd2:	57 fd       	sbrc	r21, 7
     dd4:	90 58       	subi	r25, 0x80	; 128
     dd6:	44 0f       	add	r20, r20
     dd8:	55 1f       	adc	r21, r21
     dda:	59 f0       	breq	.+22     	; 0xdf2 <__fp_splitA+0x10>
     ddc:	5f 3f       	cpi	r21, 0xFF	; 255
     dde:	71 f0       	breq	.+28     	; 0xdfc <__fp_splitA+0x1a>
     de0:	47 95       	ror	r20

00000de2 <__fp_splitA>:
     de2:	88 0f       	add	r24, r24
     de4:	97 fb       	bst	r25, 7
     de6:	99 1f       	adc	r25, r25
     de8:	61 f0       	breq	.+24     	; 0xe02 <__fp_splitA+0x20>
     dea:	9f 3f       	cpi	r25, 0xFF	; 255
     dec:	79 f0       	breq	.+30     	; 0xe0c <__fp_splitA+0x2a>
     dee:	87 95       	ror	r24
     df0:	08 95       	ret
     df2:	12 16       	cp	r1, r18
     df4:	13 06       	cpc	r1, r19
     df6:	14 06       	cpc	r1, r20
     df8:	55 1f       	adc	r21, r21
     dfa:	f2 cf       	rjmp	.-28     	; 0xde0 <__fp_split3+0xe>
     dfc:	46 95       	lsr	r20
     dfe:	f1 df       	rcall	.-30     	; 0xde2 <__fp_splitA>
     e00:	08 c0       	rjmp	.+16     	; 0xe12 <__fp_splitA+0x30>
     e02:	16 16       	cp	r1, r22
     e04:	17 06       	cpc	r1, r23
     e06:	18 06       	cpc	r1, r24
     e08:	99 1f       	adc	r25, r25
     e0a:	f1 cf       	rjmp	.-30     	; 0xdee <__fp_splitA+0xc>
     e0c:	86 95       	lsr	r24
     e0e:	71 05       	cpc	r23, r1
     e10:	61 05       	cpc	r22, r1
     e12:	08 94       	sec
     e14:	08 95       	ret

00000e16 <__fp_zero>:
     e16:	e8 94       	clt

00000e18 <__fp_szero>:
     e18:	bb 27       	eor	r27, r27
     e1a:	66 27       	eor	r22, r22
     e1c:	77 27       	eor	r23, r23
     e1e:	cb 01       	movw	r24, r22
     e20:	97 f9       	bld	r25, 7
     e22:	08 95       	ret

00000e24 <inverse>:
     e24:	9b 01       	movw	r18, r22
     e26:	ac 01       	movw	r20, r24
     e28:	60 e0       	ldi	r22, 0x00	; 0
     e2a:	70 e0       	ldi	r23, 0x00	; 0
     e2c:	80 e8       	ldi	r24, 0x80	; 128
     e2e:	9f e3       	ldi	r25, 0x3F	; 63
     e30:	0c 94 b5 05 	jmp	0xb6a	; 0xb6a <__divsf3>

00000e34 <__mulsf3>:
     e34:	0e 94 2d 07 	call	0xe5a	; 0xe5a <__mulsf3x>
     e38:	0c 94 d8 06 	jmp	0xdb0	; 0xdb0 <__fp_round>
     e3c:	0e 94 ca 06 	call	0xd94	; 0xd94 <__fp_pscA>
     e40:	38 f0       	brcs	.+14     	; 0xe50 <__mulsf3+0x1c>
     e42:	0e 94 d1 06 	call	0xda2	; 0xda2 <__fp_pscB>
     e46:	20 f0       	brcs	.+8      	; 0xe50 <__mulsf3+0x1c>
     e48:	95 23       	and	r25, r21
     e4a:	11 f0       	breq	.+4      	; 0xe50 <__mulsf3+0x1c>
     e4c:	0c 94 9a 06 	jmp	0xd34	; 0xd34 <__fp_inf>
     e50:	0c 94 a0 06 	jmp	0xd40	; 0xd40 <__fp_nan>
     e54:	11 24       	eor	r1, r1
     e56:	0c 94 0c 07 	jmp	0xe18	; 0xe18 <__fp_szero>

00000e5a <__mulsf3x>:
     e5a:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <__fp_split3>
     e5e:	70 f3       	brcs	.-36     	; 0xe3c <__mulsf3+0x8>

00000e60 <__mulsf3_pse>:
     e60:	95 9f       	mul	r25, r21
     e62:	c1 f3       	breq	.-16     	; 0xe54 <__mulsf3+0x20>
     e64:	95 0f       	add	r25, r21
     e66:	50 e0       	ldi	r21, 0x00	; 0
     e68:	55 1f       	adc	r21, r21
     e6a:	62 9f       	mul	r22, r18
     e6c:	f0 01       	movw	r30, r0
     e6e:	72 9f       	mul	r23, r18
     e70:	bb 27       	eor	r27, r27
     e72:	f0 0d       	add	r31, r0
     e74:	b1 1d       	adc	r27, r1
     e76:	63 9f       	mul	r22, r19
     e78:	aa 27       	eor	r26, r26
     e7a:	f0 0d       	add	r31, r0
     e7c:	b1 1d       	adc	r27, r1
     e7e:	aa 1f       	adc	r26, r26
     e80:	64 9f       	mul	r22, r20
     e82:	66 27       	eor	r22, r22
     e84:	b0 0d       	add	r27, r0
     e86:	a1 1d       	adc	r26, r1
     e88:	66 1f       	adc	r22, r22
     e8a:	82 9f       	mul	r24, r18
     e8c:	22 27       	eor	r18, r18
     e8e:	b0 0d       	add	r27, r0
     e90:	a1 1d       	adc	r26, r1
     e92:	62 1f       	adc	r22, r18
     e94:	73 9f       	mul	r23, r19
     e96:	b0 0d       	add	r27, r0
     e98:	a1 1d       	adc	r26, r1
     e9a:	62 1f       	adc	r22, r18
     e9c:	83 9f       	mul	r24, r19
     e9e:	a0 0d       	add	r26, r0
     ea0:	61 1d       	adc	r22, r1
     ea2:	22 1f       	adc	r18, r18
     ea4:	74 9f       	mul	r23, r20
     ea6:	33 27       	eor	r19, r19
     ea8:	a0 0d       	add	r26, r0
     eaa:	61 1d       	adc	r22, r1
     eac:	23 1f       	adc	r18, r19
     eae:	84 9f       	mul	r24, r20
     eb0:	60 0d       	add	r22, r0
     eb2:	21 1d       	adc	r18, r1
     eb4:	82 2f       	mov	r24, r18
     eb6:	76 2f       	mov	r23, r22
     eb8:	6a 2f       	mov	r22, r26
     eba:	11 24       	eor	r1, r1
     ebc:	9f 57       	subi	r25, 0x7F	; 127
     ebe:	50 40       	sbci	r21, 0x00	; 0
     ec0:	9a f0       	brmi	.+38     	; 0xee8 <__mulsf3_pse+0x88>
     ec2:	f1 f0       	breq	.+60     	; 0xf00 <__mulsf3_pse+0xa0>
     ec4:	88 23       	and	r24, r24
     ec6:	4a f0       	brmi	.+18     	; 0xeda <__mulsf3_pse+0x7a>
     ec8:	ee 0f       	add	r30, r30
     eca:	ff 1f       	adc	r31, r31
     ecc:	bb 1f       	adc	r27, r27
     ece:	66 1f       	adc	r22, r22
     ed0:	77 1f       	adc	r23, r23
     ed2:	88 1f       	adc	r24, r24
     ed4:	91 50       	subi	r25, 0x01	; 1
     ed6:	50 40       	sbci	r21, 0x00	; 0
     ed8:	a9 f7       	brne	.-22     	; 0xec4 <__mulsf3_pse+0x64>
     eda:	9e 3f       	cpi	r25, 0xFE	; 254
     edc:	51 05       	cpc	r21, r1
     ede:	80 f0       	brcs	.+32     	; 0xf00 <__mulsf3_pse+0xa0>
     ee0:	0c 94 9a 06 	jmp	0xd34	; 0xd34 <__fp_inf>
     ee4:	0c 94 0c 07 	jmp	0xe18	; 0xe18 <__fp_szero>
     ee8:	5f 3f       	cpi	r21, 0xFF	; 255
     eea:	e4 f3       	brlt	.-8      	; 0xee4 <__mulsf3_pse+0x84>
     eec:	98 3e       	cpi	r25, 0xE8	; 232
     eee:	d4 f3       	brlt	.-12     	; 0xee4 <__mulsf3_pse+0x84>
     ef0:	86 95       	lsr	r24
     ef2:	77 95       	ror	r23
     ef4:	67 95       	ror	r22
     ef6:	b7 95       	ror	r27
     ef8:	f7 95       	ror	r31
     efa:	e7 95       	ror	r30
     efc:	9f 5f       	subi	r25, 0xFF	; 255
     efe:	c1 f7       	brne	.-16     	; 0xef0 <__mulsf3_pse+0x90>
     f00:	fe 2b       	or	r31, r30
     f02:	88 0f       	add	r24, r24
     f04:	91 1d       	adc	r25, r1
     f06:	96 95       	lsr	r25
     f08:	87 95       	ror	r24
     f0a:	97 f9       	bld	r25, 7
     f0c:	08 95       	ret

00000f0e <square>:
     f0e:	9b 01       	movw	r18, r22
     f10:	ac 01       	movw	r20, r24
     f12:	0c 94 1a 07 	jmp	0xe34	; 0xe34 <__mulsf3>

00000f16 <__subsf3>:
     f16:	50 58       	subi	r21, 0x80	; 128

00000f18 <__addsf3>:
     f18:	bb 27       	eor	r27, r27
     f1a:	aa 27       	eor	r26, r26
     f1c:	0e 94 a3 07 	call	0xf46	; 0xf46 <__addsf3x>
     f20:	0c 94 d8 06 	jmp	0xdb0	; 0xdb0 <__fp_round>
     f24:	0e 94 ca 06 	call	0xd94	; 0xd94 <__fp_pscA>
     f28:	38 f0       	brcs	.+14     	; 0xf38 <__addsf3+0x20>
     f2a:	0e 94 d1 06 	call	0xda2	; 0xda2 <__fp_pscB>
     f2e:	20 f0       	brcs	.+8      	; 0xf38 <__addsf3+0x20>
     f30:	39 f4       	brne	.+14     	; 0xf40 <__addsf3+0x28>
     f32:	9f 3f       	cpi	r25, 0xFF	; 255
     f34:	19 f4       	brne	.+6      	; 0xf3c <__addsf3+0x24>
     f36:	26 f4       	brtc	.+8      	; 0xf40 <__addsf3+0x28>
     f38:	0c 94 a0 06 	jmp	0xd40	; 0xd40 <__fp_nan>
     f3c:	0e f4       	brtc	.+2      	; 0xf40 <__addsf3+0x28>
     f3e:	e0 95       	com	r30
     f40:	e7 fb       	bst	r30, 7
     f42:	0c 94 9a 06 	jmp	0xd34	; 0xd34 <__fp_inf>

00000f46 <__addsf3x>:
     f46:	e9 2f       	mov	r30, r25
     f48:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <__fp_split3>
     f4c:	58 f3       	brcs	.-42     	; 0xf24 <__addsf3+0xc>
     f4e:	ba 17       	cp	r27, r26
     f50:	62 07       	cpc	r22, r18
     f52:	73 07       	cpc	r23, r19
     f54:	84 07       	cpc	r24, r20
     f56:	95 07       	cpc	r25, r21
     f58:	20 f0       	brcs	.+8      	; 0xf62 <__addsf3x+0x1c>
     f5a:	79 f4       	brne	.+30     	; 0xf7a <__addsf3x+0x34>
     f5c:	a6 f5       	brtc	.+104    	; 0xfc6 <__addsf3x+0x80>
     f5e:	0c 94 0b 07 	jmp	0xe16	; 0xe16 <__fp_zero>
     f62:	0e f4       	brtc	.+2      	; 0xf66 <__addsf3x+0x20>
     f64:	e0 95       	com	r30
     f66:	0b 2e       	mov	r0, r27
     f68:	ba 2f       	mov	r27, r26
     f6a:	a0 2d       	mov	r26, r0
     f6c:	0b 01       	movw	r0, r22
     f6e:	b9 01       	movw	r22, r18
     f70:	90 01       	movw	r18, r0
     f72:	0c 01       	movw	r0, r24
     f74:	ca 01       	movw	r24, r20
     f76:	a0 01       	movw	r20, r0
     f78:	11 24       	eor	r1, r1
     f7a:	ff 27       	eor	r31, r31
     f7c:	59 1b       	sub	r21, r25
     f7e:	99 f0       	breq	.+38     	; 0xfa6 <__addsf3x+0x60>
     f80:	59 3f       	cpi	r21, 0xF9	; 249
     f82:	50 f4       	brcc	.+20     	; 0xf98 <__addsf3x+0x52>
     f84:	50 3e       	cpi	r21, 0xE0	; 224
     f86:	68 f1       	brcs	.+90     	; 0xfe2 <__addsf3x+0x9c>
     f88:	1a 16       	cp	r1, r26
     f8a:	f0 40       	sbci	r31, 0x00	; 0
     f8c:	a2 2f       	mov	r26, r18
     f8e:	23 2f       	mov	r18, r19
     f90:	34 2f       	mov	r19, r20
     f92:	44 27       	eor	r20, r20
     f94:	58 5f       	subi	r21, 0xF8	; 248
     f96:	f3 cf       	rjmp	.-26     	; 0xf7e <__addsf3x+0x38>
     f98:	46 95       	lsr	r20
     f9a:	37 95       	ror	r19
     f9c:	27 95       	ror	r18
     f9e:	a7 95       	ror	r26
     fa0:	f0 40       	sbci	r31, 0x00	; 0
     fa2:	53 95       	inc	r21
     fa4:	c9 f7       	brne	.-14     	; 0xf98 <__addsf3x+0x52>
     fa6:	7e f4       	brtc	.+30     	; 0xfc6 <__addsf3x+0x80>
     fa8:	1f 16       	cp	r1, r31
     faa:	ba 0b       	sbc	r27, r26
     fac:	62 0b       	sbc	r22, r18
     fae:	73 0b       	sbc	r23, r19
     fb0:	84 0b       	sbc	r24, r20
     fb2:	ba f0       	brmi	.+46     	; 0xfe2 <__addsf3x+0x9c>
     fb4:	91 50       	subi	r25, 0x01	; 1
     fb6:	a1 f0       	breq	.+40     	; 0xfe0 <__addsf3x+0x9a>
     fb8:	ff 0f       	add	r31, r31
     fba:	bb 1f       	adc	r27, r27
     fbc:	66 1f       	adc	r22, r22
     fbe:	77 1f       	adc	r23, r23
     fc0:	88 1f       	adc	r24, r24
     fc2:	c2 f7       	brpl	.-16     	; 0xfb4 <__addsf3x+0x6e>
     fc4:	0e c0       	rjmp	.+28     	; 0xfe2 <__addsf3x+0x9c>
     fc6:	ba 0f       	add	r27, r26
     fc8:	62 1f       	adc	r22, r18
     fca:	73 1f       	adc	r23, r19
     fcc:	84 1f       	adc	r24, r20
     fce:	48 f4       	brcc	.+18     	; 0xfe2 <__addsf3x+0x9c>
     fd0:	87 95       	ror	r24
     fd2:	77 95       	ror	r23
     fd4:	67 95       	ror	r22
     fd6:	b7 95       	ror	r27
     fd8:	f7 95       	ror	r31
     fda:	9e 3f       	cpi	r25, 0xFE	; 254
     fdc:	08 f0       	brcs	.+2      	; 0xfe0 <__addsf3x+0x9a>
     fde:	b0 cf       	rjmp	.-160    	; 0xf40 <__addsf3+0x28>
     fe0:	93 95       	inc	r25
     fe2:	88 0f       	add	r24, r24
     fe4:	08 f0       	brcs	.+2      	; 0xfe8 <__addsf3x+0xa2>
     fe6:	99 27       	eor	r25, r25
     fe8:	ee 0f       	add	r30, r30
     fea:	97 95       	ror	r25
     fec:	87 95       	ror	r24
     fee:	08 95       	ret

00000ff0 <__divmodhi4>:
     ff0:	97 fb       	bst	r25, 7
     ff2:	07 2e       	mov	r0, r23
     ff4:	16 f4       	brtc	.+4      	; 0xffa <__divmodhi4+0xa>
     ff6:	00 94       	com	r0
     ff8:	07 d0       	rcall	.+14     	; 0x1008 <__divmodhi4_neg1>
     ffa:	77 fd       	sbrc	r23, 7
     ffc:	09 d0       	rcall	.+18     	; 0x1010 <__divmodhi4_neg2>
     ffe:	0e 94 0c 08 	call	0x1018	; 0x1018 <__udivmodhi4>
    1002:	07 fc       	sbrc	r0, 7
    1004:	05 d0       	rcall	.+10     	; 0x1010 <__divmodhi4_neg2>
    1006:	3e f4       	brtc	.+14     	; 0x1016 <__divmodhi4_exit>

00001008 <__divmodhi4_neg1>:
    1008:	90 95       	com	r25
    100a:	81 95       	neg	r24
    100c:	9f 4f       	sbci	r25, 0xFF	; 255
    100e:	08 95       	ret

00001010 <__divmodhi4_neg2>:
    1010:	70 95       	com	r23
    1012:	61 95       	neg	r22
    1014:	7f 4f       	sbci	r23, 0xFF	; 255

00001016 <__divmodhi4_exit>:
    1016:	08 95       	ret

00001018 <__udivmodhi4>:
    1018:	aa 1b       	sub	r26, r26
    101a:	bb 1b       	sub	r27, r27
    101c:	51 e1       	ldi	r21, 0x11	; 17
    101e:	07 c0       	rjmp	.+14     	; 0x102e <__udivmodhi4_ep>

00001020 <__udivmodhi4_loop>:
    1020:	aa 1f       	adc	r26, r26
    1022:	bb 1f       	adc	r27, r27
    1024:	a6 17       	cp	r26, r22
    1026:	b7 07       	cpc	r27, r23
    1028:	10 f0       	brcs	.+4      	; 0x102e <__udivmodhi4_ep>
    102a:	a6 1b       	sub	r26, r22
    102c:	b7 0b       	sbc	r27, r23

0000102e <__udivmodhi4_ep>:
    102e:	88 1f       	adc	r24, r24
    1030:	99 1f       	adc	r25, r25
    1032:	5a 95       	dec	r21
    1034:	a9 f7       	brne	.-22     	; 0x1020 <__udivmodhi4_loop>
    1036:	80 95       	com	r24
    1038:	90 95       	com	r25
    103a:	bc 01       	movw	r22, r24
    103c:	cd 01       	movw	r24, r26
    103e:	08 95       	ret

00001040 <malloc>:
    1040:	0f 93       	push	r16
    1042:	1f 93       	push	r17
    1044:	cf 93       	push	r28
    1046:	df 93       	push	r29
    1048:	82 30       	cpi	r24, 0x02	; 2
    104a:	91 05       	cpc	r25, r1
    104c:	10 f4       	brcc	.+4      	; 0x1052 <malloc+0x12>
    104e:	82 e0       	ldi	r24, 0x02	; 2
    1050:	90 e0       	ldi	r25, 0x00	; 0
    1052:	e0 91 58 02 	lds	r30, 0x0258	; 0x800258 <__flp>
    1056:	f0 91 59 02 	lds	r31, 0x0259	; 0x800259 <__flp+0x1>
    105a:	20 e0       	ldi	r18, 0x00	; 0
    105c:	30 e0       	ldi	r19, 0x00	; 0
    105e:	a0 e0       	ldi	r26, 0x00	; 0
    1060:	b0 e0       	ldi	r27, 0x00	; 0
    1062:	30 97       	sbiw	r30, 0x00	; 0
    1064:	19 f1       	breq	.+70     	; 0x10ac <malloc+0x6c>
    1066:	40 81       	ld	r20, Z
    1068:	51 81       	ldd	r21, Z+1	; 0x01
    106a:	02 81       	ldd	r16, Z+2	; 0x02
    106c:	13 81       	ldd	r17, Z+3	; 0x03
    106e:	48 17       	cp	r20, r24
    1070:	59 07       	cpc	r21, r25
    1072:	c8 f0       	brcs	.+50     	; 0x10a6 <malloc+0x66>
    1074:	84 17       	cp	r24, r20
    1076:	95 07       	cpc	r25, r21
    1078:	69 f4       	brne	.+26     	; 0x1094 <malloc+0x54>
    107a:	10 97       	sbiw	r26, 0x00	; 0
    107c:	31 f0       	breq	.+12     	; 0x108a <malloc+0x4a>
    107e:	12 96       	adiw	r26, 0x02	; 2
    1080:	0c 93       	st	X, r16
    1082:	12 97       	sbiw	r26, 0x02	; 2
    1084:	13 96       	adiw	r26, 0x03	; 3
    1086:	1c 93       	st	X, r17
    1088:	27 c0       	rjmp	.+78     	; 0x10d8 <malloc+0x98>
    108a:	00 93 58 02 	sts	0x0258, r16	; 0x800258 <__flp>
    108e:	10 93 59 02 	sts	0x0259, r17	; 0x800259 <__flp+0x1>
    1092:	22 c0       	rjmp	.+68     	; 0x10d8 <malloc+0x98>
    1094:	21 15       	cp	r18, r1
    1096:	31 05       	cpc	r19, r1
    1098:	19 f0       	breq	.+6      	; 0x10a0 <malloc+0x60>
    109a:	42 17       	cp	r20, r18
    109c:	53 07       	cpc	r21, r19
    109e:	18 f4       	brcc	.+6      	; 0x10a6 <malloc+0x66>
    10a0:	9a 01       	movw	r18, r20
    10a2:	bd 01       	movw	r22, r26
    10a4:	ef 01       	movw	r28, r30
    10a6:	df 01       	movw	r26, r30
    10a8:	f8 01       	movw	r30, r16
    10aa:	db cf       	rjmp	.-74     	; 0x1062 <malloc+0x22>
    10ac:	21 15       	cp	r18, r1
    10ae:	31 05       	cpc	r19, r1
    10b0:	f9 f0       	breq	.+62     	; 0x10f0 <malloc+0xb0>
    10b2:	28 1b       	sub	r18, r24
    10b4:	39 0b       	sbc	r19, r25
    10b6:	24 30       	cpi	r18, 0x04	; 4
    10b8:	31 05       	cpc	r19, r1
    10ba:	80 f4       	brcc	.+32     	; 0x10dc <malloc+0x9c>
    10bc:	8a 81       	ldd	r24, Y+2	; 0x02
    10be:	9b 81       	ldd	r25, Y+3	; 0x03
    10c0:	61 15       	cp	r22, r1
    10c2:	71 05       	cpc	r23, r1
    10c4:	21 f0       	breq	.+8      	; 0x10ce <malloc+0x8e>
    10c6:	fb 01       	movw	r30, r22
    10c8:	93 83       	std	Z+3, r25	; 0x03
    10ca:	82 83       	std	Z+2, r24	; 0x02
    10cc:	04 c0       	rjmp	.+8      	; 0x10d6 <malloc+0x96>
    10ce:	90 93 59 02 	sts	0x0259, r25	; 0x800259 <__flp+0x1>
    10d2:	80 93 58 02 	sts	0x0258, r24	; 0x800258 <__flp>
    10d6:	fe 01       	movw	r30, r28
    10d8:	32 96       	adiw	r30, 0x02	; 2
    10da:	44 c0       	rjmp	.+136    	; 0x1164 <malloc+0x124>
    10dc:	fe 01       	movw	r30, r28
    10de:	e2 0f       	add	r30, r18
    10e0:	f3 1f       	adc	r31, r19
    10e2:	81 93       	st	Z+, r24
    10e4:	91 93       	st	Z+, r25
    10e6:	22 50       	subi	r18, 0x02	; 2
    10e8:	31 09       	sbc	r19, r1
    10ea:	39 83       	std	Y+1, r19	; 0x01
    10ec:	28 83       	st	Y, r18
    10ee:	3a c0       	rjmp	.+116    	; 0x1164 <malloc+0x124>
    10f0:	20 91 56 02 	lds	r18, 0x0256	; 0x800256 <__brkval>
    10f4:	30 91 57 02 	lds	r19, 0x0257	; 0x800257 <__brkval+0x1>
    10f8:	23 2b       	or	r18, r19
    10fa:	41 f4       	brne	.+16     	; 0x110c <malloc+0xcc>
    10fc:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    1100:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    1104:	30 93 57 02 	sts	0x0257, r19	; 0x800257 <__brkval+0x1>
    1108:	20 93 56 02 	sts	0x0256, r18	; 0x800256 <__brkval>
    110c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    1110:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    1114:	21 15       	cp	r18, r1
    1116:	31 05       	cpc	r19, r1
    1118:	41 f4       	brne	.+16     	; 0x112a <malloc+0xea>
    111a:	2d b7       	in	r18, 0x3d	; 61
    111c:	3e b7       	in	r19, 0x3e	; 62
    111e:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    1122:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    1126:	24 1b       	sub	r18, r20
    1128:	35 0b       	sbc	r19, r21
    112a:	e0 91 56 02 	lds	r30, 0x0256	; 0x800256 <__brkval>
    112e:	f0 91 57 02 	lds	r31, 0x0257	; 0x800257 <__brkval+0x1>
    1132:	e2 17       	cp	r30, r18
    1134:	f3 07       	cpc	r31, r19
    1136:	a0 f4       	brcc	.+40     	; 0x1160 <malloc+0x120>
    1138:	2e 1b       	sub	r18, r30
    113a:	3f 0b       	sbc	r19, r31
    113c:	28 17       	cp	r18, r24
    113e:	39 07       	cpc	r19, r25
    1140:	78 f0       	brcs	.+30     	; 0x1160 <malloc+0x120>
    1142:	ac 01       	movw	r20, r24
    1144:	4e 5f       	subi	r20, 0xFE	; 254
    1146:	5f 4f       	sbci	r21, 0xFF	; 255
    1148:	24 17       	cp	r18, r20
    114a:	35 07       	cpc	r19, r21
    114c:	48 f0       	brcs	.+18     	; 0x1160 <malloc+0x120>
    114e:	4e 0f       	add	r20, r30
    1150:	5f 1f       	adc	r21, r31
    1152:	50 93 57 02 	sts	0x0257, r21	; 0x800257 <__brkval+0x1>
    1156:	40 93 56 02 	sts	0x0256, r20	; 0x800256 <__brkval>
    115a:	81 93       	st	Z+, r24
    115c:	91 93       	st	Z+, r25
    115e:	02 c0       	rjmp	.+4      	; 0x1164 <malloc+0x124>
    1160:	e0 e0       	ldi	r30, 0x00	; 0
    1162:	f0 e0       	ldi	r31, 0x00	; 0
    1164:	cf 01       	movw	r24, r30
    1166:	df 91       	pop	r29
    1168:	cf 91       	pop	r28
    116a:	1f 91       	pop	r17
    116c:	0f 91       	pop	r16
    116e:	08 95       	ret

00001170 <free>:
    1170:	cf 93       	push	r28
    1172:	df 93       	push	r29
    1174:	00 97       	sbiw	r24, 0x00	; 0
    1176:	09 f4       	brne	.+2      	; 0x117a <free+0xa>
    1178:	81 c0       	rjmp	.+258    	; 0x127c <free+0x10c>
    117a:	fc 01       	movw	r30, r24
    117c:	32 97       	sbiw	r30, 0x02	; 2
    117e:	13 82       	std	Z+3, r1	; 0x03
    1180:	12 82       	std	Z+2, r1	; 0x02
    1182:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <__flp>
    1186:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <__flp+0x1>
    118a:	10 97       	sbiw	r26, 0x00	; 0
    118c:	81 f4       	brne	.+32     	; 0x11ae <free+0x3e>
    118e:	20 81       	ld	r18, Z
    1190:	31 81       	ldd	r19, Z+1	; 0x01
    1192:	82 0f       	add	r24, r18
    1194:	93 1f       	adc	r25, r19
    1196:	20 91 56 02 	lds	r18, 0x0256	; 0x800256 <__brkval>
    119a:	30 91 57 02 	lds	r19, 0x0257	; 0x800257 <__brkval+0x1>
    119e:	28 17       	cp	r18, r24
    11a0:	39 07       	cpc	r19, r25
    11a2:	51 f5       	brne	.+84     	; 0x11f8 <free+0x88>
    11a4:	f0 93 57 02 	sts	0x0257, r31	; 0x800257 <__brkval+0x1>
    11a8:	e0 93 56 02 	sts	0x0256, r30	; 0x800256 <__brkval>
    11ac:	67 c0       	rjmp	.+206    	; 0x127c <free+0x10c>
    11ae:	ed 01       	movw	r28, r26
    11b0:	20 e0       	ldi	r18, 0x00	; 0
    11b2:	30 e0       	ldi	r19, 0x00	; 0
    11b4:	ce 17       	cp	r28, r30
    11b6:	df 07       	cpc	r29, r31
    11b8:	40 f4       	brcc	.+16     	; 0x11ca <free+0x5a>
    11ba:	4a 81       	ldd	r20, Y+2	; 0x02
    11bc:	5b 81       	ldd	r21, Y+3	; 0x03
    11be:	9e 01       	movw	r18, r28
    11c0:	41 15       	cp	r20, r1
    11c2:	51 05       	cpc	r21, r1
    11c4:	f1 f0       	breq	.+60     	; 0x1202 <free+0x92>
    11c6:	ea 01       	movw	r28, r20
    11c8:	f5 cf       	rjmp	.-22     	; 0x11b4 <free+0x44>
    11ca:	d3 83       	std	Z+3, r29	; 0x03
    11cc:	c2 83       	std	Z+2, r28	; 0x02
    11ce:	40 81       	ld	r20, Z
    11d0:	51 81       	ldd	r21, Z+1	; 0x01
    11d2:	84 0f       	add	r24, r20
    11d4:	95 1f       	adc	r25, r21
    11d6:	c8 17       	cp	r28, r24
    11d8:	d9 07       	cpc	r29, r25
    11da:	59 f4       	brne	.+22     	; 0x11f2 <free+0x82>
    11dc:	88 81       	ld	r24, Y
    11de:	99 81       	ldd	r25, Y+1	; 0x01
    11e0:	84 0f       	add	r24, r20
    11e2:	95 1f       	adc	r25, r21
    11e4:	02 96       	adiw	r24, 0x02	; 2
    11e6:	91 83       	std	Z+1, r25	; 0x01
    11e8:	80 83       	st	Z, r24
    11ea:	8a 81       	ldd	r24, Y+2	; 0x02
    11ec:	9b 81       	ldd	r25, Y+3	; 0x03
    11ee:	93 83       	std	Z+3, r25	; 0x03
    11f0:	82 83       	std	Z+2, r24	; 0x02
    11f2:	21 15       	cp	r18, r1
    11f4:	31 05       	cpc	r19, r1
    11f6:	29 f4       	brne	.+10     	; 0x1202 <free+0x92>
    11f8:	f0 93 59 02 	sts	0x0259, r31	; 0x800259 <__flp+0x1>
    11fc:	e0 93 58 02 	sts	0x0258, r30	; 0x800258 <__flp>
    1200:	3d c0       	rjmp	.+122    	; 0x127c <free+0x10c>
    1202:	e9 01       	movw	r28, r18
    1204:	fb 83       	std	Y+3, r31	; 0x03
    1206:	ea 83       	std	Y+2, r30	; 0x02
    1208:	49 91       	ld	r20, Y+
    120a:	59 91       	ld	r21, Y+
    120c:	c4 0f       	add	r28, r20
    120e:	d5 1f       	adc	r29, r21
    1210:	ec 17       	cp	r30, r28
    1212:	fd 07       	cpc	r31, r29
    1214:	61 f4       	brne	.+24     	; 0x122e <free+0xbe>
    1216:	80 81       	ld	r24, Z
    1218:	91 81       	ldd	r25, Z+1	; 0x01
    121a:	84 0f       	add	r24, r20
    121c:	95 1f       	adc	r25, r21
    121e:	02 96       	adiw	r24, 0x02	; 2
    1220:	e9 01       	movw	r28, r18
    1222:	99 83       	std	Y+1, r25	; 0x01
    1224:	88 83       	st	Y, r24
    1226:	82 81       	ldd	r24, Z+2	; 0x02
    1228:	93 81       	ldd	r25, Z+3	; 0x03
    122a:	9b 83       	std	Y+3, r25	; 0x03
    122c:	8a 83       	std	Y+2, r24	; 0x02
    122e:	e0 e0       	ldi	r30, 0x00	; 0
    1230:	f0 e0       	ldi	r31, 0x00	; 0
    1232:	12 96       	adiw	r26, 0x02	; 2
    1234:	8d 91       	ld	r24, X+
    1236:	9c 91       	ld	r25, X
    1238:	13 97       	sbiw	r26, 0x03	; 3
    123a:	00 97       	sbiw	r24, 0x00	; 0
    123c:	19 f0       	breq	.+6      	; 0x1244 <free+0xd4>
    123e:	fd 01       	movw	r30, r26
    1240:	dc 01       	movw	r26, r24
    1242:	f7 cf       	rjmp	.-18     	; 0x1232 <free+0xc2>
    1244:	8d 91       	ld	r24, X+
    1246:	9c 91       	ld	r25, X
    1248:	11 97       	sbiw	r26, 0x01	; 1
    124a:	9d 01       	movw	r18, r26
    124c:	2e 5f       	subi	r18, 0xFE	; 254
    124e:	3f 4f       	sbci	r19, 0xFF	; 255
    1250:	82 0f       	add	r24, r18
    1252:	93 1f       	adc	r25, r19
    1254:	20 91 56 02 	lds	r18, 0x0256	; 0x800256 <__brkval>
    1258:	30 91 57 02 	lds	r19, 0x0257	; 0x800257 <__brkval+0x1>
    125c:	28 17       	cp	r18, r24
    125e:	39 07       	cpc	r19, r25
    1260:	69 f4       	brne	.+26     	; 0x127c <free+0x10c>
    1262:	30 97       	sbiw	r30, 0x00	; 0
    1264:	29 f4       	brne	.+10     	; 0x1270 <free+0x100>
    1266:	10 92 59 02 	sts	0x0259, r1	; 0x800259 <__flp+0x1>
    126a:	10 92 58 02 	sts	0x0258, r1	; 0x800258 <__flp>
    126e:	02 c0       	rjmp	.+4      	; 0x1274 <free+0x104>
    1270:	13 82       	std	Z+3, r1	; 0x03
    1272:	12 82       	std	Z+2, r1	; 0x02
    1274:	b0 93 57 02 	sts	0x0257, r27	; 0x800257 <__brkval+0x1>
    1278:	a0 93 56 02 	sts	0x0256, r26	; 0x800256 <__brkval>
    127c:	df 91       	pop	r29
    127e:	cf 91       	pop	r28
    1280:	08 95       	ret

00001282 <strcpy>:
    1282:	fb 01       	movw	r30, r22
    1284:	dc 01       	movw	r26, r24
    1286:	01 90       	ld	r0, Z+
    1288:	0d 92       	st	X+, r0
    128a:	00 20       	and	r0, r0
    128c:	e1 f7       	brne	.-8      	; 0x1286 <strcpy+0x4>
    128e:	08 95       	ret

00001290 <fdevopen>:
    1290:	0f 93       	push	r16
    1292:	1f 93       	push	r17
    1294:	cf 93       	push	r28
    1296:	df 93       	push	r29
    1298:	00 97       	sbiw	r24, 0x00	; 0
    129a:	31 f4       	brne	.+12     	; 0x12a8 <fdevopen+0x18>
    129c:	61 15       	cp	r22, r1
    129e:	71 05       	cpc	r23, r1
    12a0:	19 f4       	brne	.+6      	; 0x12a8 <fdevopen+0x18>
    12a2:	80 e0       	ldi	r24, 0x00	; 0
    12a4:	90 e0       	ldi	r25, 0x00	; 0
    12a6:	3a c0       	rjmp	.+116    	; 0x131c <fdevopen+0x8c>
    12a8:	8b 01       	movw	r16, r22
    12aa:	ec 01       	movw	r28, r24
    12ac:	6e e0       	ldi	r22, 0x0E	; 14
    12ae:	70 e0       	ldi	r23, 0x00	; 0
    12b0:	81 e0       	ldi	r24, 0x01	; 1
    12b2:	90 e0       	ldi	r25, 0x00	; 0
    12b4:	0e 94 8a 0b 	call	0x1714	; 0x1714 <calloc>
    12b8:	fc 01       	movw	r30, r24
    12ba:	89 2b       	or	r24, r25
    12bc:	91 f3       	breq	.-28     	; 0x12a2 <fdevopen+0x12>
    12be:	80 e8       	ldi	r24, 0x80	; 128
    12c0:	83 83       	std	Z+3, r24	; 0x03
    12c2:	01 15       	cp	r16, r1
    12c4:	11 05       	cpc	r17, r1
    12c6:	71 f0       	breq	.+28     	; 0x12e4 <fdevopen+0x54>
    12c8:	13 87       	std	Z+11, r17	; 0x0b
    12ca:	02 87       	std	Z+10, r16	; 0x0a
    12cc:	81 e8       	ldi	r24, 0x81	; 129
    12ce:	83 83       	std	Z+3, r24	; 0x03
    12d0:	80 91 5a 02 	lds	r24, 0x025A	; 0x80025a <__iob>
    12d4:	90 91 5b 02 	lds	r25, 0x025B	; 0x80025b <__iob+0x1>
    12d8:	89 2b       	or	r24, r25
    12da:	21 f4       	brne	.+8      	; 0x12e4 <fdevopen+0x54>
    12dc:	f0 93 5b 02 	sts	0x025B, r31	; 0x80025b <__iob+0x1>
    12e0:	e0 93 5a 02 	sts	0x025A, r30	; 0x80025a <__iob>
    12e4:	20 97       	sbiw	r28, 0x00	; 0
    12e6:	c9 f0       	breq	.+50     	; 0x131a <fdevopen+0x8a>
    12e8:	d1 87       	std	Z+9, r29	; 0x09
    12ea:	c0 87       	std	Z+8, r28	; 0x08
    12ec:	83 81       	ldd	r24, Z+3	; 0x03
    12ee:	82 60       	ori	r24, 0x02	; 2
    12f0:	83 83       	std	Z+3, r24	; 0x03
    12f2:	80 91 5c 02 	lds	r24, 0x025C	; 0x80025c <__iob+0x2>
    12f6:	90 91 5d 02 	lds	r25, 0x025D	; 0x80025d <__iob+0x3>
    12fa:	89 2b       	or	r24, r25
    12fc:	71 f4       	brne	.+28     	; 0x131a <fdevopen+0x8a>
    12fe:	f0 93 5d 02 	sts	0x025D, r31	; 0x80025d <__iob+0x3>
    1302:	e0 93 5c 02 	sts	0x025C, r30	; 0x80025c <__iob+0x2>
    1306:	80 91 5e 02 	lds	r24, 0x025E	; 0x80025e <__iob+0x4>
    130a:	90 91 5f 02 	lds	r25, 0x025F	; 0x80025f <__iob+0x5>
    130e:	89 2b       	or	r24, r25
    1310:	21 f4       	brne	.+8      	; 0x131a <fdevopen+0x8a>
    1312:	f0 93 5f 02 	sts	0x025F, r31	; 0x80025f <__iob+0x5>
    1316:	e0 93 5e 02 	sts	0x025E, r30	; 0x80025e <__iob+0x4>
    131a:	cf 01       	movw	r24, r30
    131c:	df 91       	pop	r29
    131e:	cf 91       	pop	r28
    1320:	1f 91       	pop	r17
    1322:	0f 91       	pop	r16
    1324:	08 95       	ret

00001326 <printf>:
    1326:	a0 e0       	ldi	r26, 0x00	; 0
    1328:	b0 e0       	ldi	r27, 0x00	; 0
    132a:	e9 e9       	ldi	r30, 0x99	; 153
    132c:	f9 e0       	ldi	r31, 0x09	; 9
    132e:	0c 94 6d 0c 	jmp	0x18da	; 0x18da <__prologue_saves__+0x20>
    1332:	ae 01       	movw	r20, r28
    1334:	4b 5f       	subi	r20, 0xFB	; 251
    1336:	5f 4f       	sbci	r21, 0xFF	; 255
    1338:	fa 01       	movw	r30, r20
    133a:	61 91       	ld	r22, Z+
    133c:	71 91       	ld	r23, Z+
    133e:	af 01       	movw	r20, r30
    1340:	80 91 5c 02 	lds	r24, 0x025C	; 0x80025c <__iob+0x2>
    1344:	90 91 5d 02 	lds	r25, 0x025D	; 0x80025d <__iob+0x3>
    1348:	0e 94 a9 09 	call	0x1352	; 0x1352 <vfprintf>
    134c:	e2 e0       	ldi	r30, 0x02	; 2
    134e:	0c 94 89 0c 	jmp	0x1912	; 0x1912 <__epilogue_restores__+0x20>

00001352 <vfprintf>:
    1352:	ab e0       	ldi	r26, 0x0B	; 11
    1354:	b0 e0       	ldi	r27, 0x00	; 0
    1356:	ef ea       	ldi	r30, 0xAF	; 175
    1358:	f9 e0       	ldi	r31, 0x09	; 9
    135a:	0c 94 5d 0c 	jmp	0x18ba	; 0x18ba <__prologue_saves__>
    135e:	6c 01       	movw	r12, r24
    1360:	7b 01       	movw	r14, r22
    1362:	8a 01       	movw	r16, r20
    1364:	fc 01       	movw	r30, r24
    1366:	17 82       	std	Z+7, r1	; 0x07
    1368:	16 82       	std	Z+6, r1	; 0x06
    136a:	83 81       	ldd	r24, Z+3	; 0x03
    136c:	81 ff       	sbrs	r24, 1
    136e:	cc c1       	rjmp	.+920    	; 0x1708 <vfprintf+0x3b6>
    1370:	ce 01       	movw	r24, r28
    1372:	01 96       	adiw	r24, 0x01	; 1
    1374:	3c 01       	movw	r6, r24
    1376:	f6 01       	movw	r30, r12
    1378:	93 81       	ldd	r25, Z+3	; 0x03
    137a:	f7 01       	movw	r30, r14
    137c:	93 fd       	sbrc	r25, 3
    137e:	85 91       	lpm	r24, Z+
    1380:	93 ff       	sbrs	r25, 3
    1382:	81 91       	ld	r24, Z+
    1384:	7f 01       	movw	r14, r30
    1386:	88 23       	and	r24, r24
    1388:	09 f4       	brne	.+2      	; 0x138c <vfprintf+0x3a>
    138a:	ba c1       	rjmp	.+884    	; 0x1700 <vfprintf+0x3ae>
    138c:	85 32       	cpi	r24, 0x25	; 37
    138e:	39 f4       	brne	.+14     	; 0x139e <vfprintf+0x4c>
    1390:	93 fd       	sbrc	r25, 3
    1392:	85 91       	lpm	r24, Z+
    1394:	93 ff       	sbrs	r25, 3
    1396:	81 91       	ld	r24, Z+
    1398:	7f 01       	movw	r14, r30
    139a:	85 32       	cpi	r24, 0x25	; 37
    139c:	29 f4       	brne	.+10     	; 0x13a8 <vfprintf+0x56>
    139e:	b6 01       	movw	r22, r12
    13a0:	90 e0       	ldi	r25, 0x00	; 0
    13a2:	0e 94 c3 0b 	call	0x1786	; 0x1786 <fputc>
    13a6:	e7 cf       	rjmp	.-50     	; 0x1376 <vfprintf+0x24>
    13a8:	91 2c       	mov	r9, r1
    13aa:	21 2c       	mov	r2, r1
    13ac:	31 2c       	mov	r3, r1
    13ae:	ff e1       	ldi	r31, 0x1F	; 31
    13b0:	f3 15       	cp	r31, r3
    13b2:	d8 f0       	brcs	.+54     	; 0x13ea <vfprintf+0x98>
    13b4:	8b 32       	cpi	r24, 0x2B	; 43
    13b6:	79 f0       	breq	.+30     	; 0x13d6 <vfprintf+0x84>
    13b8:	38 f4       	brcc	.+14     	; 0x13c8 <vfprintf+0x76>
    13ba:	80 32       	cpi	r24, 0x20	; 32
    13bc:	79 f0       	breq	.+30     	; 0x13dc <vfprintf+0x8a>
    13be:	83 32       	cpi	r24, 0x23	; 35
    13c0:	a1 f4       	brne	.+40     	; 0x13ea <vfprintf+0x98>
    13c2:	23 2d       	mov	r18, r3
    13c4:	20 61       	ori	r18, 0x10	; 16
    13c6:	1d c0       	rjmp	.+58     	; 0x1402 <vfprintf+0xb0>
    13c8:	8d 32       	cpi	r24, 0x2D	; 45
    13ca:	61 f0       	breq	.+24     	; 0x13e4 <vfprintf+0x92>
    13cc:	80 33       	cpi	r24, 0x30	; 48
    13ce:	69 f4       	brne	.+26     	; 0x13ea <vfprintf+0x98>
    13d0:	23 2d       	mov	r18, r3
    13d2:	21 60       	ori	r18, 0x01	; 1
    13d4:	16 c0       	rjmp	.+44     	; 0x1402 <vfprintf+0xb0>
    13d6:	83 2d       	mov	r24, r3
    13d8:	82 60       	ori	r24, 0x02	; 2
    13da:	38 2e       	mov	r3, r24
    13dc:	e3 2d       	mov	r30, r3
    13de:	e4 60       	ori	r30, 0x04	; 4
    13e0:	3e 2e       	mov	r3, r30
    13e2:	2a c0       	rjmp	.+84     	; 0x1438 <vfprintf+0xe6>
    13e4:	f3 2d       	mov	r31, r3
    13e6:	f8 60       	ori	r31, 0x08	; 8
    13e8:	1d c0       	rjmp	.+58     	; 0x1424 <vfprintf+0xd2>
    13ea:	37 fc       	sbrc	r3, 7
    13ec:	2d c0       	rjmp	.+90     	; 0x1448 <vfprintf+0xf6>
    13ee:	20 ed       	ldi	r18, 0xD0	; 208
    13f0:	28 0f       	add	r18, r24
    13f2:	2a 30       	cpi	r18, 0x0A	; 10
    13f4:	40 f0       	brcs	.+16     	; 0x1406 <vfprintf+0xb4>
    13f6:	8e 32       	cpi	r24, 0x2E	; 46
    13f8:	b9 f4       	brne	.+46     	; 0x1428 <vfprintf+0xd6>
    13fa:	36 fc       	sbrc	r3, 6
    13fc:	81 c1       	rjmp	.+770    	; 0x1700 <vfprintf+0x3ae>
    13fe:	23 2d       	mov	r18, r3
    1400:	20 64       	ori	r18, 0x40	; 64
    1402:	32 2e       	mov	r3, r18
    1404:	19 c0       	rjmp	.+50     	; 0x1438 <vfprintf+0xe6>
    1406:	36 fe       	sbrs	r3, 6
    1408:	06 c0       	rjmp	.+12     	; 0x1416 <vfprintf+0xc4>
    140a:	8a e0       	ldi	r24, 0x0A	; 10
    140c:	98 9e       	mul	r9, r24
    140e:	20 0d       	add	r18, r0
    1410:	11 24       	eor	r1, r1
    1412:	92 2e       	mov	r9, r18
    1414:	11 c0       	rjmp	.+34     	; 0x1438 <vfprintf+0xe6>
    1416:	ea e0       	ldi	r30, 0x0A	; 10
    1418:	2e 9e       	mul	r2, r30
    141a:	20 0d       	add	r18, r0
    141c:	11 24       	eor	r1, r1
    141e:	22 2e       	mov	r2, r18
    1420:	f3 2d       	mov	r31, r3
    1422:	f0 62       	ori	r31, 0x20	; 32
    1424:	3f 2e       	mov	r3, r31
    1426:	08 c0       	rjmp	.+16     	; 0x1438 <vfprintf+0xe6>
    1428:	8c 36       	cpi	r24, 0x6C	; 108
    142a:	21 f4       	brne	.+8      	; 0x1434 <vfprintf+0xe2>
    142c:	83 2d       	mov	r24, r3
    142e:	80 68       	ori	r24, 0x80	; 128
    1430:	38 2e       	mov	r3, r24
    1432:	02 c0       	rjmp	.+4      	; 0x1438 <vfprintf+0xe6>
    1434:	88 36       	cpi	r24, 0x68	; 104
    1436:	41 f4       	brne	.+16     	; 0x1448 <vfprintf+0xf6>
    1438:	f7 01       	movw	r30, r14
    143a:	93 fd       	sbrc	r25, 3
    143c:	85 91       	lpm	r24, Z+
    143e:	93 ff       	sbrs	r25, 3
    1440:	81 91       	ld	r24, Z+
    1442:	7f 01       	movw	r14, r30
    1444:	81 11       	cpse	r24, r1
    1446:	b3 cf       	rjmp	.-154    	; 0x13ae <vfprintf+0x5c>
    1448:	98 2f       	mov	r25, r24
    144a:	9f 7d       	andi	r25, 0xDF	; 223
    144c:	95 54       	subi	r25, 0x45	; 69
    144e:	93 30       	cpi	r25, 0x03	; 3
    1450:	28 f4       	brcc	.+10     	; 0x145c <vfprintf+0x10a>
    1452:	0c 5f       	subi	r16, 0xFC	; 252
    1454:	1f 4f       	sbci	r17, 0xFF	; 255
    1456:	9f e3       	ldi	r25, 0x3F	; 63
    1458:	99 83       	std	Y+1, r25	; 0x01
    145a:	0d c0       	rjmp	.+26     	; 0x1476 <vfprintf+0x124>
    145c:	83 36       	cpi	r24, 0x63	; 99
    145e:	31 f0       	breq	.+12     	; 0x146c <vfprintf+0x11a>
    1460:	83 37       	cpi	r24, 0x73	; 115
    1462:	71 f0       	breq	.+28     	; 0x1480 <vfprintf+0x12e>
    1464:	83 35       	cpi	r24, 0x53	; 83
    1466:	09 f0       	breq	.+2      	; 0x146a <vfprintf+0x118>
    1468:	59 c0       	rjmp	.+178    	; 0x151c <vfprintf+0x1ca>
    146a:	21 c0       	rjmp	.+66     	; 0x14ae <vfprintf+0x15c>
    146c:	f8 01       	movw	r30, r16
    146e:	80 81       	ld	r24, Z
    1470:	89 83       	std	Y+1, r24	; 0x01
    1472:	0e 5f       	subi	r16, 0xFE	; 254
    1474:	1f 4f       	sbci	r17, 0xFF	; 255
    1476:	88 24       	eor	r8, r8
    1478:	83 94       	inc	r8
    147a:	91 2c       	mov	r9, r1
    147c:	53 01       	movw	r10, r6
    147e:	13 c0       	rjmp	.+38     	; 0x14a6 <vfprintf+0x154>
    1480:	28 01       	movw	r4, r16
    1482:	f2 e0       	ldi	r31, 0x02	; 2
    1484:	4f 0e       	add	r4, r31
    1486:	51 1c       	adc	r5, r1
    1488:	f8 01       	movw	r30, r16
    148a:	a0 80       	ld	r10, Z
    148c:	b1 80       	ldd	r11, Z+1	; 0x01
    148e:	36 fe       	sbrs	r3, 6
    1490:	03 c0       	rjmp	.+6      	; 0x1498 <vfprintf+0x146>
    1492:	69 2d       	mov	r22, r9
    1494:	70 e0       	ldi	r23, 0x00	; 0
    1496:	02 c0       	rjmp	.+4      	; 0x149c <vfprintf+0x14a>
    1498:	6f ef       	ldi	r22, 0xFF	; 255
    149a:	7f ef       	ldi	r23, 0xFF	; 255
    149c:	c5 01       	movw	r24, r10
    149e:	0e 94 b8 0b 	call	0x1770	; 0x1770 <strnlen>
    14a2:	4c 01       	movw	r8, r24
    14a4:	82 01       	movw	r16, r4
    14a6:	f3 2d       	mov	r31, r3
    14a8:	ff 77       	andi	r31, 0x7F	; 127
    14aa:	3f 2e       	mov	r3, r31
    14ac:	16 c0       	rjmp	.+44     	; 0x14da <vfprintf+0x188>
    14ae:	28 01       	movw	r4, r16
    14b0:	22 e0       	ldi	r18, 0x02	; 2
    14b2:	42 0e       	add	r4, r18
    14b4:	51 1c       	adc	r5, r1
    14b6:	f8 01       	movw	r30, r16
    14b8:	a0 80       	ld	r10, Z
    14ba:	b1 80       	ldd	r11, Z+1	; 0x01
    14bc:	36 fe       	sbrs	r3, 6
    14be:	03 c0       	rjmp	.+6      	; 0x14c6 <vfprintf+0x174>
    14c0:	69 2d       	mov	r22, r9
    14c2:	70 e0       	ldi	r23, 0x00	; 0
    14c4:	02 c0       	rjmp	.+4      	; 0x14ca <vfprintf+0x178>
    14c6:	6f ef       	ldi	r22, 0xFF	; 255
    14c8:	7f ef       	ldi	r23, 0xFF	; 255
    14ca:	c5 01       	movw	r24, r10
    14cc:	0e 94 a6 0b 	call	0x174c	; 0x174c <strnlen_P>
    14d0:	4c 01       	movw	r8, r24
    14d2:	f3 2d       	mov	r31, r3
    14d4:	f0 68       	ori	r31, 0x80	; 128
    14d6:	3f 2e       	mov	r3, r31
    14d8:	82 01       	movw	r16, r4
    14da:	33 fc       	sbrc	r3, 3
    14dc:	1b c0       	rjmp	.+54     	; 0x1514 <vfprintf+0x1c2>
    14de:	82 2d       	mov	r24, r2
    14e0:	90 e0       	ldi	r25, 0x00	; 0
    14e2:	88 16       	cp	r8, r24
    14e4:	99 06       	cpc	r9, r25
    14e6:	b0 f4       	brcc	.+44     	; 0x1514 <vfprintf+0x1c2>
    14e8:	b6 01       	movw	r22, r12
    14ea:	80 e2       	ldi	r24, 0x20	; 32
    14ec:	90 e0       	ldi	r25, 0x00	; 0
    14ee:	0e 94 c3 0b 	call	0x1786	; 0x1786 <fputc>
    14f2:	2a 94       	dec	r2
    14f4:	f4 cf       	rjmp	.-24     	; 0x14de <vfprintf+0x18c>
    14f6:	f5 01       	movw	r30, r10
    14f8:	37 fc       	sbrc	r3, 7
    14fa:	85 91       	lpm	r24, Z+
    14fc:	37 fe       	sbrs	r3, 7
    14fe:	81 91       	ld	r24, Z+
    1500:	5f 01       	movw	r10, r30
    1502:	b6 01       	movw	r22, r12
    1504:	90 e0       	ldi	r25, 0x00	; 0
    1506:	0e 94 c3 0b 	call	0x1786	; 0x1786 <fputc>
    150a:	21 10       	cpse	r2, r1
    150c:	2a 94       	dec	r2
    150e:	21 e0       	ldi	r18, 0x01	; 1
    1510:	82 1a       	sub	r8, r18
    1512:	91 08       	sbc	r9, r1
    1514:	81 14       	cp	r8, r1
    1516:	91 04       	cpc	r9, r1
    1518:	71 f7       	brne	.-36     	; 0x14f6 <vfprintf+0x1a4>
    151a:	e8 c0       	rjmp	.+464    	; 0x16ec <vfprintf+0x39a>
    151c:	84 36       	cpi	r24, 0x64	; 100
    151e:	11 f0       	breq	.+4      	; 0x1524 <vfprintf+0x1d2>
    1520:	89 36       	cpi	r24, 0x69	; 105
    1522:	41 f5       	brne	.+80     	; 0x1574 <vfprintf+0x222>
    1524:	f8 01       	movw	r30, r16
    1526:	37 fe       	sbrs	r3, 7
    1528:	07 c0       	rjmp	.+14     	; 0x1538 <vfprintf+0x1e6>
    152a:	60 81       	ld	r22, Z
    152c:	71 81       	ldd	r23, Z+1	; 0x01
    152e:	82 81       	ldd	r24, Z+2	; 0x02
    1530:	93 81       	ldd	r25, Z+3	; 0x03
    1532:	0c 5f       	subi	r16, 0xFC	; 252
    1534:	1f 4f       	sbci	r17, 0xFF	; 255
    1536:	08 c0       	rjmp	.+16     	; 0x1548 <vfprintf+0x1f6>
    1538:	60 81       	ld	r22, Z
    153a:	71 81       	ldd	r23, Z+1	; 0x01
    153c:	07 2e       	mov	r0, r23
    153e:	00 0c       	add	r0, r0
    1540:	88 0b       	sbc	r24, r24
    1542:	99 0b       	sbc	r25, r25
    1544:	0e 5f       	subi	r16, 0xFE	; 254
    1546:	1f 4f       	sbci	r17, 0xFF	; 255
    1548:	f3 2d       	mov	r31, r3
    154a:	ff 76       	andi	r31, 0x6F	; 111
    154c:	3f 2e       	mov	r3, r31
    154e:	97 ff       	sbrs	r25, 7
    1550:	09 c0       	rjmp	.+18     	; 0x1564 <vfprintf+0x212>
    1552:	90 95       	com	r25
    1554:	80 95       	com	r24
    1556:	70 95       	com	r23
    1558:	61 95       	neg	r22
    155a:	7f 4f       	sbci	r23, 0xFF	; 255
    155c:	8f 4f       	sbci	r24, 0xFF	; 255
    155e:	9f 4f       	sbci	r25, 0xFF	; 255
    1560:	f0 68       	ori	r31, 0x80	; 128
    1562:	3f 2e       	mov	r3, r31
    1564:	2a e0       	ldi	r18, 0x0A	; 10
    1566:	30 e0       	ldi	r19, 0x00	; 0
    1568:	a3 01       	movw	r20, r6
    156a:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__ultoa_invert>
    156e:	88 2e       	mov	r8, r24
    1570:	86 18       	sub	r8, r6
    1572:	45 c0       	rjmp	.+138    	; 0x15fe <vfprintf+0x2ac>
    1574:	85 37       	cpi	r24, 0x75	; 117
    1576:	31 f4       	brne	.+12     	; 0x1584 <vfprintf+0x232>
    1578:	23 2d       	mov	r18, r3
    157a:	2f 7e       	andi	r18, 0xEF	; 239
    157c:	b2 2e       	mov	r11, r18
    157e:	2a e0       	ldi	r18, 0x0A	; 10
    1580:	30 e0       	ldi	r19, 0x00	; 0
    1582:	25 c0       	rjmp	.+74     	; 0x15ce <vfprintf+0x27c>
    1584:	93 2d       	mov	r25, r3
    1586:	99 7f       	andi	r25, 0xF9	; 249
    1588:	b9 2e       	mov	r11, r25
    158a:	8f 36       	cpi	r24, 0x6F	; 111
    158c:	c1 f0       	breq	.+48     	; 0x15be <vfprintf+0x26c>
    158e:	18 f4       	brcc	.+6      	; 0x1596 <vfprintf+0x244>
    1590:	88 35       	cpi	r24, 0x58	; 88
    1592:	79 f0       	breq	.+30     	; 0x15b2 <vfprintf+0x260>
    1594:	b5 c0       	rjmp	.+362    	; 0x1700 <vfprintf+0x3ae>
    1596:	80 37       	cpi	r24, 0x70	; 112
    1598:	19 f0       	breq	.+6      	; 0x15a0 <vfprintf+0x24e>
    159a:	88 37       	cpi	r24, 0x78	; 120
    159c:	21 f0       	breq	.+8      	; 0x15a6 <vfprintf+0x254>
    159e:	b0 c0       	rjmp	.+352    	; 0x1700 <vfprintf+0x3ae>
    15a0:	e9 2f       	mov	r30, r25
    15a2:	e0 61       	ori	r30, 0x10	; 16
    15a4:	be 2e       	mov	r11, r30
    15a6:	b4 fe       	sbrs	r11, 4
    15a8:	0d c0       	rjmp	.+26     	; 0x15c4 <vfprintf+0x272>
    15aa:	fb 2d       	mov	r31, r11
    15ac:	f4 60       	ori	r31, 0x04	; 4
    15ae:	bf 2e       	mov	r11, r31
    15b0:	09 c0       	rjmp	.+18     	; 0x15c4 <vfprintf+0x272>
    15b2:	34 fe       	sbrs	r3, 4
    15b4:	0a c0       	rjmp	.+20     	; 0x15ca <vfprintf+0x278>
    15b6:	29 2f       	mov	r18, r25
    15b8:	26 60       	ori	r18, 0x06	; 6
    15ba:	b2 2e       	mov	r11, r18
    15bc:	06 c0       	rjmp	.+12     	; 0x15ca <vfprintf+0x278>
    15be:	28 e0       	ldi	r18, 0x08	; 8
    15c0:	30 e0       	ldi	r19, 0x00	; 0
    15c2:	05 c0       	rjmp	.+10     	; 0x15ce <vfprintf+0x27c>
    15c4:	20 e1       	ldi	r18, 0x10	; 16
    15c6:	30 e0       	ldi	r19, 0x00	; 0
    15c8:	02 c0       	rjmp	.+4      	; 0x15ce <vfprintf+0x27c>
    15ca:	20 e1       	ldi	r18, 0x10	; 16
    15cc:	32 e0       	ldi	r19, 0x02	; 2
    15ce:	f8 01       	movw	r30, r16
    15d0:	b7 fe       	sbrs	r11, 7
    15d2:	07 c0       	rjmp	.+14     	; 0x15e2 <vfprintf+0x290>
    15d4:	60 81       	ld	r22, Z
    15d6:	71 81       	ldd	r23, Z+1	; 0x01
    15d8:	82 81       	ldd	r24, Z+2	; 0x02
    15da:	93 81       	ldd	r25, Z+3	; 0x03
    15dc:	0c 5f       	subi	r16, 0xFC	; 252
    15de:	1f 4f       	sbci	r17, 0xFF	; 255
    15e0:	06 c0       	rjmp	.+12     	; 0x15ee <vfprintf+0x29c>
    15e2:	60 81       	ld	r22, Z
    15e4:	71 81       	ldd	r23, Z+1	; 0x01
    15e6:	80 e0       	ldi	r24, 0x00	; 0
    15e8:	90 e0       	ldi	r25, 0x00	; 0
    15ea:	0e 5f       	subi	r16, 0xFE	; 254
    15ec:	1f 4f       	sbci	r17, 0xFF	; 255
    15ee:	a3 01       	movw	r20, r6
    15f0:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__ultoa_invert>
    15f4:	88 2e       	mov	r8, r24
    15f6:	86 18       	sub	r8, r6
    15f8:	fb 2d       	mov	r31, r11
    15fa:	ff 77       	andi	r31, 0x7F	; 127
    15fc:	3f 2e       	mov	r3, r31
    15fe:	36 fe       	sbrs	r3, 6
    1600:	0d c0       	rjmp	.+26     	; 0x161c <vfprintf+0x2ca>
    1602:	23 2d       	mov	r18, r3
    1604:	2e 7f       	andi	r18, 0xFE	; 254
    1606:	a2 2e       	mov	r10, r18
    1608:	89 14       	cp	r8, r9
    160a:	58 f4       	brcc	.+22     	; 0x1622 <vfprintf+0x2d0>
    160c:	34 fe       	sbrs	r3, 4
    160e:	0b c0       	rjmp	.+22     	; 0x1626 <vfprintf+0x2d4>
    1610:	32 fc       	sbrc	r3, 2
    1612:	09 c0       	rjmp	.+18     	; 0x1626 <vfprintf+0x2d4>
    1614:	83 2d       	mov	r24, r3
    1616:	8e 7e       	andi	r24, 0xEE	; 238
    1618:	a8 2e       	mov	r10, r24
    161a:	05 c0       	rjmp	.+10     	; 0x1626 <vfprintf+0x2d4>
    161c:	b8 2c       	mov	r11, r8
    161e:	a3 2c       	mov	r10, r3
    1620:	03 c0       	rjmp	.+6      	; 0x1628 <vfprintf+0x2d6>
    1622:	b8 2c       	mov	r11, r8
    1624:	01 c0       	rjmp	.+2      	; 0x1628 <vfprintf+0x2d6>
    1626:	b9 2c       	mov	r11, r9
    1628:	a4 fe       	sbrs	r10, 4
    162a:	0f c0       	rjmp	.+30     	; 0x164a <vfprintf+0x2f8>
    162c:	fe 01       	movw	r30, r28
    162e:	e8 0d       	add	r30, r8
    1630:	f1 1d       	adc	r31, r1
    1632:	80 81       	ld	r24, Z
    1634:	80 33       	cpi	r24, 0x30	; 48
    1636:	21 f4       	brne	.+8      	; 0x1640 <vfprintf+0x2ee>
    1638:	9a 2d       	mov	r25, r10
    163a:	99 7e       	andi	r25, 0xE9	; 233
    163c:	a9 2e       	mov	r10, r25
    163e:	09 c0       	rjmp	.+18     	; 0x1652 <vfprintf+0x300>
    1640:	a2 fe       	sbrs	r10, 2
    1642:	06 c0       	rjmp	.+12     	; 0x1650 <vfprintf+0x2fe>
    1644:	b3 94       	inc	r11
    1646:	b3 94       	inc	r11
    1648:	04 c0       	rjmp	.+8      	; 0x1652 <vfprintf+0x300>
    164a:	8a 2d       	mov	r24, r10
    164c:	86 78       	andi	r24, 0x86	; 134
    164e:	09 f0       	breq	.+2      	; 0x1652 <vfprintf+0x300>
    1650:	b3 94       	inc	r11
    1652:	a3 fc       	sbrc	r10, 3
    1654:	11 c0       	rjmp	.+34     	; 0x1678 <vfprintf+0x326>
    1656:	a0 fe       	sbrs	r10, 0
    1658:	06 c0       	rjmp	.+12     	; 0x1666 <vfprintf+0x314>
    165a:	b2 14       	cp	r11, r2
    165c:	88 f4       	brcc	.+34     	; 0x1680 <vfprintf+0x32e>
    165e:	28 0c       	add	r2, r8
    1660:	92 2c       	mov	r9, r2
    1662:	9b 18       	sub	r9, r11
    1664:	0e c0       	rjmp	.+28     	; 0x1682 <vfprintf+0x330>
    1666:	b2 14       	cp	r11, r2
    1668:	60 f4       	brcc	.+24     	; 0x1682 <vfprintf+0x330>
    166a:	b6 01       	movw	r22, r12
    166c:	80 e2       	ldi	r24, 0x20	; 32
    166e:	90 e0       	ldi	r25, 0x00	; 0
    1670:	0e 94 c3 0b 	call	0x1786	; 0x1786 <fputc>
    1674:	b3 94       	inc	r11
    1676:	f7 cf       	rjmp	.-18     	; 0x1666 <vfprintf+0x314>
    1678:	b2 14       	cp	r11, r2
    167a:	18 f4       	brcc	.+6      	; 0x1682 <vfprintf+0x330>
    167c:	2b 18       	sub	r2, r11
    167e:	02 c0       	rjmp	.+4      	; 0x1684 <vfprintf+0x332>
    1680:	98 2c       	mov	r9, r8
    1682:	21 2c       	mov	r2, r1
    1684:	a4 fe       	sbrs	r10, 4
    1686:	10 c0       	rjmp	.+32     	; 0x16a8 <vfprintf+0x356>
    1688:	b6 01       	movw	r22, r12
    168a:	80 e3       	ldi	r24, 0x30	; 48
    168c:	90 e0       	ldi	r25, 0x00	; 0
    168e:	0e 94 c3 0b 	call	0x1786	; 0x1786 <fputc>
    1692:	a2 fe       	sbrs	r10, 2
    1694:	17 c0       	rjmp	.+46     	; 0x16c4 <vfprintf+0x372>
    1696:	a1 fc       	sbrc	r10, 1
    1698:	03 c0       	rjmp	.+6      	; 0x16a0 <vfprintf+0x34e>
    169a:	88 e7       	ldi	r24, 0x78	; 120
    169c:	90 e0       	ldi	r25, 0x00	; 0
    169e:	02 c0       	rjmp	.+4      	; 0x16a4 <vfprintf+0x352>
    16a0:	88 e5       	ldi	r24, 0x58	; 88
    16a2:	90 e0       	ldi	r25, 0x00	; 0
    16a4:	b6 01       	movw	r22, r12
    16a6:	0c c0       	rjmp	.+24     	; 0x16c0 <vfprintf+0x36e>
    16a8:	8a 2d       	mov	r24, r10
    16aa:	86 78       	andi	r24, 0x86	; 134
    16ac:	59 f0       	breq	.+22     	; 0x16c4 <vfprintf+0x372>
    16ae:	a1 fe       	sbrs	r10, 1
    16b0:	02 c0       	rjmp	.+4      	; 0x16b6 <vfprintf+0x364>
    16b2:	8b e2       	ldi	r24, 0x2B	; 43
    16b4:	01 c0       	rjmp	.+2      	; 0x16b8 <vfprintf+0x366>
    16b6:	80 e2       	ldi	r24, 0x20	; 32
    16b8:	a7 fc       	sbrc	r10, 7
    16ba:	8d e2       	ldi	r24, 0x2D	; 45
    16bc:	b6 01       	movw	r22, r12
    16be:	90 e0       	ldi	r25, 0x00	; 0
    16c0:	0e 94 c3 0b 	call	0x1786	; 0x1786 <fputc>
    16c4:	89 14       	cp	r8, r9
    16c6:	38 f4       	brcc	.+14     	; 0x16d6 <vfprintf+0x384>
    16c8:	b6 01       	movw	r22, r12
    16ca:	80 e3       	ldi	r24, 0x30	; 48
    16cc:	90 e0       	ldi	r25, 0x00	; 0
    16ce:	0e 94 c3 0b 	call	0x1786	; 0x1786 <fputc>
    16d2:	9a 94       	dec	r9
    16d4:	f7 cf       	rjmp	.-18     	; 0x16c4 <vfprintf+0x372>
    16d6:	8a 94       	dec	r8
    16d8:	f3 01       	movw	r30, r6
    16da:	e8 0d       	add	r30, r8
    16dc:	f1 1d       	adc	r31, r1
    16de:	80 81       	ld	r24, Z
    16e0:	b6 01       	movw	r22, r12
    16e2:	90 e0       	ldi	r25, 0x00	; 0
    16e4:	0e 94 c3 0b 	call	0x1786	; 0x1786 <fputc>
    16e8:	81 10       	cpse	r8, r1
    16ea:	f5 cf       	rjmp	.-22     	; 0x16d6 <vfprintf+0x384>
    16ec:	22 20       	and	r2, r2
    16ee:	09 f4       	brne	.+2      	; 0x16f2 <vfprintf+0x3a0>
    16f0:	42 ce       	rjmp	.-892    	; 0x1376 <vfprintf+0x24>
    16f2:	b6 01       	movw	r22, r12
    16f4:	80 e2       	ldi	r24, 0x20	; 32
    16f6:	90 e0       	ldi	r25, 0x00	; 0
    16f8:	0e 94 c3 0b 	call	0x1786	; 0x1786 <fputc>
    16fc:	2a 94       	dec	r2
    16fe:	f6 cf       	rjmp	.-20     	; 0x16ec <vfprintf+0x39a>
    1700:	f6 01       	movw	r30, r12
    1702:	86 81       	ldd	r24, Z+6	; 0x06
    1704:	97 81       	ldd	r25, Z+7	; 0x07
    1706:	02 c0       	rjmp	.+4      	; 0x170c <vfprintf+0x3ba>
    1708:	8f ef       	ldi	r24, 0xFF	; 255
    170a:	9f ef       	ldi	r25, 0xFF	; 255
    170c:	2b 96       	adiw	r28, 0x0b	; 11
    170e:	e2 e1       	ldi	r30, 0x12	; 18
    1710:	0c 94 79 0c 	jmp	0x18f2	; 0x18f2 <__epilogue_restores__>

00001714 <calloc>:
    1714:	0f 93       	push	r16
    1716:	1f 93       	push	r17
    1718:	cf 93       	push	r28
    171a:	df 93       	push	r29
    171c:	86 9f       	mul	r24, r22
    171e:	80 01       	movw	r16, r0
    1720:	87 9f       	mul	r24, r23
    1722:	10 0d       	add	r17, r0
    1724:	96 9f       	mul	r25, r22
    1726:	10 0d       	add	r17, r0
    1728:	11 24       	eor	r1, r1
    172a:	c8 01       	movw	r24, r16
    172c:	0e 94 20 08 	call	0x1040	; 0x1040 <malloc>
    1730:	ec 01       	movw	r28, r24
    1732:	00 97       	sbiw	r24, 0x00	; 0
    1734:	29 f0       	breq	.+10     	; 0x1740 <calloc+0x2c>
    1736:	a8 01       	movw	r20, r16
    1738:	60 e0       	ldi	r22, 0x00	; 0
    173a:	70 e0       	ldi	r23, 0x00	; 0
    173c:	0e 94 b1 0b 	call	0x1762	; 0x1762 <memset>
    1740:	ce 01       	movw	r24, r28
    1742:	df 91       	pop	r29
    1744:	cf 91       	pop	r28
    1746:	1f 91       	pop	r17
    1748:	0f 91       	pop	r16
    174a:	08 95       	ret

0000174c <strnlen_P>:
    174c:	fc 01       	movw	r30, r24
    174e:	05 90       	lpm	r0, Z+
    1750:	61 50       	subi	r22, 0x01	; 1
    1752:	70 40       	sbci	r23, 0x00	; 0
    1754:	01 10       	cpse	r0, r1
    1756:	d8 f7       	brcc	.-10     	; 0x174e <strnlen_P+0x2>
    1758:	80 95       	com	r24
    175a:	90 95       	com	r25
    175c:	8e 0f       	add	r24, r30
    175e:	9f 1f       	adc	r25, r31
    1760:	08 95       	ret

00001762 <memset>:
    1762:	dc 01       	movw	r26, r24
    1764:	01 c0       	rjmp	.+2      	; 0x1768 <memset+0x6>
    1766:	6d 93       	st	X+, r22
    1768:	41 50       	subi	r20, 0x01	; 1
    176a:	50 40       	sbci	r21, 0x00	; 0
    176c:	e0 f7       	brcc	.-8      	; 0x1766 <memset+0x4>
    176e:	08 95       	ret

00001770 <strnlen>:
    1770:	fc 01       	movw	r30, r24
    1772:	61 50       	subi	r22, 0x01	; 1
    1774:	70 40       	sbci	r23, 0x00	; 0
    1776:	01 90       	ld	r0, Z+
    1778:	01 10       	cpse	r0, r1
    177a:	d8 f7       	brcc	.-10     	; 0x1772 <strnlen+0x2>
    177c:	80 95       	com	r24
    177e:	90 95       	com	r25
    1780:	8e 0f       	add	r24, r30
    1782:	9f 1f       	adc	r25, r31
    1784:	08 95       	ret

00001786 <fputc>:
    1786:	0f 93       	push	r16
    1788:	1f 93       	push	r17
    178a:	cf 93       	push	r28
    178c:	df 93       	push	r29
    178e:	fb 01       	movw	r30, r22
    1790:	23 81       	ldd	r18, Z+3	; 0x03
    1792:	21 fd       	sbrc	r18, 1
    1794:	03 c0       	rjmp	.+6      	; 0x179c <fputc+0x16>
    1796:	8f ef       	ldi	r24, 0xFF	; 255
    1798:	9f ef       	ldi	r25, 0xFF	; 255
    179a:	2c c0       	rjmp	.+88     	; 0x17f4 <fputc+0x6e>
    179c:	22 ff       	sbrs	r18, 2
    179e:	16 c0       	rjmp	.+44     	; 0x17cc <fputc+0x46>
    17a0:	46 81       	ldd	r20, Z+6	; 0x06
    17a2:	57 81       	ldd	r21, Z+7	; 0x07
    17a4:	24 81       	ldd	r18, Z+4	; 0x04
    17a6:	35 81       	ldd	r19, Z+5	; 0x05
    17a8:	42 17       	cp	r20, r18
    17aa:	53 07       	cpc	r21, r19
    17ac:	44 f4       	brge	.+16     	; 0x17be <fputc+0x38>
    17ae:	a0 81       	ld	r26, Z
    17b0:	b1 81       	ldd	r27, Z+1	; 0x01
    17b2:	9d 01       	movw	r18, r26
    17b4:	2f 5f       	subi	r18, 0xFF	; 255
    17b6:	3f 4f       	sbci	r19, 0xFF	; 255
    17b8:	31 83       	std	Z+1, r19	; 0x01
    17ba:	20 83       	st	Z, r18
    17bc:	8c 93       	st	X, r24
    17be:	26 81       	ldd	r18, Z+6	; 0x06
    17c0:	37 81       	ldd	r19, Z+7	; 0x07
    17c2:	2f 5f       	subi	r18, 0xFF	; 255
    17c4:	3f 4f       	sbci	r19, 0xFF	; 255
    17c6:	37 83       	std	Z+7, r19	; 0x07
    17c8:	26 83       	std	Z+6, r18	; 0x06
    17ca:	14 c0       	rjmp	.+40     	; 0x17f4 <fputc+0x6e>
    17cc:	8b 01       	movw	r16, r22
    17ce:	ec 01       	movw	r28, r24
    17d0:	fb 01       	movw	r30, r22
    17d2:	00 84       	ldd	r0, Z+8	; 0x08
    17d4:	f1 85       	ldd	r31, Z+9	; 0x09
    17d6:	e0 2d       	mov	r30, r0
    17d8:	09 95       	icall
    17da:	89 2b       	or	r24, r25
    17dc:	e1 f6       	brne	.-72     	; 0x1796 <fputc+0x10>
    17de:	d8 01       	movw	r26, r16
    17e0:	16 96       	adiw	r26, 0x06	; 6
    17e2:	8d 91       	ld	r24, X+
    17e4:	9c 91       	ld	r25, X
    17e6:	17 97       	sbiw	r26, 0x07	; 7
    17e8:	01 96       	adiw	r24, 0x01	; 1
    17ea:	17 96       	adiw	r26, 0x07	; 7
    17ec:	9c 93       	st	X, r25
    17ee:	8e 93       	st	-X, r24
    17f0:	16 97       	sbiw	r26, 0x06	; 6
    17f2:	ce 01       	movw	r24, r28
    17f4:	df 91       	pop	r29
    17f6:	cf 91       	pop	r28
    17f8:	1f 91       	pop	r17
    17fa:	0f 91       	pop	r16
    17fc:	08 95       	ret

000017fe <__ultoa_invert>:
    17fe:	fa 01       	movw	r30, r20
    1800:	aa 27       	eor	r26, r26
    1802:	28 30       	cpi	r18, 0x08	; 8
    1804:	51 f1       	breq	.+84     	; 0x185a <__ultoa_invert+0x5c>
    1806:	20 31       	cpi	r18, 0x10	; 16
    1808:	81 f1       	breq	.+96     	; 0x186a <__ultoa_invert+0x6c>
    180a:	e8 94       	clt
    180c:	6f 93       	push	r22
    180e:	6e 7f       	andi	r22, 0xFE	; 254
    1810:	6e 5f       	subi	r22, 0xFE	; 254
    1812:	7f 4f       	sbci	r23, 0xFF	; 255
    1814:	8f 4f       	sbci	r24, 0xFF	; 255
    1816:	9f 4f       	sbci	r25, 0xFF	; 255
    1818:	af 4f       	sbci	r26, 0xFF	; 255
    181a:	b1 e0       	ldi	r27, 0x01	; 1
    181c:	3e d0       	rcall	.+124    	; 0x189a <__ultoa_invert+0x9c>
    181e:	b4 e0       	ldi	r27, 0x04	; 4
    1820:	3c d0       	rcall	.+120    	; 0x189a <__ultoa_invert+0x9c>
    1822:	67 0f       	add	r22, r23
    1824:	78 1f       	adc	r23, r24
    1826:	89 1f       	adc	r24, r25
    1828:	9a 1f       	adc	r25, r26
    182a:	a1 1d       	adc	r26, r1
    182c:	68 0f       	add	r22, r24
    182e:	79 1f       	adc	r23, r25
    1830:	8a 1f       	adc	r24, r26
    1832:	91 1d       	adc	r25, r1
    1834:	a1 1d       	adc	r26, r1
    1836:	6a 0f       	add	r22, r26
    1838:	71 1d       	adc	r23, r1
    183a:	81 1d       	adc	r24, r1
    183c:	91 1d       	adc	r25, r1
    183e:	a1 1d       	adc	r26, r1
    1840:	20 d0       	rcall	.+64     	; 0x1882 <__ultoa_invert+0x84>
    1842:	09 f4       	brne	.+2      	; 0x1846 <__ultoa_invert+0x48>
    1844:	68 94       	set
    1846:	3f 91       	pop	r19
    1848:	2a e0       	ldi	r18, 0x0A	; 10
    184a:	26 9f       	mul	r18, r22
    184c:	11 24       	eor	r1, r1
    184e:	30 19       	sub	r19, r0
    1850:	30 5d       	subi	r19, 0xD0	; 208
    1852:	31 93       	st	Z+, r19
    1854:	de f6       	brtc	.-74     	; 0x180c <__ultoa_invert+0xe>
    1856:	cf 01       	movw	r24, r30
    1858:	08 95       	ret
    185a:	46 2f       	mov	r20, r22
    185c:	47 70       	andi	r20, 0x07	; 7
    185e:	40 5d       	subi	r20, 0xD0	; 208
    1860:	41 93       	st	Z+, r20
    1862:	b3 e0       	ldi	r27, 0x03	; 3
    1864:	0f d0       	rcall	.+30     	; 0x1884 <__ultoa_invert+0x86>
    1866:	c9 f7       	brne	.-14     	; 0x185a <__ultoa_invert+0x5c>
    1868:	f6 cf       	rjmp	.-20     	; 0x1856 <__ultoa_invert+0x58>
    186a:	46 2f       	mov	r20, r22
    186c:	4f 70       	andi	r20, 0x0F	; 15
    186e:	40 5d       	subi	r20, 0xD0	; 208
    1870:	4a 33       	cpi	r20, 0x3A	; 58
    1872:	18 f0       	brcs	.+6      	; 0x187a <__ultoa_invert+0x7c>
    1874:	49 5d       	subi	r20, 0xD9	; 217
    1876:	31 fd       	sbrc	r19, 1
    1878:	40 52       	subi	r20, 0x20	; 32
    187a:	41 93       	st	Z+, r20
    187c:	02 d0       	rcall	.+4      	; 0x1882 <__ultoa_invert+0x84>
    187e:	a9 f7       	brne	.-22     	; 0x186a <__ultoa_invert+0x6c>
    1880:	ea cf       	rjmp	.-44     	; 0x1856 <__ultoa_invert+0x58>
    1882:	b4 e0       	ldi	r27, 0x04	; 4
    1884:	a6 95       	lsr	r26
    1886:	97 95       	ror	r25
    1888:	87 95       	ror	r24
    188a:	77 95       	ror	r23
    188c:	67 95       	ror	r22
    188e:	ba 95       	dec	r27
    1890:	c9 f7       	brne	.-14     	; 0x1884 <__ultoa_invert+0x86>
    1892:	00 97       	sbiw	r24, 0x00	; 0
    1894:	61 05       	cpc	r22, r1
    1896:	71 05       	cpc	r23, r1
    1898:	08 95       	ret
    189a:	9b 01       	movw	r18, r22
    189c:	ac 01       	movw	r20, r24
    189e:	0a 2e       	mov	r0, r26
    18a0:	06 94       	lsr	r0
    18a2:	57 95       	ror	r21
    18a4:	47 95       	ror	r20
    18a6:	37 95       	ror	r19
    18a8:	27 95       	ror	r18
    18aa:	ba 95       	dec	r27
    18ac:	c9 f7       	brne	.-14     	; 0x18a0 <__ultoa_invert+0xa2>
    18ae:	62 0f       	add	r22, r18
    18b0:	73 1f       	adc	r23, r19
    18b2:	84 1f       	adc	r24, r20
    18b4:	95 1f       	adc	r25, r21
    18b6:	a0 1d       	adc	r26, r0
    18b8:	08 95       	ret

000018ba <__prologue_saves__>:
    18ba:	2f 92       	push	r2
    18bc:	3f 92       	push	r3
    18be:	4f 92       	push	r4
    18c0:	5f 92       	push	r5
    18c2:	6f 92       	push	r6
    18c4:	7f 92       	push	r7
    18c6:	8f 92       	push	r8
    18c8:	9f 92       	push	r9
    18ca:	af 92       	push	r10
    18cc:	bf 92       	push	r11
    18ce:	cf 92       	push	r12
    18d0:	df 92       	push	r13
    18d2:	ef 92       	push	r14
    18d4:	ff 92       	push	r15
    18d6:	0f 93       	push	r16
    18d8:	1f 93       	push	r17
    18da:	cf 93       	push	r28
    18dc:	df 93       	push	r29
    18de:	cd b7       	in	r28, 0x3d	; 61
    18e0:	de b7       	in	r29, 0x3e	; 62
    18e2:	ca 1b       	sub	r28, r26
    18e4:	db 0b       	sbc	r29, r27
    18e6:	0f b6       	in	r0, 0x3f	; 63
    18e8:	f8 94       	cli
    18ea:	de bf       	out	0x3e, r29	; 62
    18ec:	0f be       	out	0x3f, r0	; 63
    18ee:	cd bf       	out	0x3d, r28	; 61
    18f0:	09 94       	ijmp

000018f2 <__epilogue_restores__>:
    18f2:	2a 88       	ldd	r2, Y+18	; 0x12
    18f4:	39 88       	ldd	r3, Y+17	; 0x11
    18f6:	48 88       	ldd	r4, Y+16	; 0x10
    18f8:	5f 84       	ldd	r5, Y+15	; 0x0f
    18fa:	6e 84       	ldd	r6, Y+14	; 0x0e
    18fc:	7d 84       	ldd	r7, Y+13	; 0x0d
    18fe:	8c 84       	ldd	r8, Y+12	; 0x0c
    1900:	9b 84       	ldd	r9, Y+11	; 0x0b
    1902:	aa 84       	ldd	r10, Y+10	; 0x0a
    1904:	b9 84       	ldd	r11, Y+9	; 0x09
    1906:	c8 84       	ldd	r12, Y+8	; 0x08
    1908:	df 80       	ldd	r13, Y+7	; 0x07
    190a:	ee 80       	ldd	r14, Y+6	; 0x06
    190c:	fd 80       	ldd	r15, Y+5	; 0x05
    190e:	0c 81       	ldd	r16, Y+4	; 0x04
    1910:	1b 81       	ldd	r17, Y+3	; 0x03
    1912:	aa 81       	ldd	r26, Y+2	; 0x02
    1914:	b9 81       	ldd	r27, Y+1	; 0x01
    1916:	ce 0f       	add	r28, r30
    1918:	d1 1d       	adc	r29, r1
    191a:	0f b6       	in	r0, 0x3f	; 63
    191c:	f8 94       	cli
    191e:	de bf       	out	0x3e, r29	; 62
    1920:	0f be       	out	0x3f, r0	; 63
    1922:	cd bf       	out	0x3d, r28	; 61
    1924:	ed 01       	movw	r28, r26
    1926:	08 95       	ret

00001928 <_exit>:
    1928:	f8 94       	cli

0000192a <__stop_program>:
    192a:	ff cf       	rjmp	.-2      	; 0x192a <__stop_program>
