
byggern.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000102  00800100  00001344  000013d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001344  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  00800202  00800202  000014da  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000014da  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001538  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000200  00000000  00000000  00001574  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002186  00000000  00000000  00001774  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001128  00000000  00000000  000038fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e41  00000000  00000000  00004a22  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000494  00000000  00000000  00005864  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007d4  00000000  00000000  00005cf8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e2d  00000000  00000000  000064cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f0  00000000  00000000  000072f9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__ctors_end>
       4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
       8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
       c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      10:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      14:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      18:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      1c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      20:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      24:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      28:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      2c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      30:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      34:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      38:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__vector_14>
      3c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      40:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      44:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      48:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      4c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      50:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      54:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      58:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      5c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      60:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      64:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      68:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      6c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      70:	08 4a       	sbci	r16, 0xA8	; 168
      72:	d7 3b       	cpi	r29, 0xB7	; 183
      74:	3b ce       	rjmp	.-906    	; 0xfffffcec <__eeprom_end+0xff7efcec>
      76:	01 6e       	ori	r16, 0xE1	; 225
      78:	84 bc       	out	0x24, r8	; 36
      7a:	bf fd       	.word	0xfdbf	; ????
      7c:	c1 2f       	mov	r28, r17
      7e:	3d 6c       	ori	r19, 0xCD	; 205
      80:	74 31       	cpi	r23, 0x14	; 20
      82:	9a bd       	out	0x2a, r25	; 42
      84:	56 83       	std	Z+6, r21	; 0x06
      86:	3d da       	rcall	.-2950   	; 0xfffff502 <__eeprom_end+0xff7ef502>
      88:	3d 00       	.word	0x003d	; ????
      8a:	c7 7f       	andi	r28, 0xF7	; 247
      8c:	11 be       	out	0x31, r1	; 49
      8e:	d9 e4       	ldi	r29, 0x49	; 73
      90:	bb 4c       	sbci	r27, 0xCB	; 203
      92:	3e 91       	ld	r19, -X
      94:	6b aa       	std	Y+51, r6	; 0x33
      96:	aa be       	out	0x3a, r10	; 58
      98:	00 00       	nop
      9a:	00 80       	ld	r0, Z
      9c:	3f 00       	.word	0x003f	; ????

0000009e <__ctors_end>:
      9e:	11 24       	eor	r1, r1
      a0:	1f be       	out	0x3f, r1	; 63
      a2:	cf ef       	ldi	r28, 0xFF	; 255
      a4:	d4 e0       	ldi	r29, 0x04	; 4
      a6:	de bf       	out	0x3e, r29	; 62
      a8:	cd bf       	out	0x3d, r28	; 61

000000aa <__do_copy_data>:
      aa:	12 e0       	ldi	r17, 0x02	; 2
      ac:	a0 e0       	ldi	r26, 0x00	; 0
      ae:	b1 e0       	ldi	r27, 0x01	; 1
      b0:	e4 e4       	ldi	r30, 0x44	; 68
      b2:	f3 e1       	ldi	r31, 0x13	; 19
      b4:	02 c0       	rjmp	.+4      	; 0xba <__do_copy_data+0x10>
      b6:	05 90       	lpm	r0, Z+
      b8:	0d 92       	st	X+, r0
      ba:	a2 30       	cpi	r26, 0x02	; 2
      bc:	b1 07       	cpc	r27, r17
      be:	d9 f7       	brne	.-10     	; 0xb6 <__do_copy_data+0xc>

000000c0 <__do_clear_bss>:
      c0:	22 e0       	ldi	r18, 0x02	; 2
      c2:	a2 e0       	ldi	r26, 0x02	; 2
      c4:	b2 e0       	ldi	r27, 0x02	; 2
      c6:	01 c0       	rjmp	.+2      	; 0xca <.do_clear_bss_start>

000000c8 <.do_clear_bss_loop>:
      c8:	1d 92       	st	X+, r1

000000ca <.do_clear_bss_start>:
      ca:	a8 31       	cpi	r26, 0x18	; 24
      cc:	b2 07       	cpc	r27, r18
      ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
      d0:	0e 94 aa 00 	call	0x154	; 0x154 <main>
      d4:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <_exit>

000000d8 <__bad_interrupt>:
      d8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000dc <adcInit>:



void adcInit(void) {
	
	DDRE &= ~(1<<PINE0);
      dc:	30 98       	cbi	0x06, 0	; 6
      de:	08 95       	ret

000000e0 <readAdc>:

 
uint8_t readAdc(uint8_t channel){ //for ch1 channel = 0;
	volatile char * adc = (char *) 0x1400;
	
	*adc = 0x04 | channel;
      e0:	84 60       	ori	r24, 0x04	; 4
      e2:	80 93 00 14 	sts	0x1400, r24	; 0x801400 <__bss_end+0x11e8>
	

	while (test_bit(PINE, PINE0)) {
      e6:	28 99       	sbic	0x05, 0	; 5
      e8:	fe cf       	rjmp	.-4      	; 0xe6 <readAdc+0x6>

	}
	
	return *adc;
      ea:	80 91 00 14 	lds	r24, 0x1400	; 0x801400 <__bss_end+0x11e8>
      ee:	08 95       	ret

000000f0 <__vector_14>:
	joystick_readPosition(&joystick_pos);
	slider_readPosition(&slider_pos);
	touchButton_readButtons(&buttons);
	sei();
}
void timer_init() {
      f0:	1f 92       	push	r1
      f2:	0f 92       	push	r0
      f4:	0f b6       	in	r0, 0x3f	; 63
      f6:	0f 92       	push	r0
      f8:	11 24       	eor	r1, r1
      fa:	2f 93       	push	r18
      fc:	3f 93       	push	r19
      fe:	4f 93       	push	r20
     100:	5f 93       	push	r21
     102:	6f 93       	push	r22
     104:	7f 93       	push	r23
     106:	8f 93       	push	r24
     108:	9f 93       	push	r25
     10a:	af 93       	push	r26
     10c:	bf 93       	push	r27
     10e:	ef 93       	push	r30
     110:	ff 93       	push	r31
     112:	f8 94       	cli
     114:	1d bc       	out	0x2d, r1	; 45
     116:	1c bc       	out	0x2c, r1	; 44
     118:	82 e0       	ldi	r24, 0x02	; 2
     11a:	92 e0       	ldi	r25, 0x02	; 2
     11c:	0e 94 ee 00 	call	0x1dc	; 0x1dc <joystick_readPosition>
     120:	88 e0       	ldi	r24, 0x08	; 8
     122:	92 e0       	ldi	r25, 0x02	; 2
     124:	0e 94 06 02 	call	0x40c	; 0x40c <slider_readPosition>
     128:	86 e0       	ldi	r24, 0x06	; 6
     12a:	92 e0       	ldi	r25, 0x02	; 2
     12c:	0e 94 2d 02 	call	0x45a	; 0x45a <touchButton_readButtons>
     130:	78 94       	sei
     132:	ff 91       	pop	r31
     134:	ef 91       	pop	r30
     136:	bf 91       	pop	r27
     138:	af 91       	pop	r26
     13a:	9f 91       	pop	r25
     13c:	8f 91       	pop	r24
     13e:	7f 91       	pop	r23
     140:	6f 91       	pop	r22
     142:	5f 91       	pop	r21
     144:	4f 91       	pop	r20
     146:	3f 91       	pop	r19
     148:	2f 91       	pop	r18
     14a:	0f 90       	pop	r0
     14c:	0f be       	out	0x3f, r0	; 63
     14e:	0f 90       	pop	r0
     150:	1f 90       	pop	r1
     152:	18 95       	reti

00000154 <main>:
	
}
int main(void)
{
	//DDRB &= ~(1 << BUTTON_LEFT | 1 << BUTTON_RIGHT);
	setupInit();
     154:	0e 94 f7 01 	call	0x3ee	; 0x3ee <setupInit>
	//SRAM_test();
	printf("Hello, world!\n\r");
     158:	81 ef       	ldi	r24, 0xF1	; 241
     15a:	91 e0       	ldi	r25, 0x01	; 1
     15c:	9f 93       	push	r25
     15e:	8f 93       	push	r24
     160:	0e 94 9f 06 	call	0xd3e	; 0xd3e <printf>
	MenuNode* gameMenu = mainMenuInit();
     164:	0e 94 7e 01 	call	0x2fc	; 0x2fc <mainMenuInit>
	printf((gameMenu->name)[0]);
     168:	fc 01       	movw	r30, r24
     16a:	80 81       	ld	r24, Z
     16c:	1f 92       	push	r1
     16e:	8f 93       	push	r24
     170:	0e 94 9f 06 	call	0xd3e	; 0xd3e <printf>
	oled_gotoLine(6);
     174:	86 e0       	ldi	r24, 0x06	; 6
     176:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <oled_gotoLine>
	//oled_print(gameMenu->name);
	
	//Enable interrupt from timer
	
	//Disable global interrupts
	cli();
     17a:	f8 94       	cli
	
	//enable timer 0
	TIMSK |= (1 << OCIE1B);
     17c:	89 b7       	in	r24, 0x39	; 57
     17e:	80 62       	ori	r24, 0x20	; 32
     180:	89 bf       	out	0x39, r24	; 57

	
	//Setup code here for timer interrupt
	TCNT1 = 0x00;
     182:	1d bc       	out	0x2d, r1	; 45
     184:	1c bc       	out	0x2c, r1	; 44
	TCCR1A = (1 << COM1B0 | 1 << COM1B1);
     186:	80 e3       	ldi	r24, 0x30	; 48
     188:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = (1 << CS12 | 1 << CS00);
     18a:	85 e0       	ldi	r24, 0x05	; 5
     18c:	8e bd       	out	0x2e, r24	; 46
	
	OCR1B = TIMER_RESET;
     18e:	80 ef       	ldi	r24, 0xF0	; 240
     190:	90 e0       	ldi	r25, 0x00	; 0
     192:	99 bd       	out	0x29, r25	; 41
     194:	88 bd       	out	0x28, r24	; 40
	
	//Enable global interrupts
	sei();
     196:	78 94       	sei
	//printf("Timer initialized");
	oled_print_arrow(0x0, 0x0);
     198:	60 e0       	ldi	r22, 0x00	; 0
     19a:	80 e0       	ldi	r24, 0x00	; 0
     19c:	0e 94 af 01 	call	0x35e	; 0x35e <oled_print_arrow>
	oled_home();
     1a0:	0e 94 bc 01 	call	0x378	; 0x378 <oled_home>
	oled_gotoLine(2);
     1a4:	82 e0       	ldi	r24, 0x02	; 2
     1a6:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <oled_gotoLine>
     1aa:	0f 90       	pop	r0
     1ac:	0f 90       	pop	r0
     1ae:	0f 90       	pop	r0
     1b0:	0f 90       	pop	r0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1b2:	ff ef       	ldi	r31, 0xFF	; 255
     1b4:	2f e7       	ldi	r18, 0x7F	; 127
     1b6:	81 e0       	ldi	r24, 0x01	; 1
     1b8:	f1 50       	subi	r31, 0x01	; 1
     1ba:	20 40       	sbci	r18, 0x00	; 0
     1bc:	80 40       	sbci	r24, 0x00	; 0
     1be:	e1 f7       	brne	.-8      	; 0x1b8 <main+0x64>
     1c0:	00 c0       	rjmp	.+0      	; 0x1c2 <main+0x6e>
     1c2:	00 c0       	rjmp	.+0      	; 0x1c4 <main+0x70>
     1c4:	f6 cf       	rjmp	.-20     	; 0x1b2 <main+0x5e>

000001c6 <joystickInit>:
uint8_t joystickOffsetX;
uint8_t joystickOffsetY;


void joystickInit() {
	joystickOffsetX = readAdc(X_POS_CHANNEL);
     1c6:	80 e0       	ldi	r24, 0x00	; 0
     1c8:	0e 94 70 00 	call	0xe0	; 0xe0 <readAdc>
     1cc:	80 93 0b 02 	sts	0x020B, r24	; 0x80020b <joystickOffsetX>
	joystickOffsetY = readAdc(Y_POS_CHANNEL);
     1d0:	81 e0       	ldi	r24, 0x01	; 1
     1d2:	0e 94 70 00 	call	0xe0	; 0xe0 <readAdc>
     1d6:	80 93 0a 02 	sts	0x020A, r24	; 0x80020a <joystickOffsetY>
     1da:	08 95       	ret

000001dc <joystick_readPosition>:
}
void joystick_readPosition(joystick_position_t * pos) {
     1dc:	cf 92       	push	r12
     1de:	df 92       	push	r13
     1e0:	ef 92       	push	r14
     1e2:	ff 92       	push	r15
     1e4:	1f 93       	push	r17
     1e6:	cf 93       	push	r28
     1e8:	df 93       	push	r29
     1ea:	ec 01       	movw	r28, r24
	uint8_t x_pos = readAdc(X_POS_CHANNEL);
     1ec:	80 e0       	ldi	r24, 0x00	; 0
     1ee:	0e 94 70 00 	call	0xe0	; 0xe0 <readAdc>
     1f2:	18 2f       	mov	r17, r24
	uint8_t y_pos = readAdc(Y_POS_CHANNEL);
     1f4:	81 e0       	ldi	r24, 0x01	; 1
     1f6:	0e 94 70 00 	call	0xe0	; 0xe0 <readAdc>
     1fa:	e8 2f       	mov	r30, r24
	if (x_pos < joystickOffsetX) {
     1fc:	60 91 0b 02 	lds	r22, 0x020B	; 0x80020b <joystickOffsetX>
     200:	16 17       	cp	r17, r22
     202:	78 f4       	brcc	.+30     	; 0x222 <joystick_readPosition+0x46>
		pos->x_pos = ((x_pos - joystickOffsetX)*100)/(joystickOffsetX);
     204:	70 e0       	ldi	r23, 0x00	; 0
     206:	21 2f       	mov	r18, r17
     208:	30 e0       	ldi	r19, 0x00	; 0
     20a:	26 1b       	sub	r18, r22
     20c:	37 0b       	sbc	r19, r23
     20e:	44 e6       	ldi	r20, 0x64	; 100
     210:	42 9f       	mul	r20, r18
     212:	c0 01       	movw	r24, r0
     214:	43 9f       	mul	r20, r19
     216:	90 0d       	add	r25, r0
     218:	11 24       	eor	r1, r1
     21a:	0e 94 0b 05 	call	0xa16	; 0xa16 <__divmodhi4>
     21e:	68 83       	st	Y, r22
     220:	13 c0       	rjmp	.+38     	; 0x248 <joystick_readPosition+0x6c>
	} else {
		pos->x_pos = ((x_pos - joystickOffsetX)*100)/(255-joystickOffsetX);
     222:	46 2f       	mov	r20, r22
     224:	50 e0       	ldi	r21, 0x00	; 0
     226:	21 2f       	mov	r18, r17
     228:	30 e0       	ldi	r19, 0x00	; 0
     22a:	24 1b       	sub	r18, r20
     22c:	35 0b       	sbc	r19, r21
     22e:	64 e6       	ldi	r22, 0x64	; 100
     230:	62 9f       	mul	r22, r18
     232:	c0 01       	movw	r24, r0
     234:	63 9f       	mul	r22, r19
     236:	90 0d       	add	r25, r0
     238:	11 24       	eor	r1, r1
     23a:	6f ef       	ldi	r22, 0xFF	; 255
     23c:	70 e0       	ldi	r23, 0x00	; 0
     23e:	64 1b       	sub	r22, r20
     240:	75 0b       	sbc	r23, r21
     242:	0e 94 0b 05 	call	0xa16	; 0xa16 <__divmodhi4>
     246:	68 83       	st	Y, r22
	}
	if (y_pos < joystickOffsetY) {
     248:	20 91 0a 02 	lds	r18, 0x020A	; 0x80020a <joystickOffsetY>
     24c:	e2 17       	cp	r30, r18
     24e:	80 f4       	brcc	.+32     	; 0x270 <joystick_readPosition+0x94>
		pos->y_pos = ((y_pos - joystickOffsetY)*100)/(joystickOffsetY);
     250:	62 2f       	mov	r22, r18
     252:	70 e0       	ldi	r23, 0x00	; 0
     254:	4e 2f       	mov	r20, r30
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	46 1b       	sub	r20, r22
     25a:	57 0b       	sbc	r21, r23
     25c:	24 e6       	ldi	r18, 0x64	; 100
     25e:	24 9f       	mul	r18, r20
     260:	c0 01       	movw	r24, r0
     262:	25 9f       	mul	r18, r21
     264:	90 0d       	add	r25, r0
     266:	11 24       	eor	r1, r1
     268:	0e 94 0b 05 	call	0xa16	; 0xa16 <__divmodhi4>
     26c:	69 83       	std	Y+1, r22	; 0x01
     26e:	12 c0       	rjmp	.+36     	; 0x294 <joystick_readPosition+0xb8>
	} else {
		pos->y_pos = ((y_pos - joystickOffsetY)*100)/(255-joystickOffsetY);
     270:	30 e0       	ldi	r19, 0x00	; 0
     272:	4e 2f       	mov	r20, r30
     274:	50 e0       	ldi	r21, 0x00	; 0
     276:	42 1b       	sub	r20, r18
     278:	53 0b       	sbc	r21, r19
     27a:	64 e6       	ldi	r22, 0x64	; 100
     27c:	64 9f       	mul	r22, r20
     27e:	c0 01       	movw	r24, r0
     280:	65 9f       	mul	r22, r21
     282:	90 0d       	add	r25, r0
     284:	11 24       	eor	r1, r1
     286:	6f ef       	ldi	r22, 0xFF	; 255
     288:	70 e0       	ldi	r23, 0x00	; 0
     28a:	62 1b       	sub	r22, r18
     28c:	73 0b       	sbc	r23, r19
     28e:	0e 94 0b 05 	call	0xa16	; 0xa16 <__divmodhi4>
     292:	69 83       	std	Y+1, r22	; 0x01
	}
	pos->angle = atan2(pos->y_pos, pos->x_pos)*360/2.0/3.14;
     294:	68 81       	ld	r22, Y
     296:	06 2e       	mov	r0, r22
     298:	00 0c       	add	r0, r0
     29a:	77 0b       	sbc	r23, r23
     29c:	88 0b       	sbc	r24, r24
     29e:	99 0b       	sbc	r25, r25
     2a0:	0e 94 72 03 	call	0x6e4	; 0x6e4 <__floatsisf>
     2a4:	6b 01       	movw	r12, r22
     2a6:	7c 01       	movw	r14, r24
     2a8:	69 81       	ldd	r22, Y+1	; 0x01
     2aa:	06 2e       	mov	r0, r22
     2ac:	00 0c       	add	r0, r0
     2ae:	77 0b       	sbc	r23, r23
     2b0:	88 0b       	sbc	r24, r24
     2b2:	99 0b       	sbc	r25, r25
     2b4:	0e 94 72 03 	call	0x6e4	; 0x6e4 <__floatsisf>
     2b8:	a7 01       	movw	r20, r14
     2ba:	96 01       	movw	r18, r12
     2bc:	0e 94 69 02 	call	0x4d2	; 0x4d2 <atan2>
     2c0:	20 e0       	ldi	r18, 0x00	; 0
     2c2:	30 e0       	ldi	r19, 0x00	; 0
     2c4:	44 eb       	ldi	r20, 0xB4	; 180
     2c6:	53 e4       	ldi	r21, 0x43	; 67
     2c8:	0e 94 2d 04 	call	0x85a	; 0x85a <__mulsf3>
     2cc:	20 e0       	ldi	r18, 0x00	; 0
     2ce:	30 e0       	ldi	r19, 0x00	; 0
     2d0:	40 e0       	ldi	r20, 0x00	; 0
     2d2:	5f e3       	ldi	r21, 0x3F	; 63
     2d4:	0e 94 2d 04 	call	0x85a	; 0x85a <__mulsf3>
     2d8:	23 ec       	ldi	r18, 0xC3	; 195
     2da:	35 ef       	ldi	r19, 0xF5	; 245
     2dc:	48 e4       	ldi	r20, 0x48	; 72
     2de:	50 e4       	ldi	r21, 0x40	; 64
     2e0:	0e 94 c8 02 	call	0x590	; 0x590 <__divsf3>
     2e4:	0e 94 3a 03 	call	0x674	; 0x674 <__fixsfsi>
     2e8:	7b 83       	std	Y+3, r23	; 0x03
     2ea:	6a 83       	std	Y+2, r22	; 0x02
}
     2ec:	df 91       	pop	r29
     2ee:	cf 91       	pop	r28
     2f0:	1f 91       	pop	r17
     2f2:	ff 90       	pop	r15
     2f4:	ef 90       	pop	r14
     2f6:	df 90       	pop	r13
     2f8:	cf 90       	pop	r12
     2fa:	08 95       	ret

000002fc <mainMenuInit>:

#define MAXCHILDREN 3


MenuNode* mainMenuInit (void){
	MenuNode* ptr = (MenuNode*) malloc(sizeof(MenuNode));
     2fc:	82 e1       	ldi	r24, 0x12	; 18
     2fe:	90 e0       	ldi	r25, 0x00	; 0
     300:	0e 94 33 05 	call	0xa66	; 0xa66 <malloc>
     304:	fc 01       	movw	r30, r24
	(ptr->name)[0] = 'A';
	(ptr->name)[0] = 'B';
	(ptr->name)[0] = '\0';
     306:	10 82       	st	Z, r1
	//strcpy(ptr->name, "Main menu");
	ptr->parent = NULL;
     308:	13 86       	std	Z+11, r1	; 0x0b
     30a:	12 86       	std	Z+10, r1	; 0x0a
	for (int i = 0; i< 3; i++) {
		ptr->children[i] = NULL;
     30c:	15 86       	std	Z+13, r1	; 0x0d
     30e:	14 86       	std	Z+12, r1	; 0x0c
     310:	17 86       	std	Z+15, r1	; 0x0f
     312:	16 86       	std	Z+14, r1	; 0x0e
     314:	11 8a       	std	Z+17, r1	; 0x11
     316:	10 8a       	std	Z+16, r1	; 0x10
	}

	return ptr;
}
     318:	08 95       	ret

0000031a <oled_pos>:
	volatile char *ext_mem = (char *) OLED_DATA_BASE_ADDRESS;
	*ext_mem = data;
}

void oled_pos(uint8_t page, uint8_t col) {
	oled_write_c(0xB0 + page);
     31a:	80 55       	subi	r24, 0x50	; 80
#define OLED_COMMAND_BASE_ADDRESS 0x1000
#define OLED_DATA_BASE_ADDRESS 0x1200
//#include <util/delay.h>
void oled_write_c(uint8_t data) {
	volatile char *ext_mem = (char *) OLED_COMMAND_BASE_ADDRESS;
	*ext_mem = data;
     31c:	e0 e0       	ldi	r30, 0x00	; 0
     31e:	f0 e1       	ldi	r31, 0x10	; 16
     320:	80 83       	st	Z, r24

void oled_pos(uint8_t page, uint8_t col) {
	oled_write_c(0xB0 + page);
	
	
	oled_write_c(col & 0x0F);
     322:	86 2f       	mov	r24, r22
     324:	8f 70       	andi	r24, 0x0F	; 15
#define OLED_COMMAND_BASE_ADDRESS 0x1000
#define OLED_DATA_BASE_ADDRESS 0x1200
//#include <util/delay.h>
void oled_write_c(uint8_t data) {
	volatile char *ext_mem = (char *) OLED_COMMAND_BASE_ADDRESS;
	*ext_mem = data;
     326:	80 83       	st	Z, r24
void oled_pos(uint8_t page, uint8_t col) {
	oled_write_c(0xB0 + page);
	
	
	oled_write_c(col & 0x0F);
	oled_write_c((col >> 4) | 0x10);
     328:	62 95       	swap	r22
     32a:	6f 70       	andi	r22, 0x0F	; 15
     32c:	60 61       	ori	r22, 0x10	; 16
#define OLED_COMMAND_BASE_ADDRESS 0x1000
#define OLED_DATA_BASE_ADDRESS 0x1200
//#include <util/delay.h>
void oled_write_c(uint8_t data) {
	volatile char *ext_mem = (char *) OLED_COMMAND_BASE_ADDRESS;
	*ext_mem = data;
     32e:	60 83       	st	Z, r22
     330:	08 95       	ret

00000332 <oled_reset>:
	oled_write_c(col & 0x0F);
	oled_write_c((col >> 4) | 0x10);
	
	
}
void oled_reset() {
     332:	1f 93       	push	r17
     334:	cf 93       	push	r28
     336:	df 93       	push	r29
     338:	10 e0       	ldi	r17, 0x00	; 0
	volatile char *ext_mem = (char *) OLED_COMMAND_BASE_ADDRESS;
	*ext_mem = data;
}
void oled_write_d(uint8_t data) {
	volatile char *ext_mem = (char *) OLED_DATA_BASE_ADDRESS;
	*ext_mem = data;
     33a:	c0 e0       	ldi	r28, 0x00	; 0
     33c:	d2 e1       	ldi	r29, 0x12	; 18
	
	
}
void oled_reset() {
	for (int page = 0; page<8; page++) {
		oled_pos(page, 0);
     33e:	60 e0       	ldi	r22, 0x00	; 0
     340:	81 2f       	mov	r24, r17
     342:	0e 94 8d 01 	call	0x31a	; 0x31a <oled_pos>
     346:	80 e8       	ldi	r24, 0x80	; 128
     348:	90 e0       	ldi	r25, 0x00	; 0
	volatile char *ext_mem = (char *) OLED_COMMAND_BASE_ADDRESS;
	*ext_mem = data;
}
void oled_write_d(uint8_t data) {
	volatile char *ext_mem = (char *) OLED_DATA_BASE_ADDRESS;
	*ext_mem = data;
     34a:	18 82       	st	Y, r1
     34c:	01 97       	sbiw	r24, 0x01	; 1
	
}
void oled_reset() {
	for (int page = 0; page<8; page++) {
		oled_pos(page, 0);
		 for (int col = 0; col < 128; col++ ) {
     34e:	e9 f7       	brne	.-6      	; 0x34a <oled_reset+0x18>
     350:	1f 5f       	subi	r17, 0xFF	; 255
	oled_write_c((col >> 4) | 0x10);
	
	
}
void oled_reset() {
	for (int page = 0; page<8; page++) {
     352:	18 30       	cpi	r17, 0x08	; 8
     354:	a1 f7       	brne	.-24     	; 0x33e <oled_reset+0xc>
		 for (int col = 0; col < 128; col++ ) {
			 
			 oled_write_d(0x00);
		 }
	}
}
     356:	df 91       	pop	r29
     358:	cf 91       	pop	r28
     35a:	1f 91       	pop	r17
     35c:	08 95       	ret

0000035e <oled_print_arrow>:
	oled_home();
}

void oled_print_arrow(uint8_t row, uint8_t col)
{
	oled_pos(row, col);
     35e:	0e 94 8d 01 	call	0x31a	; 0x31a <oled_pos>
	volatile char *ext_mem = (char *) OLED_COMMAND_BASE_ADDRESS;
	*ext_mem = data;
}
void oled_write_d(uint8_t data) {
	volatile char *ext_mem = (char *) OLED_DATA_BASE_ADDRESS;
	*ext_mem = data;
     362:	e0 e0       	ldi	r30, 0x00	; 0
     364:	f2 e1       	ldi	r31, 0x12	; 18
     366:	88 e1       	ldi	r24, 0x18	; 24
     368:	80 83       	st	Z, r24
     36a:	80 83       	st	Z, r24
     36c:	9e e7       	ldi	r25, 0x7E	; 126
     36e:	90 83       	st	Z, r25
     370:	9c e3       	ldi	r25, 0x3C	; 60
     372:	90 83       	st	Z, r25
     374:	80 83       	st	Z, r24
     376:	08 95       	ret

00000378 <oled_home>:
	oled_write_d(0b00111100);
	oled_write_d(0b00011000);
}

void oled_home() {
	oled_pos(0,0);
     378:	60 e0       	ldi	r22, 0x00	; 0
     37a:	80 e0       	ldi	r24, 0x00	; 0
     37c:	0e 94 8d 01 	call	0x31a	; 0x31a <oled_pos>
     380:	08 95       	ret

00000382 <oled_init>:
#define OLED_COMMAND_BASE_ADDRESS 0x1000
#define OLED_DATA_BASE_ADDRESS 0x1200
//#include <util/delay.h>
void oled_write_c(uint8_t data) {
	volatile char *ext_mem = (char *) OLED_COMMAND_BASE_ADDRESS;
	*ext_mem = data;
     382:	e0 e0       	ldi	r30, 0x00	; 0
     384:	f0 e1       	ldi	r31, 0x10	; 16
     386:	8e ea       	ldi	r24, 0xAE	; 174
     388:	80 83       	st	Z, r24
     38a:	81 ea       	ldi	r24, 0xA1	; 161
     38c:	80 83       	st	Z, r24
     38e:	8a ed       	ldi	r24, 0xDA	; 218
     390:	80 83       	st	Z, r24
     392:	82 e1       	ldi	r24, 0x12	; 18
     394:	80 83       	st	Z, r24
     396:	88 ec       	ldi	r24, 0xC8	; 200
     398:	80 83       	st	Z, r24
     39a:	88 ea       	ldi	r24, 0xA8	; 168
     39c:	80 83       	st	Z, r24
     39e:	8f e3       	ldi	r24, 0x3F	; 63
     3a0:	80 83       	st	Z, r24
     3a2:	85 ed       	ldi	r24, 0xD5	; 213
     3a4:	80 83       	st	Z, r24
     3a6:	80 e8       	ldi	r24, 0x80	; 128
     3a8:	80 83       	st	Z, r24
     3aa:	81 e8       	ldi	r24, 0x81	; 129
     3ac:	80 83       	st	Z, r24
     3ae:	80 e5       	ldi	r24, 0x50	; 80
     3b0:	80 83       	st	Z, r24
     3b2:	89 ed       	ldi	r24, 0xD9	; 217
     3b4:	80 83       	st	Z, r24
     3b6:	81 e2       	ldi	r24, 0x21	; 33
     3b8:	80 83       	st	Z, r24
     3ba:	80 e2       	ldi	r24, 0x20	; 32
     3bc:	80 83       	st	Z, r24
     3be:	82 e0       	ldi	r24, 0x02	; 2
     3c0:	80 83       	st	Z, r24
     3c2:	8b ed       	ldi	r24, 0xDB	; 219
     3c4:	80 83       	st	Z, r24
     3c6:	80 e3       	ldi	r24, 0x30	; 48
     3c8:	80 83       	st	Z, r24
     3ca:	8d ea       	ldi	r24, 0xAD	; 173
     3cc:	80 83       	st	Z, r24
     3ce:	10 82       	st	Z, r1
     3d0:	84 ea       	ldi	r24, 0xA4	; 164
     3d2:	80 83       	st	Z, r24
     3d4:	86 ea       	ldi	r24, 0xA6	; 166
     3d6:	80 83       	st	Z, r24
     3d8:	8f ea       	ldi	r24, 0xAF	; 175
     3da:	80 83       	st	Z, r24
	oled_write_c(0xa6); //set normal display
	oled_write_c(0xaf); // display on
	
	//oled_write_c(0xa5);
	//_delay_ms(100);
	oled_reset();
     3dc:	0e 94 99 01 	call	0x332	; 0x332 <oled_reset>
	oled_home();
     3e0:	0e 94 bc 01 	call	0x378	; 0x378 <oled_home>
     3e4:	08 95       	ret

000003e6 <oled_gotoLine>:

void oled_home() {
	oled_pos(0,0);
}
void oled_gotoLine(uint8_t page) {
	oled_pos(page,0);
     3e6:	60 e0       	ldi	r22, 0x00	; 0
     3e8:	0e 94 8d 01 	call	0x31a	; 0x31a <oled_pos>
     3ec:	08 95       	ret

000003ee <setupInit>:
#include "joystick.h"
#include "setup.h"
#include "oled.h"

	void setupInit(void){
	xmem_init();
     3ee:	0e 94 4f 02 	call	0x49e	; 0x49e <xmem_init>
	USART_init(MYUBRR);
     3f2:	8f e1       	ldi	r24, 0x1F	; 31
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	0e 94 3e 02 	call	0x47c	; 0x47c <USART_init>
	adcInit();
     3fa:	0e 94 6e 00 	call	0xdc	; 0xdc <adcInit>
	joystickInit();
     3fe:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <joystickInit>
	touchButton_init();
     402:	0e 94 14 02 	call	0x428	; 0x428 <touchButton_init>
	oled_init();
     406:	0e 94 c1 01 	call	0x382	; 0x382 <oled_init>
     40a:	08 95       	ret

0000040c <slider_readPosition>:
#define LEFT_POS_CHANNEL 2
#define RIGHT_POS_CHANNEL 3
#include "slider.h"
#include "adc.h"
void slider_readPosition(slider_position_t * pos) {
     40c:	cf 93       	push	r28
     40e:	df 93       	push	r29
     410:	ec 01       	movw	r28, r24
	pos->left_pos = readAdc(LEFT_POS_CHANNEL);
     412:	82 e0       	ldi	r24, 0x02	; 2
     414:	0e 94 70 00 	call	0xe0	; 0xe0 <readAdc>
     418:	88 83       	st	Y, r24
	pos->right_pos = readAdc(RIGHT_POS_CHANNEL);
     41a:	83 e0       	ldi	r24, 0x03	; 3
     41c:	0e 94 70 00 	call	0xe0	; 0xe0 <readAdc>
     420:	89 83       	std	Y+1, r24	; 0x01
     422:	df 91       	pop	r29
     424:	cf 91       	pop	r28
     426:	08 95       	ret

00000428 <touchButton_init>:

#include "touchButton.h"
#include "adc.h"

void touchButton_init() {
	DDRB &= ~(1 << BUTTON_LEFT | 1 << BUTTON_RIGHT);
     428:	36 b3       	in	r19, 0x16	; 22
     42a:	26 b3       	in	r18, 0x16	; 22
     42c:	47 b3       	in	r20, 0x17	; 23
     42e:	31 70       	andi	r19, 0x01	; 1
     430:	81 e0       	ldi	r24, 0x01	; 1
     432:	90 e0       	ldi	r25, 0x00	; 0
     434:	bc 01       	movw	r22, r24
     436:	02 c0       	rjmp	.+4      	; 0x43c <touchButton_init+0x14>
     438:	66 0f       	add	r22, r22
     43a:	77 1f       	adc	r23, r23
     43c:	3a 95       	dec	r19
     43e:	e2 f7       	brpl	.-8      	; 0x438 <touchButton_init+0x10>
     440:	22 70       	andi	r18, 0x02	; 2
     442:	02 c0       	rjmp	.+4      	; 0x448 <touchButton_init+0x20>
     444:	88 0f       	add	r24, r24
     446:	99 1f       	adc	r25, r25
     448:	2a 95       	dec	r18
     44a:	e2 f7       	brpl	.-8      	; 0x444 <touchButton_init+0x1c>
     44c:	86 2b       	or	r24, r22
     44e:	97 2b       	or	r25, r23
     450:	80 95       	com	r24
     452:	90 95       	com	r25
     454:	84 23       	and	r24, r20
     456:	87 bb       	out	0x17, r24	; 23
     458:	08 95       	ret

0000045a <touchButton_readButtons>:
}
touchButton_readButtons(buttonValues_t * buttons) {
     45a:	fc 01       	movw	r30, r24
	buttons->left_button = !!(BUTTON_LEFT);
     45c:	96 b3       	in	r25, 0x16	; 22
     45e:	91 70       	andi	r25, 0x01	; 1
     460:	90 83       	st	Z, r25
	buttons->right_button = !!(BUTTON_RIGHT);
     462:	96 b3       	in	r25, 0x16	; 22
     464:	96 95       	lsr	r25
     466:	91 70       	andi	r25, 0x01	; 1
     468:	91 83       	std	Z+1, r25	; 0x01
     46a:	08 95       	ret

0000046c <USART_transmitChar>:
	uart = fdevopen(&USART_transmitChar, &USART_receiveChar);
}

void USART_transmitChar(unsigned char data) {
	/* wait for empty transmit buffer */
	while ( ! ( UCSR0A & (1<<UDRE0)))
     46c:	5d 9b       	sbis	0x0b, 5	; 11
     46e:	fe cf       	rjmp	.-4      	; 0x46c <USART_transmitChar>
		;
		
	/* Put data in buffer, send data */
	UDR0 = data;
     470:	8c b9       	out	0x0c, r24	; 12
     472:	08 95       	ret

00000474 <USART_receiveChar>:
}

unsigned char USART_receiveChar( void ) {
	/* wait for data to be received*/
	while ( !(UCSR0A & (1<<RXC0) ) ) 
     474:	5f 9b       	sbis	0x0b, 7	; 11
     476:	fe cf       	rjmp	.-4      	; 0x474 <USART_receiveChar>
		;
	
	return UDR0;
     478:	8c b1       	in	r24, 0x0c	; 12
     47a:	08 95       	ret

0000047c <USART_init>:

#include "uart.h"
FILE *uart ;
void USART_init(unsigned int ubrr) {
	
	UBRR0H = (unsigned char) (ubrr >> 8);
     47c:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char) (ubrr);
     47e:	89 b9       	out	0x09, r24	; 9
	
	/*Enable receiver and transmitter*/
	
	UCSR0B = (1<<RXEN0) | (1 <<TXEN0);
     480:	88 e1       	ldi	r24, 0x18	; 24
     482:	8a b9       	out	0x0a, r24	; 10
	
	/* SET FRAME FORMAT: 8data, 2 stop bit */
	UCSR0C = (1 << URSEL0) | (1<<USBS0) | (3<<UCSZ00);
     484:	8e e8       	ldi	r24, 0x8E	; 142
     486:	80 bd       	out	0x20, r24	; 32
	
	uart = fdevopen(&USART_transmitChar, &USART_receiveChar);
     488:	6a e3       	ldi	r22, 0x3A	; 58
     48a:	72 e0       	ldi	r23, 0x02	; 2
     48c:	86 e3       	ldi	r24, 0x36	; 54
     48e:	92 e0       	ldi	r25, 0x02	; 2
     490:	0e 94 54 06 	call	0xca8	; 0xca8 <fdevopen>
     494:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <uart+0x1>
     498:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <uart>
     49c:	08 95       	ret

0000049e <xmem_init>:
#define BASE_ADDRESS 0x1000;
#include <avr/io.h>
#include "xmem.h"

void xmem_init(void) {
	MCUCR |= (1<<SRE);
     49e:	85 b7       	in	r24, 0x35	; 53
     4a0:	80 68       	ori	r24, 0x80	; 128
     4a2:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1<<XMM0);
     4a4:	80 b7       	in	r24, 0x30	; 48
     4a6:	88 60       	ori	r24, 0x08	; 8
     4a8:	80 bf       	out	0x30, r24	; 48
     4aa:	08 95       	ret
     4ac:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fp_pscA>
     4b0:	60 f0       	brcs	.+24     	; 0x4ca <xmem_init+0x2c>
     4b2:	80 e8       	ldi	r24, 0x80	; 128
     4b4:	91 e0       	ldi	r25, 0x01	; 1
     4b6:	09 f4       	brne	.+2      	; 0x4ba <xmem_init+0x1c>
     4b8:	9e ef       	ldi	r25, 0xFE	; 254
     4ba:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <__fp_pscB>
     4be:	28 f0       	brcs	.+10     	; 0x4ca <xmem_init+0x2c>
     4c0:	40 e8       	ldi	r20, 0x80	; 128
     4c2:	51 e0       	ldi	r21, 0x01	; 1
     4c4:	71 f4       	brne	.+28     	; 0x4e2 <atan2+0x10>
     4c6:	5e ef       	ldi	r21, 0xFE	; 254
     4c8:	0c c0       	rjmp	.+24     	; 0x4e2 <atan2+0x10>
     4ca:	0c 94 b3 03 	jmp	0x766	; 0x766 <__fp_nan>
     4ce:	0c 94 1e 04 	jmp	0x83c	; 0x83c <__fp_zero>

000004d2 <atan2>:
     4d2:	e9 2f       	mov	r30, r25
     4d4:	e0 78       	andi	r30, 0x80	; 128
     4d6:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__fp_split3>
     4da:	40 f3       	brcs	.-48     	; 0x4ac <xmem_init+0xe>
     4dc:	09 2e       	mov	r0, r25
     4de:	05 2a       	or	r0, r21
     4e0:	b1 f3       	breq	.-20     	; 0x4ce <xmem_init+0x30>
     4e2:	26 17       	cp	r18, r22
     4e4:	37 07       	cpc	r19, r23
     4e6:	48 07       	cpc	r20, r24
     4e8:	59 07       	cpc	r21, r25
     4ea:	38 f0       	brcs	.+14     	; 0x4fa <atan2+0x28>
     4ec:	0e 2e       	mov	r0, r30
     4ee:	07 f8       	bld	r0, 7
     4f0:	e0 25       	eor	r30, r0
     4f2:	69 f0       	breq	.+26     	; 0x50e <__stack+0xf>
     4f4:	e0 25       	eor	r30, r0
     4f6:	e0 64       	ori	r30, 0x40	; 64
     4f8:	0a c0       	rjmp	.+20     	; 0x50e <__stack+0xf>
     4fa:	ef 63       	ori	r30, 0x3F	; 63
     4fc:	07 f8       	bld	r0, 7
     4fe:	00 94       	com	r0
     500:	07 fa       	bst	r0, 7
     502:	db 01       	movw	r26, r22
     504:	b9 01       	movw	r22, r18
     506:	9d 01       	movw	r18, r26
     508:	dc 01       	movw	r26, r24
     50a:	ca 01       	movw	r24, r20
     50c:	ad 01       	movw	r20, r26
     50e:	ef 93       	push	r30
     510:	0e 94 df 02 	call	0x5be	; 0x5be <__divsf3_pse>
     514:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <__fp_round>
     518:	0e 94 99 02 	call	0x532	; 0x532 <atan>
     51c:	5f 91       	pop	r21
     51e:	55 23       	and	r21, r21
     520:	39 f0       	breq	.+14     	; 0x530 <__stack+0x31>
     522:	2b ed       	ldi	r18, 0xDB	; 219
     524:	3f e0       	ldi	r19, 0x0F	; 15
     526:	49 e4       	ldi	r20, 0x49	; 73
     528:	50 fd       	sbrc	r21, 0
     52a:	49 ec       	ldi	r20, 0xC9	; 201
     52c:	0c 94 9f 04 	jmp	0x93e	; 0x93e <__addsf3>
     530:	08 95       	ret

00000532 <atan>:
     532:	df 93       	push	r29
     534:	dd 27       	eor	r29, r29
     536:	b9 2f       	mov	r27, r25
     538:	bf 77       	andi	r27, 0x7F	; 127
     53a:	40 e8       	ldi	r20, 0x80	; 128
     53c:	5f e3       	ldi	r21, 0x3F	; 63
     53e:	16 16       	cp	r1, r22
     540:	17 06       	cpc	r1, r23
     542:	48 07       	cpc	r20, r24
     544:	5b 07       	cpc	r21, r27
     546:	18 f4       	brcc	.+6      	; 0x54e <atan+0x1c>
     548:	d9 2f       	mov	r29, r25
     54a:	0e 94 25 04 	call	0x84a	; 0x84a <inverse>
     54e:	9f 93       	push	r25
     550:	8f 93       	push	r24
     552:	7f 93       	push	r23
     554:	6f 93       	push	r22
     556:	0e 94 9a 04 	call	0x934	; 0x934 <square>
     55a:	e0 e7       	ldi	r30, 0x70	; 112
     55c:	f0 e0       	ldi	r31, 0x00	; 0
     55e:	0e 94 b6 03 	call	0x76c	; 0x76c <__fp_powser>
     562:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <__fp_round>
     566:	2f 91       	pop	r18
     568:	3f 91       	pop	r19
     56a:	4f 91       	pop	r20
     56c:	5f 91       	pop	r21
     56e:	0e 94 40 04 	call	0x880	; 0x880 <__mulsf3x>
     572:	dd 23       	and	r29, r29
     574:	51 f0       	breq	.+20     	; 0x58a <atan+0x58>
     576:	90 58       	subi	r25, 0x80	; 128
     578:	a2 ea       	ldi	r26, 0xA2	; 162
     57a:	2a ed       	ldi	r18, 0xDA	; 218
     57c:	3f e0       	ldi	r19, 0x0F	; 15
     57e:	49 ec       	ldi	r20, 0xC9	; 201
     580:	5f e3       	ldi	r21, 0x3F	; 63
     582:	d0 78       	andi	r29, 0x80	; 128
     584:	5d 27       	eor	r21, r29
     586:	0e 94 b6 04 	call	0x96c	; 0x96c <__addsf3x>
     58a:	df 91       	pop	r29
     58c:	0c 94 eb 03 	jmp	0x7d6	; 0x7d6 <__fp_round>

00000590 <__divsf3>:
     590:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <__divsf3x>
     594:	0c 94 eb 03 	jmp	0x7d6	; 0x7d6 <__fp_round>
     598:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <__fp_pscB>
     59c:	58 f0       	brcs	.+22     	; 0x5b4 <__divsf3+0x24>
     59e:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fp_pscA>
     5a2:	40 f0       	brcs	.+16     	; 0x5b4 <__divsf3+0x24>
     5a4:	29 f4       	brne	.+10     	; 0x5b0 <__divsf3+0x20>
     5a6:	5f 3f       	cpi	r21, 0xFF	; 255
     5a8:	29 f0       	breq	.+10     	; 0x5b4 <__divsf3+0x24>
     5aa:	0c 94 ad 03 	jmp	0x75a	; 0x75a <__fp_inf>
     5ae:	51 11       	cpse	r21, r1
     5b0:	0c 94 1f 04 	jmp	0x83e	; 0x83e <__fp_szero>
     5b4:	0c 94 b3 03 	jmp	0x766	; 0x766 <__fp_nan>

000005b8 <__divsf3x>:
     5b8:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__fp_split3>
     5bc:	68 f3       	brcs	.-38     	; 0x598 <__divsf3+0x8>

000005be <__divsf3_pse>:
     5be:	99 23       	and	r25, r25
     5c0:	b1 f3       	breq	.-20     	; 0x5ae <__divsf3+0x1e>
     5c2:	55 23       	and	r21, r21
     5c4:	91 f3       	breq	.-28     	; 0x5aa <__divsf3+0x1a>
     5c6:	95 1b       	sub	r25, r21
     5c8:	55 0b       	sbc	r21, r21
     5ca:	bb 27       	eor	r27, r27
     5cc:	aa 27       	eor	r26, r26
     5ce:	62 17       	cp	r22, r18
     5d0:	73 07       	cpc	r23, r19
     5d2:	84 07       	cpc	r24, r20
     5d4:	38 f0       	brcs	.+14     	; 0x5e4 <__divsf3_pse+0x26>
     5d6:	9f 5f       	subi	r25, 0xFF	; 255
     5d8:	5f 4f       	sbci	r21, 0xFF	; 255
     5da:	22 0f       	add	r18, r18
     5dc:	33 1f       	adc	r19, r19
     5de:	44 1f       	adc	r20, r20
     5e0:	aa 1f       	adc	r26, r26
     5e2:	a9 f3       	breq	.-22     	; 0x5ce <__divsf3_pse+0x10>
     5e4:	35 d0       	rcall	.+106    	; 0x650 <__divsf3_pse+0x92>
     5e6:	0e 2e       	mov	r0, r30
     5e8:	3a f0       	brmi	.+14     	; 0x5f8 <__divsf3_pse+0x3a>
     5ea:	e0 e8       	ldi	r30, 0x80	; 128
     5ec:	32 d0       	rcall	.+100    	; 0x652 <__divsf3_pse+0x94>
     5ee:	91 50       	subi	r25, 0x01	; 1
     5f0:	50 40       	sbci	r21, 0x00	; 0
     5f2:	e6 95       	lsr	r30
     5f4:	00 1c       	adc	r0, r0
     5f6:	ca f7       	brpl	.-14     	; 0x5ea <__divsf3_pse+0x2c>
     5f8:	2b d0       	rcall	.+86     	; 0x650 <__divsf3_pse+0x92>
     5fa:	fe 2f       	mov	r31, r30
     5fc:	29 d0       	rcall	.+82     	; 0x650 <__divsf3_pse+0x92>
     5fe:	66 0f       	add	r22, r22
     600:	77 1f       	adc	r23, r23
     602:	88 1f       	adc	r24, r24
     604:	bb 1f       	adc	r27, r27
     606:	26 17       	cp	r18, r22
     608:	37 07       	cpc	r19, r23
     60a:	48 07       	cpc	r20, r24
     60c:	ab 07       	cpc	r26, r27
     60e:	b0 e8       	ldi	r27, 0x80	; 128
     610:	09 f0       	breq	.+2      	; 0x614 <__divsf3_pse+0x56>
     612:	bb 0b       	sbc	r27, r27
     614:	80 2d       	mov	r24, r0
     616:	bf 01       	movw	r22, r30
     618:	ff 27       	eor	r31, r31
     61a:	93 58       	subi	r25, 0x83	; 131
     61c:	5f 4f       	sbci	r21, 0xFF	; 255
     61e:	3a f0       	brmi	.+14     	; 0x62e <__divsf3_pse+0x70>
     620:	9e 3f       	cpi	r25, 0xFE	; 254
     622:	51 05       	cpc	r21, r1
     624:	78 f0       	brcs	.+30     	; 0x644 <__divsf3_pse+0x86>
     626:	0c 94 ad 03 	jmp	0x75a	; 0x75a <__fp_inf>
     62a:	0c 94 1f 04 	jmp	0x83e	; 0x83e <__fp_szero>
     62e:	5f 3f       	cpi	r21, 0xFF	; 255
     630:	e4 f3       	brlt	.-8      	; 0x62a <__divsf3_pse+0x6c>
     632:	98 3e       	cpi	r25, 0xE8	; 232
     634:	d4 f3       	brlt	.-12     	; 0x62a <__divsf3_pse+0x6c>
     636:	86 95       	lsr	r24
     638:	77 95       	ror	r23
     63a:	67 95       	ror	r22
     63c:	b7 95       	ror	r27
     63e:	f7 95       	ror	r31
     640:	9f 5f       	subi	r25, 0xFF	; 255
     642:	c9 f7       	brne	.-14     	; 0x636 <__divsf3_pse+0x78>
     644:	88 0f       	add	r24, r24
     646:	91 1d       	adc	r25, r1
     648:	96 95       	lsr	r25
     64a:	87 95       	ror	r24
     64c:	97 f9       	bld	r25, 7
     64e:	08 95       	ret
     650:	e1 e0       	ldi	r30, 0x01	; 1
     652:	66 0f       	add	r22, r22
     654:	77 1f       	adc	r23, r23
     656:	88 1f       	adc	r24, r24
     658:	bb 1f       	adc	r27, r27
     65a:	62 17       	cp	r22, r18
     65c:	73 07       	cpc	r23, r19
     65e:	84 07       	cpc	r24, r20
     660:	ba 07       	cpc	r27, r26
     662:	20 f0       	brcs	.+8      	; 0x66c <__divsf3_pse+0xae>
     664:	62 1b       	sub	r22, r18
     666:	73 0b       	sbc	r23, r19
     668:	84 0b       	sbc	r24, r20
     66a:	ba 0b       	sbc	r27, r26
     66c:	ee 1f       	adc	r30, r30
     66e:	88 f7       	brcc	.-30     	; 0x652 <__divsf3_pse+0x94>
     670:	e0 95       	com	r30
     672:	08 95       	ret

00000674 <__fixsfsi>:
     674:	0e 94 41 03 	call	0x682	; 0x682 <__fixunssfsi>
     678:	68 94       	set
     67a:	b1 11       	cpse	r27, r1
     67c:	0c 94 1f 04 	jmp	0x83e	; 0x83e <__fp_szero>
     680:	08 95       	ret

00000682 <__fixunssfsi>:
     682:	0e 94 04 04 	call	0x808	; 0x808 <__fp_splitA>
     686:	88 f0       	brcs	.+34     	; 0x6aa <__fixunssfsi+0x28>
     688:	9f 57       	subi	r25, 0x7F	; 127
     68a:	98 f0       	brcs	.+38     	; 0x6b2 <__fixunssfsi+0x30>
     68c:	b9 2f       	mov	r27, r25
     68e:	99 27       	eor	r25, r25
     690:	b7 51       	subi	r27, 0x17	; 23
     692:	b0 f0       	brcs	.+44     	; 0x6c0 <__fixunssfsi+0x3e>
     694:	e1 f0       	breq	.+56     	; 0x6ce <__fixunssfsi+0x4c>
     696:	66 0f       	add	r22, r22
     698:	77 1f       	adc	r23, r23
     69a:	88 1f       	adc	r24, r24
     69c:	99 1f       	adc	r25, r25
     69e:	1a f0       	brmi	.+6      	; 0x6a6 <__fixunssfsi+0x24>
     6a0:	ba 95       	dec	r27
     6a2:	c9 f7       	brne	.-14     	; 0x696 <__fixunssfsi+0x14>
     6a4:	14 c0       	rjmp	.+40     	; 0x6ce <__fixunssfsi+0x4c>
     6a6:	b1 30       	cpi	r27, 0x01	; 1
     6a8:	91 f0       	breq	.+36     	; 0x6ce <__fixunssfsi+0x4c>
     6aa:	0e 94 1e 04 	call	0x83c	; 0x83c <__fp_zero>
     6ae:	b1 e0       	ldi	r27, 0x01	; 1
     6b0:	08 95       	ret
     6b2:	0c 94 1e 04 	jmp	0x83c	; 0x83c <__fp_zero>
     6b6:	67 2f       	mov	r22, r23
     6b8:	78 2f       	mov	r23, r24
     6ba:	88 27       	eor	r24, r24
     6bc:	b8 5f       	subi	r27, 0xF8	; 248
     6be:	39 f0       	breq	.+14     	; 0x6ce <__fixunssfsi+0x4c>
     6c0:	b9 3f       	cpi	r27, 0xF9	; 249
     6c2:	cc f3       	brlt	.-14     	; 0x6b6 <__fixunssfsi+0x34>
     6c4:	86 95       	lsr	r24
     6c6:	77 95       	ror	r23
     6c8:	67 95       	ror	r22
     6ca:	b3 95       	inc	r27
     6cc:	d9 f7       	brne	.-10     	; 0x6c4 <__fixunssfsi+0x42>
     6ce:	3e f4       	brtc	.+14     	; 0x6de <__fixunssfsi+0x5c>
     6d0:	90 95       	com	r25
     6d2:	80 95       	com	r24
     6d4:	70 95       	com	r23
     6d6:	61 95       	neg	r22
     6d8:	7f 4f       	sbci	r23, 0xFF	; 255
     6da:	8f 4f       	sbci	r24, 0xFF	; 255
     6dc:	9f 4f       	sbci	r25, 0xFF	; 255
     6de:	08 95       	ret

000006e0 <__floatunsisf>:
     6e0:	e8 94       	clt
     6e2:	09 c0       	rjmp	.+18     	; 0x6f6 <__floatsisf+0x12>

000006e4 <__floatsisf>:
     6e4:	97 fb       	bst	r25, 7
     6e6:	3e f4       	brtc	.+14     	; 0x6f6 <__floatsisf+0x12>
     6e8:	90 95       	com	r25
     6ea:	80 95       	com	r24
     6ec:	70 95       	com	r23
     6ee:	61 95       	neg	r22
     6f0:	7f 4f       	sbci	r23, 0xFF	; 255
     6f2:	8f 4f       	sbci	r24, 0xFF	; 255
     6f4:	9f 4f       	sbci	r25, 0xFF	; 255
     6f6:	99 23       	and	r25, r25
     6f8:	a9 f0       	breq	.+42     	; 0x724 <__floatsisf+0x40>
     6fa:	f9 2f       	mov	r31, r25
     6fc:	96 e9       	ldi	r25, 0x96	; 150
     6fe:	bb 27       	eor	r27, r27
     700:	93 95       	inc	r25
     702:	f6 95       	lsr	r31
     704:	87 95       	ror	r24
     706:	77 95       	ror	r23
     708:	67 95       	ror	r22
     70a:	b7 95       	ror	r27
     70c:	f1 11       	cpse	r31, r1
     70e:	f8 cf       	rjmp	.-16     	; 0x700 <__floatsisf+0x1c>
     710:	fa f4       	brpl	.+62     	; 0x750 <__floatsisf+0x6c>
     712:	bb 0f       	add	r27, r27
     714:	11 f4       	brne	.+4      	; 0x71a <__floatsisf+0x36>
     716:	60 ff       	sbrs	r22, 0
     718:	1b c0       	rjmp	.+54     	; 0x750 <__floatsisf+0x6c>
     71a:	6f 5f       	subi	r22, 0xFF	; 255
     71c:	7f 4f       	sbci	r23, 0xFF	; 255
     71e:	8f 4f       	sbci	r24, 0xFF	; 255
     720:	9f 4f       	sbci	r25, 0xFF	; 255
     722:	16 c0       	rjmp	.+44     	; 0x750 <__floatsisf+0x6c>
     724:	88 23       	and	r24, r24
     726:	11 f0       	breq	.+4      	; 0x72c <__floatsisf+0x48>
     728:	96 e9       	ldi	r25, 0x96	; 150
     72a:	11 c0       	rjmp	.+34     	; 0x74e <__floatsisf+0x6a>
     72c:	77 23       	and	r23, r23
     72e:	21 f0       	breq	.+8      	; 0x738 <__floatsisf+0x54>
     730:	9e e8       	ldi	r25, 0x8E	; 142
     732:	87 2f       	mov	r24, r23
     734:	76 2f       	mov	r23, r22
     736:	05 c0       	rjmp	.+10     	; 0x742 <__floatsisf+0x5e>
     738:	66 23       	and	r22, r22
     73a:	71 f0       	breq	.+28     	; 0x758 <__floatsisf+0x74>
     73c:	96 e8       	ldi	r25, 0x86	; 134
     73e:	86 2f       	mov	r24, r22
     740:	70 e0       	ldi	r23, 0x00	; 0
     742:	60 e0       	ldi	r22, 0x00	; 0
     744:	2a f0       	brmi	.+10     	; 0x750 <__floatsisf+0x6c>
     746:	9a 95       	dec	r25
     748:	66 0f       	add	r22, r22
     74a:	77 1f       	adc	r23, r23
     74c:	88 1f       	adc	r24, r24
     74e:	da f7       	brpl	.-10     	; 0x746 <__floatsisf+0x62>
     750:	88 0f       	add	r24, r24
     752:	96 95       	lsr	r25
     754:	87 95       	ror	r24
     756:	97 f9       	bld	r25, 7
     758:	08 95       	ret

0000075a <__fp_inf>:
     75a:	97 f9       	bld	r25, 7
     75c:	9f 67       	ori	r25, 0x7F	; 127
     75e:	80 e8       	ldi	r24, 0x80	; 128
     760:	70 e0       	ldi	r23, 0x00	; 0
     762:	60 e0       	ldi	r22, 0x00	; 0
     764:	08 95       	ret

00000766 <__fp_nan>:
     766:	9f ef       	ldi	r25, 0xFF	; 255
     768:	80 ec       	ldi	r24, 0xC0	; 192
     76a:	08 95       	ret

0000076c <__fp_powser>:
     76c:	df 93       	push	r29
     76e:	cf 93       	push	r28
     770:	1f 93       	push	r17
     772:	0f 93       	push	r16
     774:	ff 92       	push	r15
     776:	ef 92       	push	r14
     778:	df 92       	push	r13
     77a:	7b 01       	movw	r14, r22
     77c:	8c 01       	movw	r16, r24
     77e:	68 94       	set
     780:	06 c0       	rjmp	.+12     	; 0x78e <__fp_powser+0x22>
     782:	da 2e       	mov	r13, r26
     784:	ef 01       	movw	r28, r30
     786:	0e 94 40 04 	call	0x880	; 0x880 <__mulsf3x>
     78a:	fe 01       	movw	r30, r28
     78c:	e8 94       	clt
     78e:	a5 91       	lpm	r26, Z+
     790:	25 91       	lpm	r18, Z+
     792:	35 91       	lpm	r19, Z+
     794:	45 91       	lpm	r20, Z+
     796:	55 91       	lpm	r21, Z+
     798:	a6 f3       	brts	.-24     	; 0x782 <__fp_powser+0x16>
     79a:	ef 01       	movw	r28, r30
     79c:	0e 94 b6 04 	call	0x96c	; 0x96c <__addsf3x>
     7a0:	fe 01       	movw	r30, r28
     7a2:	97 01       	movw	r18, r14
     7a4:	a8 01       	movw	r20, r16
     7a6:	da 94       	dec	r13
     7a8:	69 f7       	brne	.-38     	; 0x784 <__fp_powser+0x18>
     7aa:	df 90       	pop	r13
     7ac:	ef 90       	pop	r14
     7ae:	ff 90       	pop	r15
     7b0:	0f 91       	pop	r16
     7b2:	1f 91       	pop	r17
     7b4:	cf 91       	pop	r28
     7b6:	df 91       	pop	r29
     7b8:	08 95       	ret

000007ba <__fp_pscA>:
     7ba:	00 24       	eor	r0, r0
     7bc:	0a 94       	dec	r0
     7be:	16 16       	cp	r1, r22
     7c0:	17 06       	cpc	r1, r23
     7c2:	18 06       	cpc	r1, r24
     7c4:	09 06       	cpc	r0, r25
     7c6:	08 95       	ret

000007c8 <__fp_pscB>:
     7c8:	00 24       	eor	r0, r0
     7ca:	0a 94       	dec	r0
     7cc:	12 16       	cp	r1, r18
     7ce:	13 06       	cpc	r1, r19
     7d0:	14 06       	cpc	r1, r20
     7d2:	05 06       	cpc	r0, r21
     7d4:	08 95       	ret

000007d6 <__fp_round>:
     7d6:	09 2e       	mov	r0, r25
     7d8:	03 94       	inc	r0
     7da:	00 0c       	add	r0, r0
     7dc:	11 f4       	brne	.+4      	; 0x7e2 <__fp_round+0xc>
     7de:	88 23       	and	r24, r24
     7e0:	52 f0       	brmi	.+20     	; 0x7f6 <__fp_round+0x20>
     7e2:	bb 0f       	add	r27, r27
     7e4:	40 f4       	brcc	.+16     	; 0x7f6 <__fp_round+0x20>
     7e6:	bf 2b       	or	r27, r31
     7e8:	11 f4       	brne	.+4      	; 0x7ee <__fp_round+0x18>
     7ea:	60 ff       	sbrs	r22, 0
     7ec:	04 c0       	rjmp	.+8      	; 0x7f6 <__fp_round+0x20>
     7ee:	6f 5f       	subi	r22, 0xFF	; 255
     7f0:	7f 4f       	sbci	r23, 0xFF	; 255
     7f2:	8f 4f       	sbci	r24, 0xFF	; 255
     7f4:	9f 4f       	sbci	r25, 0xFF	; 255
     7f6:	08 95       	ret

000007f8 <__fp_split3>:
     7f8:	57 fd       	sbrc	r21, 7
     7fa:	90 58       	subi	r25, 0x80	; 128
     7fc:	44 0f       	add	r20, r20
     7fe:	55 1f       	adc	r21, r21
     800:	59 f0       	breq	.+22     	; 0x818 <__fp_splitA+0x10>
     802:	5f 3f       	cpi	r21, 0xFF	; 255
     804:	71 f0       	breq	.+28     	; 0x822 <__fp_splitA+0x1a>
     806:	47 95       	ror	r20

00000808 <__fp_splitA>:
     808:	88 0f       	add	r24, r24
     80a:	97 fb       	bst	r25, 7
     80c:	99 1f       	adc	r25, r25
     80e:	61 f0       	breq	.+24     	; 0x828 <__fp_splitA+0x20>
     810:	9f 3f       	cpi	r25, 0xFF	; 255
     812:	79 f0       	breq	.+30     	; 0x832 <__fp_splitA+0x2a>
     814:	87 95       	ror	r24
     816:	08 95       	ret
     818:	12 16       	cp	r1, r18
     81a:	13 06       	cpc	r1, r19
     81c:	14 06       	cpc	r1, r20
     81e:	55 1f       	adc	r21, r21
     820:	f2 cf       	rjmp	.-28     	; 0x806 <__fp_split3+0xe>
     822:	46 95       	lsr	r20
     824:	f1 df       	rcall	.-30     	; 0x808 <__fp_splitA>
     826:	08 c0       	rjmp	.+16     	; 0x838 <__fp_splitA+0x30>
     828:	16 16       	cp	r1, r22
     82a:	17 06       	cpc	r1, r23
     82c:	18 06       	cpc	r1, r24
     82e:	99 1f       	adc	r25, r25
     830:	f1 cf       	rjmp	.-30     	; 0x814 <__fp_splitA+0xc>
     832:	86 95       	lsr	r24
     834:	71 05       	cpc	r23, r1
     836:	61 05       	cpc	r22, r1
     838:	08 94       	sec
     83a:	08 95       	ret

0000083c <__fp_zero>:
     83c:	e8 94       	clt

0000083e <__fp_szero>:
     83e:	bb 27       	eor	r27, r27
     840:	66 27       	eor	r22, r22
     842:	77 27       	eor	r23, r23
     844:	cb 01       	movw	r24, r22
     846:	97 f9       	bld	r25, 7
     848:	08 95       	ret

0000084a <inverse>:
     84a:	9b 01       	movw	r18, r22
     84c:	ac 01       	movw	r20, r24
     84e:	60 e0       	ldi	r22, 0x00	; 0
     850:	70 e0       	ldi	r23, 0x00	; 0
     852:	80 e8       	ldi	r24, 0x80	; 128
     854:	9f e3       	ldi	r25, 0x3F	; 63
     856:	0c 94 c8 02 	jmp	0x590	; 0x590 <__divsf3>

0000085a <__mulsf3>:
     85a:	0e 94 40 04 	call	0x880	; 0x880 <__mulsf3x>
     85e:	0c 94 eb 03 	jmp	0x7d6	; 0x7d6 <__fp_round>
     862:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fp_pscA>
     866:	38 f0       	brcs	.+14     	; 0x876 <__mulsf3+0x1c>
     868:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <__fp_pscB>
     86c:	20 f0       	brcs	.+8      	; 0x876 <__mulsf3+0x1c>
     86e:	95 23       	and	r25, r21
     870:	11 f0       	breq	.+4      	; 0x876 <__mulsf3+0x1c>
     872:	0c 94 ad 03 	jmp	0x75a	; 0x75a <__fp_inf>
     876:	0c 94 b3 03 	jmp	0x766	; 0x766 <__fp_nan>
     87a:	11 24       	eor	r1, r1
     87c:	0c 94 1f 04 	jmp	0x83e	; 0x83e <__fp_szero>

00000880 <__mulsf3x>:
     880:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__fp_split3>
     884:	70 f3       	brcs	.-36     	; 0x862 <__mulsf3+0x8>

00000886 <__mulsf3_pse>:
     886:	95 9f       	mul	r25, r21
     888:	c1 f3       	breq	.-16     	; 0x87a <__mulsf3+0x20>
     88a:	95 0f       	add	r25, r21
     88c:	50 e0       	ldi	r21, 0x00	; 0
     88e:	55 1f       	adc	r21, r21
     890:	62 9f       	mul	r22, r18
     892:	f0 01       	movw	r30, r0
     894:	72 9f       	mul	r23, r18
     896:	bb 27       	eor	r27, r27
     898:	f0 0d       	add	r31, r0
     89a:	b1 1d       	adc	r27, r1
     89c:	63 9f       	mul	r22, r19
     89e:	aa 27       	eor	r26, r26
     8a0:	f0 0d       	add	r31, r0
     8a2:	b1 1d       	adc	r27, r1
     8a4:	aa 1f       	adc	r26, r26
     8a6:	64 9f       	mul	r22, r20
     8a8:	66 27       	eor	r22, r22
     8aa:	b0 0d       	add	r27, r0
     8ac:	a1 1d       	adc	r26, r1
     8ae:	66 1f       	adc	r22, r22
     8b0:	82 9f       	mul	r24, r18
     8b2:	22 27       	eor	r18, r18
     8b4:	b0 0d       	add	r27, r0
     8b6:	a1 1d       	adc	r26, r1
     8b8:	62 1f       	adc	r22, r18
     8ba:	73 9f       	mul	r23, r19
     8bc:	b0 0d       	add	r27, r0
     8be:	a1 1d       	adc	r26, r1
     8c0:	62 1f       	adc	r22, r18
     8c2:	83 9f       	mul	r24, r19
     8c4:	a0 0d       	add	r26, r0
     8c6:	61 1d       	adc	r22, r1
     8c8:	22 1f       	adc	r18, r18
     8ca:	74 9f       	mul	r23, r20
     8cc:	33 27       	eor	r19, r19
     8ce:	a0 0d       	add	r26, r0
     8d0:	61 1d       	adc	r22, r1
     8d2:	23 1f       	adc	r18, r19
     8d4:	84 9f       	mul	r24, r20
     8d6:	60 0d       	add	r22, r0
     8d8:	21 1d       	adc	r18, r1
     8da:	82 2f       	mov	r24, r18
     8dc:	76 2f       	mov	r23, r22
     8de:	6a 2f       	mov	r22, r26
     8e0:	11 24       	eor	r1, r1
     8e2:	9f 57       	subi	r25, 0x7F	; 127
     8e4:	50 40       	sbci	r21, 0x00	; 0
     8e6:	9a f0       	brmi	.+38     	; 0x90e <__mulsf3_pse+0x88>
     8e8:	f1 f0       	breq	.+60     	; 0x926 <__mulsf3_pse+0xa0>
     8ea:	88 23       	and	r24, r24
     8ec:	4a f0       	brmi	.+18     	; 0x900 <__mulsf3_pse+0x7a>
     8ee:	ee 0f       	add	r30, r30
     8f0:	ff 1f       	adc	r31, r31
     8f2:	bb 1f       	adc	r27, r27
     8f4:	66 1f       	adc	r22, r22
     8f6:	77 1f       	adc	r23, r23
     8f8:	88 1f       	adc	r24, r24
     8fa:	91 50       	subi	r25, 0x01	; 1
     8fc:	50 40       	sbci	r21, 0x00	; 0
     8fe:	a9 f7       	brne	.-22     	; 0x8ea <__mulsf3_pse+0x64>
     900:	9e 3f       	cpi	r25, 0xFE	; 254
     902:	51 05       	cpc	r21, r1
     904:	80 f0       	brcs	.+32     	; 0x926 <__mulsf3_pse+0xa0>
     906:	0c 94 ad 03 	jmp	0x75a	; 0x75a <__fp_inf>
     90a:	0c 94 1f 04 	jmp	0x83e	; 0x83e <__fp_szero>
     90e:	5f 3f       	cpi	r21, 0xFF	; 255
     910:	e4 f3       	brlt	.-8      	; 0x90a <__mulsf3_pse+0x84>
     912:	98 3e       	cpi	r25, 0xE8	; 232
     914:	d4 f3       	brlt	.-12     	; 0x90a <__mulsf3_pse+0x84>
     916:	86 95       	lsr	r24
     918:	77 95       	ror	r23
     91a:	67 95       	ror	r22
     91c:	b7 95       	ror	r27
     91e:	f7 95       	ror	r31
     920:	e7 95       	ror	r30
     922:	9f 5f       	subi	r25, 0xFF	; 255
     924:	c1 f7       	brne	.-16     	; 0x916 <__mulsf3_pse+0x90>
     926:	fe 2b       	or	r31, r30
     928:	88 0f       	add	r24, r24
     92a:	91 1d       	adc	r25, r1
     92c:	96 95       	lsr	r25
     92e:	87 95       	ror	r24
     930:	97 f9       	bld	r25, 7
     932:	08 95       	ret

00000934 <square>:
     934:	9b 01       	movw	r18, r22
     936:	ac 01       	movw	r20, r24
     938:	0c 94 2d 04 	jmp	0x85a	; 0x85a <__mulsf3>

0000093c <__subsf3>:
     93c:	50 58       	subi	r21, 0x80	; 128

0000093e <__addsf3>:
     93e:	bb 27       	eor	r27, r27
     940:	aa 27       	eor	r26, r26
     942:	0e 94 b6 04 	call	0x96c	; 0x96c <__addsf3x>
     946:	0c 94 eb 03 	jmp	0x7d6	; 0x7d6 <__fp_round>
     94a:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fp_pscA>
     94e:	38 f0       	brcs	.+14     	; 0x95e <__addsf3+0x20>
     950:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <__fp_pscB>
     954:	20 f0       	brcs	.+8      	; 0x95e <__addsf3+0x20>
     956:	39 f4       	brne	.+14     	; 0x966 <__addsf3+0x28>
     958:	9f 3f       	cpi	r25, 0xFF	; 255
     95a:	19 f4       	brne	.+6      	; 0x962 <__addsf3+0x24>
     95c:	26 f4       	brtc	.+8      	; 0x966 <__addsf3+0x28>
     95e:	0c 94 b3 03 	jmp	0x766	; 0x766 <__fp_nan>
     962:	0e f4       	brtc	.+2      	; 0x966 <__addsf3+0x28>
     964:	e0 95       	com	r30
     966:	e7 fb       	bst	r30, 7
     968:	0c 94 ad 03 	jmp	0x75a	; 0x75a <__fp_inf>

0000096c <__addsf3x>:
     96c:	e9 2f       	mov	r30, r25
     96e:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__fp_split3>
     972:	58 f3       	brcs	.-42     	; 0x94a <__addsf3+0xc>
     974:	ba 17       	cp	r27, r26
     976:	62 07       	cpc	r22, r18
     978:	73 07       	cpc	r23, r19
     97a:	84 07       	cpc	r24, r20
     97c:	95 07       	cpc	r25, r21
     97e:	20 f0       	brcs	.+8      	; 0x988 <__addsf3x+0x1c>
     980:	79 f4       	brne	.+30     	; 0x9a0 <__addsf3x+0x34>
     982:	a6 f5       	brtc	.+104    	; 0x9ec <__addsf3x+0x80>
     984:	0c 94 1e 04 	jmp	0x83c	; 0x83c <__fp_zero>
     988:	0e f4       	brtc	.+2      	; 0x98c <__addsf3x+0x20>
     98a:	e0 95       	com	r30
     98c:	0b 2e       	mov	r0, r27
     98e:	ba 2f       	mov	r27, r26
     990:	a0 2d       	mov	r26, r0
     992:	0b 01       	movw	r0, r22
     994:	b9 01       	movw	r22, r18
     996:	90 01       	movw	r18, r0
     998:	0c 01       	movw	r0, r24
     99a:	ca 01       	movw	r24, r20
     99c:	a0 01       	movw	r20, r0
     99e:	11 24       	eor	r1, r1
     9a0:	ff 27       	eor	r31, r31
     9a2:	59 1b       	sub	r21, r25
     9a4:	99 f0       	breq	.+38     	; 0x9cc <__addsf3x+0x60>
     9a6:	59 3f       	cpi	r21, 0xF9	; 249
     9a8:	50 f4       	brcc	.+20     	; 0x9be <__addsf3x+0x52>
     9aa:	50 3e       	cpi	r21, 0xE0	; 224
     9ac:	68 f1       	brcs	.+90     	; 0xa08 <__addsf3x+0x9c>
     9ae:	1a 16       	cp	r1, r26
     9b0:	f0 40       	sbci	r31, 0x00	; 0
     9b2:	a2 2f       	mov	r26, r18
     9b4:	23 2f       	mov	r18, r19
     9b6:	34 2f       	mov	r19, r20
     9b8:	44 27       	eor	r20, r20
     9ba:	58 5f       	subi	r21, 0xF8	; 248
     9bc:	f3 cf       	rjmp	.-26     	; 0x9a4 <__addsf3x+0x38>
     9be:	46 95       	lsr	r20
     9c0:	37 95       	ror	r19
     9c2:	27 95       	ror	r18
     9c4:	a7 95       	ror	r26
     9c6:	f0 40       	sbci	r31, 0x00	; 0
     9c8:	53 95       	inc	r21
     9ca:	c9 f7       	brne	.-14     	; 0x9be <__addsf3x+0x52>
     9cc:	7e f4       	brtc	.+30     	; 0x9ec <__addsf3x+0x80>
     9ce:	1f 16       	cp	r1, r31
     9d0:	ba 0b       	sbc	r27, r26
     9d2:	62 0b       	sbc	r22, r18
     9d4:	73 0b       	sbc	r23, r19
     9d6:	84 0b       	sbc	r24, r20
     9d8:	ba f0       	brmi	.+46     	; 0xa08 <__addsf3x+0x9c>
     9da:	91 50       	subi	r25, 0x01	; 1
     9dc:	a1 f0       	breq	.+40     	; 0xa06 <__addsf3x+0x9a>
     9de:	ff 0f       	add	r31, r31
     9e0:	bb 1f       	adc	r27, r27
     9e2:	66 1f       	adc	r22, r22
     9e4:	77 1f       	adc	r23, r23
     9e6:	88 1f       	adc	r24, r24
     9e8:	c2 f7       	brpl	.-16     	; 0x9da <__addsf3x+0x6e>
     9ea:	0e c0       	rjmp	.+28     	; 0xa08 <__addsf3x+0x9c>
     9ec:	ba 0f       	add	r27, r26
     9ee:	62 1f       	adc	r22, r18
     9f0:	73 1f       	adc	r23, r19
     9f2:	84 1f       	adc	r24, r20
     9f4:	48 f4       	brcc	.+18     	; 0xa08 <__addsf3x+0x9c>
     9f6:	87 95       	ror	r24
     9f8:	77 95       	ror	r23
     9fa:	67 95       	ror	r22
     9fc:	b7 95       	ror	r27
     9fe:	f7 95       	ror	r31
     a00:	9e 3f       	cpi	r25, 0xFE	; 254
     a02:	08 f0       	brcs	.+2      	; 0xa06 <__addsf3x+0x9a>
     a04:	b0 cf       	rjmp	.-160    	; 0x966 <__addsf3+0x28>
     a06:	93 95       	inc	r25
     a08:	88 0f       	add	r24, r24
     a0a:	08 f0       	brcs	.+2      	; 0xa0e <__addsf3x+0xa2>
     a0c:	99 27       	eor	r25, r25
     a0e:	ee 0f       	add	r30, r30
     a10:	97 95       	ror	r25
     a12:	87 95       	ror	r24
     a14:	08 95       	ret

00000a16 <__divmodhi4>:
     a16:	97 fb       	bst	r25, 7
     a18:	07 2e       	mov	r0, r23
     a1a:	16 f4       	brtc	.+4      	; 0xa20 <__divmodhi4+0xa>
     a1c:	00 94       	com	r0
     a1e:	07 d0       	rcall	.+14     	; 0xa2e <__divmodhi4_neg1>
     a20:	77 fd       	sbrc	r23, 7
     a22:	09 d0       	rcall	.+18     	; 0xa36 <__divmodhi4_neg2>
     a24:	0e 94 1f 05 	call	0xa3e	; 0xa3e <__udivmodhi4>
     a28:	07 fc       	sbrc	r0, 7
     a2a:	05 d0       	rcall	.+10     	; 0xa36 <__divmodhi4_neg2>
     a2c:	3e f4       	brtc	.+14     	; 0xa3c <__divmodhi4_exit>

00000a2e <__divmodhi4_neg1>:
     a2e:	90 95       	com	r25
     a30:	81 95       	neg	r24
     a32:	9f 4f       	sbci	r25, 0xFF	; 255
     a34:	08 95       	ret

00000a36 <__divmodhi4_neg2>:
     a36:	70 95       	com	r23
     a38:	61 95       	neg	r22
     a3a:	7f 4f       	sbci	r23, 0xFF	; 255

00000a3c <__divmodhi4_exit>:
     a3c:	08 95       	ret

00000a3e <__udivmodhi4>:
     a3e:	aa 1b       	sub	r26, r26
     a40:	bb 1b       	sub	r27, r27
     a42:	51 e1       	ldi	r21, 0x11	; 17
     a44:	07 c0       	rjmp	.+14     	; 0xa54 <__udivmodhi4_ep>

00000a46 <__udivmodhi4_loop>:
     a46:	aa 1f       	adc	r26, r26
     a48:	bb 1f       	adc	r27, r27
     a4a:	a6 17       	cp	r26, r22
     a4c:	b7 07       	cpc	r27, r23
     a4e:	10 f0       	brcs	.+4      	; 0xa54 <__udivmodhi4_ep>
     a50:	a6 1b       	sub	r26, r22
     a52:	b7 0b       	sbc	r27, r23

00000a54 <__udivmodhi4_ep>:
     a54:	88 1f       	adc	r24, r24
     a56:	99 1f       	adc	r25, r25
     a58:	5a 95       	dec	r21
     a5a:	a9 f7       	brne	.-22     	; 0xa46 <__udivmodhi4_loop>
     a5c:	80 95       	com	r24
     a5e:	90 95       	com	r25
     a60:	bc 01       	movw	r22, r24
     a62:	cd 01       	movw	r24, r26
     a64:	08 95       	ret

00000a66 <malloc>:
     a66:	0f 93       	push	r16
     a68:	1f 93       	push	r17
     a6a:	cf 93       	push	r28
     a6c:	df 93       	push	r29
     a6e:	82 30       	cpi	r24, 0x02	; 2
     a70:	91 05       	cpc	r25, r1
     a72:	10 f4       	brcc	.+4      	; 0xa78 <malloc+0x12>
     a74:	82 e0       	ldi	r24, 0x02	; 2
     a76:	90 e0       	ldi	r25, 0x00	; 0
     a78:	e0 91 10 02 	lds	r30, 0x0210	; 0x800210 <__flp>
     a7c:	f0 91 11 02 	lds	r31, 0x0211	; 0x800211 <__flp+0x1>
     a80:	20 e0       	ldi	r18, 0x00	; 0
     a82:	30 e0       	ldi	r19, 0x00	; 0
     a84:	a0 e0       	ldi	r26, 0x00	; 0
     a86:	b0 e0       	ldi	r27, 0x00	; 0
     a88:	30 97       	sbiw	r30, 0x00	; 0
     a8a:	19 f1       	breq	.+70     	; 0xad2 <malloc+0x6c>
     a8c:	40 81       	ld	r20, Z
     a8e:	51 81       	ldd	r21, Z+1	; 0x01
     a90:	02 81       	ldd	r16, Z+2	; 0x02
     a92:	13 81       	ldd	r17, Z+3	; 0x03
     a94:	48 17       	cp	r20, r24
     a96:	59 07       	cpc	r21, r25
     a98:	c8 f0       	brcs	.+50     	; 0xacc <malloc+0x66>
     a9a:	84 17       	cp	r24, r20
     a9c:	95 07       	cpc	r25, r21
     a9e:	69 f4       	brne	.+26     	; 0xaba <malloc+0x54>
     aa0:	10 97       	sbiw	r26, 0x00	; 0
     aa2:	31 f0       	breq	.+12     	; 0xab0 <malloc+0x4a>
     aa4:	12 96       	adiw	r26, 0x02	; 2
     aa6:	0c 93       	st	X, r16
     aa8:	12 97       	sbiw	r26, 0x02	; 2
     aaa:	13 96       	adiw	r26, 0x03	; 3
     aac:	1c 93       	st	X, r17
     aae:	27 c0       	rjmp	.+78     	; 0xafe <malloc+0x98>
     ab0:	00 93 10 02 	sts	0x0210, r16	; 0x800210 <__flp>
     ab4:	10 93 11 02 	sts	0x0211, r17	; 0x800211 <__flp+0x1>
     ab8:	22 c0       	rjmp	.+68     	; 0xafe <malloc+0x98>
     aba:	21 15       	cp	r18, r1
     abc:	31 05       	cpc	r19, r1
     abe:	19 f0       	breq	.+6      	; 0xac6 <malloc+0x60>
     ac0:	42 17       	cp	r20, r18
     ac2:	53 07       	cpc	r21, r19
     ac4:	18 f4       	brcc	.+6      	; 0xacc <malloc+0x66>
     ac6:	9a 01       	movw	r18, r20
     ac8:	bd 01       	movw	r22, r26
     aca:	ef 01       	movw	r28, r30
     acc:	df 01       	movw	r26, r30
     ace:	f8 01       	movw	r30, r16
     ad0:	db cf       	rjmp	.-74     	; 0xa88 <malloc+0x22>
     ad2:	21 15       	cp	r18, r1
     ad4:	31 05       	cpc	r19, r1
     ad6:	f9 f0       	breq	.+62     	; 0xb16 <malloc+0xb0>
     ad8:	28 1b       	sub	r18, r24
     ada:	39 0b       	sbc	r19, r25
     adc:	24 30       	cpi	r18, 0x04	; 4
     ade:	31 05       	cpc	r19, r1
     ae0:	80 f4       	brcc	.+32     	; 0xb02 <malloc+0x9c>
     ae2:	8a 81       	ldd	r24, Y+2	; 0x02
     ae4:	9b 81       	ldd	r25, Y+3	; 0x03
     ae6:	61 15       	cp	r22, r1
     ae8:	71 05       	cpc	r23, r1
     aea:	21 f0       	breq	.+8      	; 0xaf4 <malloc+0x8e>
     aec:	fb 01       	movw	r30, r22
     aee:	93 83       	std	Z+3, r25	; 0x03
     af0:	82 83       	std	Z+2, r24	; 0x02
     af2:	04 c0       	rjmp	.+8      	; 0xafc <malloc+0x96>
     af4:	90 93 11 02 	sts	0x0211, r25	; 0x800211 <__flp+0x1>
     af8:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <__flp>
     afc:	fe 01       	movw	r30, r28
     afe:	32 96       	adiw	r30, 0x02	; 2
     b00:	44 c0       	rjmp	.+136    	; 0xb8a <malloc+0x124>
     b02:	fe 01       	movw	r30, r28
     b04:	e2 0f       	add	r30, r18
     b06:	f3 1f       	adc	r31, r19
     b08:	81 93       	st	Z+, r24
     b0a:	91 93       	st	Z+, r25
     b0c:	22 50       	subi	r18, 0x02	; 2
     b0e:	31 09       	sbc	r19, r1
     b10:	39 83       	std	Y+1, r19	; 0x01
     b12:	28 83       	st	Y, r18
     b14:	3a c0       	rjmp	.+116    	; 0xb8a <malloc+0x124>
     b16:	20 91 0e 02 	lds	r18, 0x020E	; 0x80020e <__brkval>
     b1a:	30 91 0f 02 	lds	r19, 0x020F	; 0x80020f <__brkval+0x1>
     b1e:	23 2b       	or	r18, r19
     b20:	41 f4       	brne	.+16     	; 0xb32 <malloc+0xcc>
     b22:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     b26:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     b2a:	30 93 0f 02 	sts	0x020F, r19	; 0x80020f <__brkval+0x1>
     b2e:	20 93 0e 02 	sts	0x020E, r18	; 0x80020e <__brkval>
     b32:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     b36:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     b3a:	21 15       	cp	r18, r1
     b3c:	31 05       	cpc	r19, r1
     b3e:	41 f4       	brne	.+16     	; 0xb50 <malloc+0xea>
     b40:	2d b7       	in	r18, 0x3d	; 61
     b42:	3e b7       	in	r19, 0x3e	; 62
     b44:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     b48:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     b4c:	24 1b       	sub	r18, r20
     b4e:	35 0b       	sbc	r19, r21
     b50:	e0 91 0e 02 	lds	r30, 0x020E	; 0x80020e <__brkval>
     b54:	f0 91 0f 02 	lds	r31, 0x020F	; 0x80020f <__brkval+0x1>
     b58:	e2 17       	cp	r30, r18
     b5a:	f3 07       	cpc	r31, r19
     b5c:	a0 f4       	brcc	.+40     	; 0xb86 <malloc+0x120>
     b5e:	2e 1b       	sub	r18, r30
     b60:	3f 0b       	sbc	r19, r31
     b62:	28 17       	cp	r18, r24
     b64:	39 07       	cpc	r19, r25
     b66:	78 f0       	brcs	.+30     	; 0xb86 <malloc+0x120>
     b68:	ac 01       	movw	r20, r24
     b6a:	4e 5f       	subi	r20, 0xFE	; 254
     b6c:	5f 4f       	sbci	r21, 0xFF	; 255
     b6e:	24 17       	cp	r18, r20
     b70:	35 07       	cpc	r19, r21
     b72:	48 f0       	brcs	.+18     	; 0xb86 <malloc+0x120>
     b74:	4e 0f       	add	r20, r30
     b76:	5f 1f       	adc	r21, r31
     b78:	50 93 0f 02 	sts	0x020F, r21	; 0x80020f <__brkval+0x1>
     b7c:	40 93 0e 02 	sts	0x020E, r20	; 0x80020e <__brkval>
     b80:	81 93       	st	Z+, r24
     b82:	91 93       	st	Z+, r25
     b84:	02 c0       	rjmp	.+4      	; 0xb8a <malloc+0x124>
     b86:	e0 e0       	ldi	r30, 0x00	; 0
     b88:	f0 e0       	ldi	r31, 0x00	; 0
     b8a:	cf 01       	movw	r24, r30
     b8c:	df 91       	pop	r29
     b8e:	cf 91       	pop	r28
     b90:	1f 91       	pop	r17
     b92:	0f 91       	pop	r16
     b94:	08 95       	ret

00000b96 <free>:
     b96:	cf 93       	push	r28
     b98:	df 93       	push	r29
     b9a:	00 97       	sbiw	r24, 0x00	; 0
     b9c:	09 f4       	brne	.+2      	; 0xba0 <free+0xa>
     b9e:	81 c0       	rjmp	.+258    	; 0xca2 <free+0x10c>
     ba0:	fc 01       	movw	r30, r24
     ba2:	32 97       	sbiw	r30, 0x02	; 2
     ba4:	13 82       	std	Z+3, r1	; 0x03
     ba6:	12 82       	std	Z+2, r1	; 0x02
     ba8:	a0 91 10 02 	lds	r26, 0x0210	; 0x800210 <__flp>
     bac:	b0 91 11 02 	lds	r27, 0x0211	; 0x800211 <__flp+0x1>
     bb0:	10 97       	sbiw	r26, 0x00	; 0
     bb2:	81 f4       	brne	.+32     	; 0xbd4 <free+0x3e>
     bb4:	20 81       	ld	r18, Z
     bb6:	31 81       	ldd	r19, Z+1	; 0x01
     bb8:	82 0f       	add	r24, r18
     bba:	93 1f       	adc	r25, r19
     bbc:	20 91 0e 02 	lds	r18, 0x020E	; 0x80020e <__brkval>
     bc0:	30 91 0f 02 	lds	r19, 0x020F	; 0x80020f <__brkval+0x1>
     bc4:	28 17       	cp	r18, r24
     bc6:	39 07       	cpc	r19, r25
     bc8:	51 f5       	brne	.+84     	; 0xc1e <free+0x88>
     bca:	f0 93 0f 02 	sts	0x020F, r31	; 0x80020f <__brkval+0x1>
     bce:	e0 93 0e 02 	sts	0x020E, r30	; 0x80020e <__brkval>
     bd2:	67 c0       	rjmp	.+206    	; 0xca2 <free+0x10c>
     bd4:	ed 01       	movw	r28, r26
     bd6:	20 e0       	ldi	r18, 0x00	; 0
     bd8:	30 e0       	ldi	r19, 0x00	; 0
     bda:	ce 17       	cp	r28, r30
     bdc:	df 07       	cpc	r29, r31
     bde:	40 f4       	brcc	.+16     	; 0xbf0 <free+0x5a>
     be0:	4a 81       	ldd	r20, Y+2	; 0x02
     be2:	5b 81       	ldd	r21, Y+3	; 0x03
     be4:	9e 01       	movw	r18, r28
     be6:	41 15       	cp	r20, r1
     be8:	51 05       	cpc	r21, r1
     bea:	f1 f0       	breq	.+60     	; 0xc28 <free+0x92>
     bec:	ea 01       	movw	r28, r20
     bee:	f5 cf       	rjmp	.-22     	; 0xbda <free+0x44>
     bf0:	d3 83       	std	Z+3, r29	; 0x03
     bf2:	c2 83       	std	Z+2, r28	; 0x02
     bf4:	40 81       	ld	r20, Z
     bf6:	51 81       	ldd	r21, Z+1	; 0x01
     bf8:	84 0f       	add	r24, r20
     bfa:	95 1f       	adc	r25, r21
     bfc:	c8 17       	cp	r28, r24
     bfe:	d9 07       	cpc	r29, r25
     c00:	59 f4       	brne	.+22     	; 0xc18 <free+0x82>
     c02:	88 81       	ld	r24, Y
     c04:	99 81       	ldd	r25, Y+1	; 0x01
     c06:	84 0f       	add	r24, r20
     c08:	95 1f       	adc	r25, r21
     c0a:	02 96       	adiw	r24, 0x02	; 2
     c0c:	91 83       	std	Z+1, r25	; 0x01
     c0e:	80 83       	st	Z, r24
     c10:	8a 81       	ldd	r24, Y+2	; 0x02
     c12:	9b 81       	ldd	r25, Y+3	; 0x03
     c14:	93 83       	std	Z+3, r25	; 0x03
     c16:	82 83       	std	Z+2, r24	; 0x02
     c18:	21 15       	cp	r18, r1
     c1a:	31 05       	cpc	r19, r1
     c1c:	29 f4       	brne	.+10     	; 0xc28 <free+0x92>
     c1e:	f0 93 11 02 	sts	0x0211, r31	; 0x800211 <__flp+0x1>
     c22:	e0 93 10 02 	sts	0x0210, r30	; 0x800210 <__flp>
     c26:	3d c0       	rjmp	.+122    	; 0xca2 <free+0x10c>
     c28:	e9 01       	movw	r28, r18
     c2a:	fb 83       	std	Y+3, r31	; 0x03
     c2c:	ea 83       	std	Y+2, r30	; 0x02
     c2e:	49 91       	ld	r20, Y+
     c30:	59 91       	ld	r21, Y+
     c32:	c4 0f       	add	r28, r20
     c34:	d5 1f       	adc	r29, r21
     c36:	ec 17       	cp	r30, r28
     c38:	fd 07       	cpc	r31, r29
     c3a:	61 f4       	brne	.+24     	; 0xc54 <free+0xbe>
     c3c:	80 81       	ld	r24, Z
     c3e:	91 81       	ldd	r25, Z+1	; 0x01
     c40:	84 0f       	add	r24, r20
     c42:	95 1f       	adc	r25, r21
     c44:	02 96       	adiw	r24, 0x02	; 2
     c46:	e9 01       	movw	r28, r18
     c48:	99 83       	std	Y+1, r25	; 0x01
     c4a:	88 83       	st	Y, r24
     c4c:	82 81       	ldd	r24, Z+2	; 0x02
     c4e:	93 81       	ldd	r25, Z+3	; 0x03
     c50:	9b 83       	std	Y+3, r25	; 0x03
     c52:	8a 83       	std	Y+2, r24	; 0x02
     c54:	e0 e0       	ldi	r30, 0x00	; 0
     c56:	f0 e0       	ldi	r31, 0x00	; 0
     c58:	12 96       	adiw	r26, 0x02	; 2
     c5a:	8d 91       	ld	r24, X+
     c5c:	9c 91       	ld	r25, X
     c5e:	13 97       	sbiw	r26, 0x03	; 3
     c60:	00 97       	sbiw	r24, 0x00	; 0
     c62:	19 f0       	breq	.+6      	; 0xc6a <free+0xd4>
     c64:	fd 01       	movw	r30, r26
     c66:	dc 01       	movw	r26, r24
     c68:	f7 cf       	rjmp	.-18     	; 0xc58 <free+0xc2>
     c6a:	8d 91       	ld	r24, X+
     c6c:	9c 91       	ld	r25, X
     c6e:	11 97       	sbiw	r26, 0x01	; 1
     c70:	9d 01       	movw	r18, r26
     c72:	2e 5f       	subi	r18, 0xFE	; 254
     c74:	3f 4f       	sbci	r19, 0xFF	; 255
     c76:	82 0f       	add	r24, r18
     c78:	93 1f       	adc	r25, r19
     c7a:	20 91 0e 02 	lds	r18, 0x020E	; 0x80020e <__brkval>
     c7e:	30 91 0f 02 	lds	r19, 0x020F	; 0x80020f <__brkval+0x1>
     c82:	28 17       	cp	r18, r24
     c84:	39 07       	cpc	r19, r25
     c86:	69 f4       	brne	.+26     	; 0xca2 <free+0x10c>
     c88:	30 97       	sbiw	r30, 0x00	; 0
     c8a:	29 f4       	brne	.+10     	; 0xc96 <free+0x100>
     c8c:	10 92 11 02 	sts	0x0211, r1	; 0x800211 <__flp+0x1>
     c90:	10 92 10 02 	sts	0x0210, r1	; 0x800210 <__flp>
     c94:	02 c0       	rjmp	.+4      	; 0xc9a <free+0x104>
     c96:	13 82       	std	Z+3, r1	; 0x03
     c98:	12 82       	std	Z+2, r1	; 0x02
     c9a:	b0 93 0f 02 	sts	0x020F, r27	; 0x80020f <__brkval+0x1>
     c9e:	a0 93 0e 02 	sts	0x020E, r26	; 0x80020e <__brkval>
     ca2:	df 91       	pop	r29
     ca4:	cf 91       	pop	r28
     ca6:	08 95       	ret

00000ca8 <fdevopen>:
     ca8:	0f 93       	push	r16
     caa:	1f 93       	push	r17
     cac:	cf 93       	push	r28
     cae:	df 93       	push	r29
     cb0:	00 97       	sbiw	r24, 0x00	; 0
     cb2:	31 f4       	brne	.+12     	; 0xcc0 <fdevopen+0x18>
     cb4:	61 15       	cp	r22, r1
     cb6:	71 05       	cpc	r23, r1
     cb8:	19 f4       	brne	.+6      	; 0xcc0 <fdevopen+0x18>
     cba:	80 e0       	ldi	r24, 0x00	; 0
     cbc:	90 e0       	ldi	r25, 0x00	; 0
     cbe:	3a c0       	rjmp	.+116    	; 0xd34 <fdevopen+0x8c>
     cc0:	8b 01       	movw	r16, r22
     cc2:	ec 01       	movw	r28, r24
     cc4:	6e e0       	ldi	r22, 0x0E	; 14
     cc6:	70 e0       	ldi	r23, 0x00	; 0
     cc8:	81 e0       	ldi	r24, 0x01	; 1
     cca:	90 e0       	ldi	r25, 0x00	; 0
     ccc:	0e 94 96 08 	call	0x112c	; 0x112c <calloc>
     cd0:	fc 01       	movw	r30, r24
     cd2:	89 2b       	or	r24, r25
     cd4:	91 f3       	breq	.-28     	; 0xcba <fdevopen+0x12>
     cd6:	80 e8       	ldi	r24, 0x80	; 128
     cd8:	83 83       	std	Z+3, r24	; 0x03
     cda:	01 15       	cp	r16, r1
     cdc:	11 05       	cpc	r17, r1
     cde:	71 f0       	breq	.+28     	; 0xcfc <fdevopen+0x54>
     ce0:	13 87       	std	Z+11, r17	; 0x0b
     ce2:	02 87       	std	Z+10, r16	; 0x0a
     ce4:	81 e8       	ldi	r24, 0x81	; 129
     ce6:	83 83       	std	Z+3, r24	; 0x03
     ce8:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <__iob>
     cec:	90 91 13 02 	lds	r25, 0x0213	; 0x800213 <__iob+0x1>
     cf0:	89 2b       	or	r24, r25
     cf2:	21 f4       	brne	.+8      	; 0xcfc <fdevopen+0x54>
     cf4:	f0 93 13 02 	sts	0x0213, r31	; 0x800213 <__iob+0x1>
     cf8:	e0 93 12 02 	sts	0x0212, r30	; 0x800212 <__iob>
     cfc:	20 97       	sbiw	r28, 0x00	; 0
     cfe:	c9 f0       	breq	.+50     	; 0xd32 <fdevopen+0x8a>
     d00:	d1 87       	std	Z+9, r29	; 0x09
     d02:	c0 87       	std	Z+8, r28	; 0x08
     d04:	83 81       	ldd	r24, Z+3	; 0x03
     d06:	82 60       	ori	r24, 0x02	; 2
     d08:	83 83       	std	Z+3, r24	; 0x03
     d0a:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <__iob+0x2>
     d0e:	90 91 15 02 	lds	r25, 0x0215	; 0x800215 <__iob+0x3>
     d12:	89 2b       	or	r24, r25
     d14:	71 f4       	brne	.+28     	; 0xd32 <fdevopen+0x8a>
     d16:	f0 93 15 02 	sts	0x0215, r31	; 0x800215 <__iob+0x3>
     d1a:	e0 93 14 02 	sts	0x0214, r30	; 0x800214 <__iob+0x2>
     d1e:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <__iob+0x4>
     d22:	90 91 17 02 	lds	r25, 0x0217	; 0x800217 <__iob+0x5>
     d26:	89 2b       	or	r24, r25
     d28:	21 f4       	brne	.+8      	; 0xd32 <fdevopen+0x8a>
     d2a:	f0 93 17 02 	sts	0x0217, r31	; 0x800217 <__iob+0x5>
     d2e:	e0 93 16 02 	sts	0x0216, r30	; 0x800216 <__iob+0x4>
     d32:	cf 01       	movw	r24, r30
     d34:	df 91       	pop	r29
     d36:	cf 91       	pop	r28
     d38:	1f 91       	pop	r17
     d3a:	0f 91       	pop	r16
     d3c:	08 95       	ret

00000d3e <printf>:
     d3e:	a0 e0       	ldi	r26, 0x00	; 0
     d40:	b0 e0       	ldi	r27, 0x00	; 0
     d42:	e5 ea       	ldi	r30, 0xA5	; 165
     d44:	f6 e0       	ldi	r31, 0x06	; 6
     d46:	0c 94 79 09 	jmp	0x12f2	; 0x12f2 <__prologue_saves__+0x20>
     d4a:	ae 01       	movw	r20, r28
     d4c:	4b 5f       	subi	r20, 0xFB	; 251
     d4e:	5f 4f       	sbci	r21, 0xFF	; 255
     d50:	fa 01       	movw	r30, r20
     d52:	61 91       	ld	r22, Z+
     d54:	71 91       	ld	r23, Z+
     d56:	af 01       	movw	r20, r30
     d58:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <__iob+0x2>
     d5c:	90 91 15 02 	lds	r25, 0x0215	; 0x800215 <__iob+0x3>
     d60:	0e 94 b5 06 	call	0xd6a	; 0xd6a <vfprintf>
     d64:	e2 e0       	ldi	r30, 0x02	; 2
     d66:	0c 94 95 09 	jmp	0x132a	; 0x132a <__epilogue_restores__+0x20>

00000d6a <vfprintf>:
     d6a:	ab e0       	ldi	r26, 0x0B	; 11
     d6c:	b0 e0       	ldi	r27, 0x00	; 0
     d6e:	eb eb       	ldi	r30, 0xBB	; 187
     d70:	f6 e0       	ldi	r31, 0x06	; 6
     d72:	0c 94 69 09 	jmp	0x12d2	; 0x12d2 <__prologue_saves__>
     d76:	6c 01       	movw	r12, r24
     d78:	7b 01       	movw	r14, r22
     d7a:	8a 01       	movw	r16, r20
     d7c:	fc 01       	movw	r30, r24
     d7e:	17 82       	std	Z+7, r1	; 0x07
     d80:	16 82       	std	Z+6, r1	; 0x06
     d82:	83 81       	ldd	r24, Z+3	; 0x03
     d84:	81 ff       	sbrs	r24, 1
     d86:	cc c1       	rjmp	.+920    	; 0x1120 <vfprintf+0x3b6>
     d88:	ce 01       	movw	r24, r28
     d8a:	01 96       	adiw	r24, 0x01	; 1
     d8c:	3c 01       	movw	r6, r24
     d8e:	f6 01       	movw	r30, r12
     d90:	93 81       	ldd	r25, Z+3	; 0x03
     d92:	f7 01       	movw	r30, r14
     d94:	93 fd       	sbrc	r25, 3
     d96:	85 91       	lpm	r24, Z+
     d98:	93 ff       	sbrs	r25, 3
     d9a:	81 91       	ld	r24, Z+
     d9c:	7f 01       	movw	r14, r30
     d9e:	88 23       	and	r24, r24
     da0:	09 f4       	brne	.+2      	; 0xda4 <vfprintf+0x3a>
     da2:	ba c1       	rjmp	.+884    	; 0x1118 <vfprintf+0x3ae>
     da4:	85 32       	cpi	r24, 0x25	; 37
     da6:	39 f4       	brne	.+14     	; 0xdb6 <vfprintf+0x4c>
     da8:	93 fd       	sbrc	r25, 3
     daa:	85 91       	lpm	r24, Z+
     dac:	93 ff       	sbrs	r25, 3
     dae:	81 91       	ld	r24, Z+
     db0:	7f 01       	movw	r14, r30
     db2:	85 32       	cpi	r24, 0x25	; 37
     db4:	29 f4       	brne	.+10     	; 0xdc0 <vfprintf+0x56>
     db6:	b6 01       	movw	r22, r12
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	0e 94 cf 08 	call	0x119e	; 0x119e <fputc>
     dbe:	e7 cf       	rjmp	.-50     	; 0xd8e <vfprintf+0x24>
     dc0:	91 2c       	mov	r9, r1
     dc2:	21 2c       	mov	r2, r1
     dc4:	31 2c       	mov	r3, r1
     dc6:	ff e1       	ldi	r31, 0x1F	; 31
     dc8:	f3 15       	cp	r31, r3
     dca:	d8 f0       	brcs	.+54     	; 0xe02 <vfprintf+0x98>
     dcc:	8b 32       	cpi	r24, 0x2B	; 43
     dce:	79 f0       	breq	.+30     	; 0xdee <vfprintf+0x84>
     dd0:	38 f4       	brcc	.+14     	; 0xde0 <vfprintf+0x76>
     dd2:	80 32       	cpi	r24, 0x20	; 32
     dd4:	79 f0       	breq	.+30     	; 0xdf4 <vfprintf+0x8a>
     dd6:	83 32       	cpi	r24, 0x23	; 35
     dd8:	a1 f4       	brne	.+40     	; 0xe02 <vfprintf+0x98>
     dda:	23 2d       	mov	r18, r3
     ddc:	20 61       	ori	r18, 0x10	; 16
     dde:	1d c0       	rjmp	.+58     	; 0xe1a <vfprintf+0xb0>
     de0:	8d 32       	cpi	r24, 0x2D	; 45
     de2:	61 f0       	breq	.+24     	; 0xdfc <vfprintf+0x92>
     de4:	80 33       	cpi	r24, 0x30	; 48
     de6:	69 f4       	brne	.+26     	; 0xe02 <vfprintf+0x98>
     de8:	23 2d       	mov	r18, r3
     dea:	21 60       	ori	r18, 0x01	; 1
     dec:	16 c0       	rjmp	.+44     	; 0xe1a <vfprintf+0xb0>
     dee:	83 2d       	mov	r24, r3
     df0:	82 60       	ori	r24, 0x02	; 2
     df2:	38 2e       	mov	r3, r24
     df4:	e3 2d       	mov	r30, r3
     df6:	e4 60       	ori	r30, 0x04	; 4
     df8:	3e 2e       	mov	r3, r30
     dfa:	2a c0       	rjmp	.+84     	; 0xe50 <vfprintf+0xe6>
     dfc:	f3 2d       	mov	r31, r3
     dfe:	f8 60       	ori	r31, 0x08	; 8
     e00:	1d c0       	rjmp	.+58     	; 0xe3c <vfprintf+0xd2>
     e02:	37 fc       	sbrc	r3, 7
     e04:	2d c0       	rjmp	.+90     	; 0xe60 <vfprintf+0xf6>
     e06:	20 ed       	ldi	r18, 0xD0	; 208
     e08:	28 0f       	add	r18, r24
     e0a:	2a 30       	cpi	r18, 0x0A	; 10
     e0c:	40 f0       	brcs	.+16     	; 0xe1e <vfprintf+0xb4>
     e0e:	8e 32       	cpi	r24, 0x2E	; 46
     e10:	b9 f4       	brne	.+46     	; 0xe40 <vfprintf+0xd6>
     e12:	36 fc       	sbrc	r3, 6
     e14:	81 c1       	rjmp	.+770    	; 0x1118 <vfprintf+0x3ae>
     e16:	23 2d       	mov	r18, r3
     e18:	20 64       	ori	r18, 0x40	; 64
     e1a:	32 2e       	mov	r3, r18
     e1c:	19 c0       	rjmp	.+50     	; 0xe50 <vfprintf+0xe6>
     e1e:	36 fe       	sbrs	r3, 6
     e20:	06 c0       	rjmp	.+12     	; 0xe2e <vfprintf+0xc4>
     e22:	8a e0       	ldi	r24, 0x0A	; 10
     e24:	98 9e       	mul	r9, r24
     e26:	20 0d       	add	r18, r0
     e28:	11 24       	eor	r1, r1
     e2a:	92 2e       	mov	r9, r18
     e2c:	11 c0       	rjmp	.+34     	; 0xe50 <vfprintf+0xe6>
     e2e:	ea e0       	ldi	r30, 0x0A	; 10
     e30:	2e 9e       	mul	r2, r30
     e32:	20 0d       	add	r18, r0
     e34:	11 24       	eor	r1, r1
     e36:	22 2e       	mov	r2, r18
     e38:	f3 2d       	mov	r31, r3
     e3a:	f0 62       	ori	r31, 0x20	; 32
     e3c:	3f 2e       	mov	r3, r31
     e3e:	08 c0       	rjmp	.+16     	; 0xe50 <vfprintf+0xe6>
     e40:	8c 36       	cpi	r24, 0x6C	; 108
     e42:	21 f4       	brne	.+8      	; 0xe4c <vfprintf+0xe2>
     e44:	83 2d       	mov	r24, r3
     e46:	80 68       	ori	r24, 0x80	; 128
     e48:	38 2e       	mov	r3, r24
     e4a:	02 c0       	rjmp	.+4      	; 0xe50 <vfprintf+0xe6>
     e4c:	88 36       	cpi	r24, 0x68	; 104
     e4e:	41 f4       	brne	.+16     	; 0xe60 <vfprintf+0xf6>
     e50:	f7 01       	movw	r30, r14
     e52:	93 fd       	sbrc	r25, 3
     e54:	85 91       	lpm	r24, Z+
     e56:	93 ff       	sbrs	r25, 3
     e58:	81 91       	ld	r24, Z+
     e5a:	7f 01       	movw	r14, r30
     e5c:	81 11       	cpse	r24, r1
     e5e:	b3 cf       	rjmp	.-154    	; 0xdc6 <vfprintf+0x5c>
     e60:	98 2f       	mov	r25, r24
     e62:	9f 7d       	andi	r25, 0xDF	; 223
     e64:	95 54       	subi	r25, 0x45	; 69
     e66:	93 30       	cpi	r25, 0x03	; 3
     e68:	28 f4       	brcc	.+10     	; 0xe74 <vfprintf+0x10a>
     e6a:	0c 5f       	subi	r16, 0xFC	; 252
     e6c:	1f 4f       	sbci	r17, 0xFF	; 255
     e6e:	9f e3       	ldi	r25, 0x3F	; 63
     e70:	99 83       	std	Y+1, r25	; 0x01
     e72:	0d c0       	rjmp	.+26     	; 0xe8e <vfprintf+0x124>
     e74:	83 36       	cpi	r24, 0x63	; 99
     e76:	31 f0       	breq	.+12     	; 0xe84 <vfprintf+0x11a>
     e78:	83 37       	cpi	r24, 0x73	; 115
     e7a:	71 f0       	breq	.+28     	; 0xe98 <vfprintf+0x12e>
     e7c:	83 35       	cpi	r24, 0x53	; 83
     e7e:	09 f0       	breq	.+2      	; 0xe82 <vfprintf+0x118>
     e80:	59 c0       	rjmp	.+178    	; 0xf34 <vfprintf+0x1ca>
     e82:	21 c0       	rjmp	.+66     	; 0xec6 <vfprintf+0x15c>
     e84:	f8 01       	movw	r30, r16
     e86:	80 81       	ld	r24, Z
     e88:	89 83       	std	Y+1, r24	; 0x01
     e8a:	0e 5f       	subi	r16, 0xFE	; 254
     e8c:	1f 4f       	sbci	r17, 0xFF	; 255
     e8e:	88 24       	eor	r8, r8
     e90:	83 94       	inc	r8
     e92:	91 2c       	mov	r9, r1
     e94:	53 01       	movw	r10, r6
     e96:	13 c0       	rjmp	.+38     	; 0xebe <vfprintf+0x154>
     e98:	28 01       	movw	r4, r16
     e9a:	f2 e0       	ldi	r31, 0x02	; 2
     e9c:	4f 0e       	add	r4, r31
     e9e:	51 1c       	adc	r5, r1
     ea0:	f8 01       	movw	r30, r16
     ea2:	a0 80       	ld	r10, Z
     ea4:	b1 80       	ldd	r11, Z+1	; 0x01
     ea6:	36 fe       	sbrs	r3, 6
     ea8:	03 c0       	rjmp	.+6      	; 0xeb0 <vfprintf+0x146>
     eaa:	69 2d       	mov	r22, r9
     eac:	70 e0       	ldi	r23, 0x00	; 0
     eae:	02 c0       	rjmp	.+4      	; 0xeb4 <vfprintf+0x14a>
     eb0:	6f ef       	ldi	r22, 0xFF	; 255
     eb2:	7f ef       	ldi	r23, 0xFF	; 255
     eb4:	c5 01       	movw	r24, r10
     eb6:	0e 94 c4 08 	call	0x1188	; 0x1188 <strnlen>
     eba:	4c 01       	movw	r8, r24
     ebc:	82 01       	movw	r16, r4
     ebe:	f3 2d       	mov	r31, r3
     ec0:	ff 77       	andi	r31, 0x7F	; 127
     ec2:	3f 2e       	mov	r3, r31
     ec4:	16 c0       	rjmp	.+44     	; 0xef2 <vfprintf+0x188>
     ec6:	28 01       	movw	r4, r16
     ec8:	22 e0       	ldi	r18, 0x02	; 2
     eca:	42 0e       	add	r4, r18
     ecc:	51 1c       	adc	r5, r1
     ece:	f8 01       	movw	r30, r16
     ed0:	a0 80       	ld	r10, Z
     ed2:	b1 80       	ldd	r11, Z+1	; 0x01
     ed4:	36 fe       	sbrs	r3, 6
     ed6:	03 c0       	rjmp	.+6      	; 0xede <vfprintf+0x174>
     ed8:	69 2d       	mov	r22, r9
     eda:	70 e0       	ldi	r23, 0x00	; 0
     edc:	02 c0       	rjmp	.+4      	; 0xee2 <vfprintf+0x178>
     ede:	6f ef       	ldi	r22, 0xFF	; 255
     ee0:	7f ef       	ldi	r23, 0xFF	; 255
     ee2:	c5 01       	movw	r24, r10
     ee4:	0e 94 b2 08 	call	0x1164	; 0x1164 <strnlen_P>
     ee8:	4c 01       	movw	r8, r24
     eea:	f3 2d       	mov	r31, r3
     eec:	f0 68       	ori	r31, 0x80	; 128
     eee:	3f 2e       	mov	r3, r31
     ef0:	82 01       	movw	r16, r4
     ef2:	33 fc       	sbrc	r3, 3
     ef4:	1b c0       	rjmp	.+54     	; 0xf2c <vfprintf+0x1c2>
     ef6:	82 2d       	mov	r24, r2
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	88 16       	cp	r8, r24
     efc:	99 06       	cpc	r9, r25
     efe:	b0 f4       	brcc	.+44     	; 0xf2c <vfprintf+0x1c2>
     f00:	b6 01       	movw	r22, r12
     f02:	80 e2       	ldi	r24, 0x20	; 32
     f04:	90 e0       	ldi	r25, 0x00	; 0
     f06:	0e 94 cf 08 	call	0x119e	; 0x119e <fputc>
     f0a:	2a 94       	dec	r2
     f0c:	f4 cf       	rjmp	.-24     	; 0xef6 <vfprintf+0x18c>
     f0e:	f5 01       	movw	r30, r10
     f10:	37 fc       	sbrc	r3, 7
     f12:	85 91       	lpm	r24, Z+
     f14:	37 fe       	sbrs	r3, 7
     f16:	81 91       	ld	r24, Z+
     f18:	5f 01       	movw	r10, r30
     f1a:	b6 01       	movw	r22, r12
     f1c:	90 e0       	ldi	r25, 0x00	; 0
     f1e:	0e 94 cf 08 	call	0x119e	; 0x119e <fputc>
     f22:	21 10       	cpse	r2, r1
     f24:	2a 94       	dec	r2
     f26:	21 e0       	ldi	r18, 0x01	; 1
     f28:	82 1a       	sub	r8, r18
     f2a:	91 08       	sbc	r9, r1
     f2c:	81 14       	cp	r8, r1
     f2e:	91 04       	cpc	r9, r1
     f30:	71 f7       	brne	.-36     	; 0xf0e <vfprintf+0x1a4>
     f32:	e8 c0       	rjmp	.+464    	; 0x1104 <vfprintf+0x39a>
     f34:	84 36       	cpi	r24, 0x64	; 100
     f36:	11 f0       	breq	.+4      	; 0xf3c <vfprintf+0x1d2>
     f38:	89 36       	cpi	r24, 0x69	; 105
     f3a:	41 f5       	brne	.+80     	; 0xf8c <vfprintf+0x222>
     f3c:	f8 01       	movw	r30, r16
     f3e:	37 fe       	sbrs	r3, 7
     f40:	07 c0       	rjmp	.+14     	; 0xf50 <vfprintf+0x1e6>
     f42:	60 81       	ld	r22, Z
     f44:	71 81       	ldd	r23, Z+1	; 0x01
     f46:	82 81       	ldd	r24, Z+2	; 0x02
     f48:	93 81       	ldd	r25, Z+3	; 0x03
     f4a:	0c 5f       	subi	r16, 0xFC	; 252
     f4c:	1f 4f       	sbci	r17, 0xFF	; 255
     f4e:	08 c0       	rjmp	.+16     	; 0xf60 <vfprintf+0x1f6>
     f50:	60 81       	ld	r22, Z
     f52:	71 81       	ldd	r23, Z+1	; 0x01
     f54:	07 2e       	mov	r0, r23
     f56:	00 0c       	add	r0, r0
     f58:	88 0b       	sbc	r24, r24
     f5a:	99 0b       	sbc	r25, r25
     f5c:	0e 5f       	subi	r16, 0xFE	; 254
     f5e:	1f 4f       	sbci	r17, 0xFF	; 255
     f60:	f3 2d       	mov	r31, r3
     f62:	ff 76       	andi	r31, 0x6F	; 111
     f64:	3f 2e       	mov	r3, r31
     f66:	97 ff       	sbrs	r25, 7
     f68:	09 c0       	rjmp	.+18     	; 0xf7c <vfprintf+0x212>
     f6a:	90 95       	com	r25
     f6c:	80 95       	com	r24
     f6e:	70 95       	com	r23
     f70:	61 95       	neg	r22
     f72:	7f 4f       	sbci	r23, 0xFF	; 255
     f74:	8f 4f       	sbci	r24, 0xFF	; 255
     f76:	9f 4f       	sbci	r25, 0xFF	; 255
     f78:	f0 68       	ori	r31, 0x80	; 128
     f7a:	3f 2e       	mov	r3, r31
     f7c:	2a e0       	ldi	r18, 0x0A	; 10
     f7e:	30 e0       	ldi	r19, 0x00	; 0
     f80:	a3 01       	movw	r20, r6
     f82:	0e 94 0b 09 	call	0x1216	; 0x1216 <__ultoa_invert>
     f86:	88 2e       	mov	r8, r24
     f88:	86 18       	sub	r8, r6
     f8a:	45 c0       	rjmp	.+138    	; 0x1016 <vfprintf+0x2ac>
     f8c:	85 37       	cpi	r24, 0x75	; 117
     f8e:	31 f4       	brne	.+12     	; 0xf9c <vfprintf+0x232>
     f90:	23 2d       	mov	r18, r3
     f92:	2f 7e       	andi	r18, 0xEF	; 239
     f94:	b2 2e       	mov	r11, r18
     f96:	2a e0       	ldi	r18, 0x0A	; 10
     f98:	30 e0       	ldi	r19, 0x00	; 0
     f9a:	25 c0       	rjmp	.+74     	; 0xfe6 <vfprintf+0x27c>
     f9c:	93 2d       	mov	r25, r3
     f9e:	99 7f       	andi	r25, 0xF9	; 249
     fa0:	b9 2e       	mov	r11, r25
     fa2:	8f 36       	cpi	r24, 0x6F	; 111
     fa4:	c1 f0       	breq	.+48     	; 0xfd6 <vfprintf+0x26c>
     fa6:	18 f4       	brcc	.+6      	; 0xfae <vfprintf+0x244>
     fa8:	88 35       	cpi	r24, 0x58	; 88
     faa:	79 f0       	breq	.+30     	; 0xfca <vfprintf+0x260>
     fac:	b5 c0       	rjmp	.+362    	; 0x1118 <vfprintf+0x3ae>
     fae:	80 37       	cpi	r24, 0x70	; 112
     fb0:	19 f0       	breq	.+6      	; 0xfb8 <vfprintf+0x24e>
     fb2:	88 37       	cpi	r24, 0x78	; 120
     fb4:	21 f0       	breq	.+8      	; 0xfbe <vfprintf+0x254>
     fb6:	b0 c0       	rjmp	.+352    	; 0x1118 <vfprintf+0x3ae>
     fb8:	e9 2f       	mov	r30, r25
     fba:	e0 61       	ori	r30, 0x10	; 16
     fbc:	be 2e       	mov	r11, r30
     fbe:	b4 fe       	sbrs	r11, 4
     fc0:	0d c0       	rjmp	.+26     	; 0xfdc <vfprintf+0x272>
     fc2:	fb 2d       	mov	r31, r11
     fc4:	f4 60       	ori	r31, 0x04	; 4
     fc6:	bf 2e       	mov	r11, r31
     fc8:	09 c0       	rjmp	.+18     	; 0xfdc <vfprintf+0x272>
     fca:	34 fe       	sbrs	r3, 4
     fcc:	0a c0       	rjmp	.+20     	; 0xfe2 <vfprintf+0x278>
     fce:	29 2f       	mov	r18, r25
     fd0:	26 60       	ori	r18, 0x06	; 6
     fd2:	b2 2e       	mov	r11, r18
     fd4:	06 c0       	rjmp	.+12     	; 0xfe2 <vfprintf+0x278>
     fd6:	28 e0       	ldi	r18, 0x08	; 8
     fd8:	30 e0       	ldi	r19, 0x00	; 0
     fda:	05 c0       	rjmp	.+10     	; 0xfe6 <vfprintf+0x27c>
     fdc:	20 e1       	ldi	r18, 0x10	; 16
     fde:	30 e0       	ldi	r19, 0x00	; 0
     fe0:	02 c0       	rjmp	.+4      	; 0xfe6 <vfprintf+0x27c>
     fe2:	20 e1       	ldi	r18, 0x10	; 16
     fe4:	32 e0       	ldi	r19, 0x02	; 2
     fe6:	f8 01       	movw	r30, r16
     fe8:	b7 fe       	sbrs	r11, 7
     fea:	07 c0       	rjmp	.+14     	; 0xffa <vfprintf+0x290>
     fec:	60 81       	ld	r22, Z
     fee:	71 81       	ldd	r23, Z+1	; 0x01
     ff0:	82 81       	ldd	r24, Z+2	; 0x02
     ff2:	93 81       	ldd	r25, Z+3	; 0x03
     ff4:	0c 5f       	subi	r16, 0xFC	; 252
     ff6:	1f 4f       	sbci	r17, 0xFF	; 255
     ff8:	06 c0       	rjmp	.+12     	; 0x1006 <vfprintf+0x29c>
     ffa:	60 81       	ld	r22, Z
     ffc:	71 81       	ldd	r23, Z+1	; 0x01
     ffe:	80 e0       	ldi	r24, 0x00	; 0
    1000:	90 e0       	ldi	r25, 0x00	; 0
    1002:	0e 5f       	subi	r16, 0xFE	; 254
    1004:	1f 4f       	sbci	r17, 0xFF	; 255
    1006:	a3 01       	movw	r20, r6
    1008:	0e 94 0b 09 	call	0x1216	; 0x1216 <__ultoa_invert>
    100c:	88 2e       	mov	r8, r24
    100e:	86 18       	sub	r8, r6
    1010:	fb 2d       	mov	r31, r11
    1012:	ff 77       	andi	r31, 0x7F	; 127
    1014:	3f 2e       	mov	r3, r31
    1016:	36 fe       	sbrs	r3, 6
    1018:	0d c0       	rjmp	.+26     	; 0x1034 <vfprintf+0x2ca>
    101a:	23 2d       	mov	r18, r3
    101c:	2e 7f       	andi	r18, 0xFE	; 254
    101e:	a2 2e       	mov	r10, r18
    1020:	89 14       	cp	r8, r9
    1022:	58 f4       	brcc	.+22     	; 0x103a <vfprintf+0x2d0>
    1024:	34 fe       	sbrs	r3, 4
    1026:	0b c0       	rjmp	.+22     	; 0x103e <vfprintf+0x2d4>
    1028:	32 fc       	sbrc	r3, 2
    102a:	09 c0       	rjmp	.+18     	; 0x103e <vfprintf+0x2d4>
    102c:	83 2d       	mov	r24, r3
    102e:	8e 7e       	andi	r24, 0xEE	; 238
    1030:	a8 2e       	mov	r10, r24
    1032:	05 c0       	rjmp	.+10     	; 0x103e <vfprintf+0x2d4>
    1034:	b8 2c       	mov	r11, r8
    1036:	a3 2c       	mov	r10, r3
    1038:	03 c0       	rjmp	.+6      	; 0x1040 <vfprintf+0x2d6>
    103a:	b8 2c       	mov	r11, r8
    103c:	01 c0       	rjmp	.+2      	; 0x1040 <vfprintf+0x2d6>
    103e:	b9 2c       	mov	r11, r9
    1040:	a4 fe       	sbrs	r10, 4
    1042:	0f c0       	rjmp	.+30     	; 0x1062 <vfprintf+0x2f8>
    1044:	fe 01       	movw	r30, r28
    1046:	e8 0d       	add	r30, r8
    1048:	f1 1d       	adc	r31, r1
    104a:	80 81       	ld	r24, Z
    104c:	80 33       	cpi	r24, 0x30	; 48
    104e:	21 f4       	brne	.+8      	; 0x1058 <vfprintf+0x2ee>
    1050:	9a 2d       	mov	r25, r10
    1052:	99 7e       	andi	r25, 0xE9	; 233
    1054:	a9 2e       	mov	r10, r25
    1056:	09 c0       	rjmp	.+18     	; 0x106a <vfprintf+0x300>
    1058:	a2 fe       	sbrs	r10, 2
    105a:	06 c0       	rjmp	.+12     	; 0x1068 <vfprintf+0x2fe>
    105c:	b3 94       	inc	r11
    105e:	b3 94       	inc	r11
    1060:	04 c0       	rjmp	.+8      	; 0x106a <vfprintf+0x300>
    1062:	8a 2d       	mov	r24, r10
    1064:	86 78       	andi	r24, 0x86	; 134
    1066:	09 f0       	breq	.+2      	; 0x106a <vfprintf+0x300>
    1068:	b3 94       	inc	r11
    106a:	a3 fc       	sbrc	r10, 3
    106c:	11 c0       	rjmp	.+34     	; 0x1090 <vfprintf+0x326>
    106e:	a0 fe       	sbrs	r10, 0
    1070:	06 c0       	rjmp	.+12     	; 0x107e <vfprintf+0x314>
    1072:	b2 14       	cp	r11, r2
    1074:	88 f4       	brcc	.+34     	; 0x1098 <vfprintf+0x32e>
    1076:	28 0c       	add	r2, r8
    1078:	92 2c       	mov	r9, r2
    107a:	9b 18       	sub	r9, r11
    107c:	0e c0       	rjmp	.+28     	; 0x109a <vfprintf+0x330>
    107e:	b2 14       	cp	r11, r2
    1080:	60 f4       	brcc	.+24     	; 0x109a <vfprintf+0x330>
    1082:	b6 01       	movw	r22, r12
    1084:	80 e2       	ldi	r24, 0x20	; 32
    1086:	90 e0       	ldi	r25, 0x00	; 0
    1088:	0e 94 cf 08 	call	0x119e	; 0x119e <fputc>
    108c:	b3 94       	inc	r11
    108e:	f7 cf       	rjmp	.-18     	; 0x107e <vfprintf+0x314>
    1090:	b2 14       	cp	r11, r2
    1092:	18 f4       	brcc	.+6      	; 0x109a <vfprintf+0x330>
    1094:	2b 18       	sub	r2, r11
    1096:	02 c0       	rjmp	.+4      	; 0x109c <vfprintf+0x332>
    1098:	98 2c       	mov	r9, r8
    109a:	21 2c       	mov	r2, r1
    109c:	a4 fe       	sbrs	r10, 4
    109e:	10 c0       	rjmp	.+32     	; 0x10c0 <vfprintf+0x356>
    10a0:	b6 01       	movw	r22, r12
    10a2:	80 e3       	ldi	r24, 0x30	; 48
    10a4:	90 e0       	ldi	r25, 0x00	; 0
    10a6:	0e 94 cf 08 	call	0x119e	; 0x119e <fputc>
    10aa:	a2 fe       	sbrs	r10, 2
    10ac:	17 c0       	rjmp	.+46     	; 0x10dc <vfprintf+0x372>
    10ae:	a1 fc       	sbrc	r10, 1
    10b0:	03 c0       	rjmp	.+6      	; 0x10b8 <vfprintf+0x34e>
    10b2:	88 e7       	ldi	r24, 0x78	; 120
    10b4:	90 e0       	ldi	r25, 0x00	; 0
    10b6:	02 c0       	rjmp	.+4      	; 0x10bc <vfprintf+0x352>
    10b8:	88 e5       	ldi	r24, 0x58	; 88
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	b6 01       	movw	r22, r12
    10be:	0c c0       	rjmp	.+24     	; 0x10d8 <vfprintf+0x36e>
    10c0:	8a 2d       	mov	r24, r10
    10c2:	86 78       	andi	r24, 0x86	; 134
    10c4:	59 f0       	breq	.+22     	; 0x10dc <vfprintf+0x372>
    10c6:	a1 fe       	sbrs	r10, 1
    10c8:	02 c0       	rjmp	.+4      	; 0x10ce <vfprintf+0x364>
    10ca:	8b e2       	ldi	r24, 0x2B	; 43
    10cc:	01 c0       	rjmp	.+2      	; 0x10d0 <vfprintf+0x366>
    10ce:	80 e2       	ldi	r24, 0x20	; 32
    10d0:	a7 fc       	sbrc	r10, 7
    10d2:	8d e2       	ldi	r24, 0x2D	; 45
    10d4:	b6 01       	movw	r22, r12
    10d6:	90 e0       	ldi	r25, 0x00	; 0
    10d8:	0e 94 cf 08 	call	0x119e	; 0x119e <fputc>
    10dc:	89 14       	cp	r8, r9
    10de:	38 f4       	brcc	.+14     	; 0x10ee <vfprintf+0x384>
    10e0:	b6 01       	movw	r22, r12
    10e2:	80 e3       	ldi	r24, 0x30	; 48
    10e4:	90 e0       	ldi	r25, 0x00	; 0
    10e6:	0e 94 cf 08 	call	0x119e	; 0x119e <fputc>
    10ea:	9a 94       	dec	r9
    10ec:	f7 cf       	rjmp	.-18     	; 0x10dc <vfprintf+0x372>
    10ee:	8a 94       	dec	r8
    10f0:	f3 01       	movw	r30, r6
    10f2:	e8 0d       	add	r30, r8
    10f4:	f1 1d       	adc	r31, r1
    10f6:	80 81       	ld	r24, Z
    10f8:	b6 01       	movw	r22, r12
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	0e 94 cf 08 	call	0x119e	; 0x119e <fputc>
    1100:	81 10       	cpse	r8, r1
    1102:	f5 cf       	rjmp	.-22     	; 0x10ee <vfprintf+0x384>
    1104:	22 20       	and	r2, r2
    1106:	09 f4       	brne	.+2      	; 0x110a <vfprintf+0x3a0>
    1108:	42 ce       	rjmp	.-892    	; 0xd8e <vfprintf+0x24>
    110a:	b6 01       	movw	r22, r12
    110c:	80 e2       	ldi	r24, 0x20	; 32
    110e:	90 e0       	ldi	r25, 0x00	; 0
    1110:	0e 94 cf 08 	call	0x119e	; 0x119e <fputc>
    1114:	2a 94       	dec	r2
    1116:	f6 cf       	rjmp	.-20     	; 0x1104 <vfprintf+0x39a>
    1118:	f6 01       	movw	r30, r12
    111a:	86 81       	ldd	r24, Z+6	; 0x06
    111c:	97 81       	ldd	r25, Z+7	; 0x07
    111e:	02 c0       	rjmp	.+4      	; 0x1124 <vfprintf+0x3ba>
    1120:	8f ef       	ldi	r24, 0xFF	; 255
    1122:	9f ef       	ldi	r25, 0xFF	; 255
    1124:	2b 96       	adiw	r28, 0x0b	; 11
    1126:	e2 e1       	ldi	r30, 0x12	; 18
    1128:	0c 94 85 09 	jmp	0x130a	; 0x130a <__epilogue_restores__>

0000112c <calloc>:
    112c:	0f 93       	push	r16
    112e:	1f 93       	push	r17
    1130:	cf 93       	push	r28
    1132:	df 93       	push	r29
    1134:	86 9f       	mul	r24, r22
    1136:	80 01       	movw	r16, r0
    1138:	87 9f       	mul	r24, r23
    113a:	10 0d       	add	r17, r0
    113c:	96 9f       	mul	r25, r22
    113e:	10 0d       	add	r17, r0
    1140:	11 24       	eor	r1, r1
    1142:	c8 01       	movw	r24, r16
    1144:	0e 94 33 05 	call	0xa66	; 0xa66 <malloc>
    1148:	ec 01       	movw	r28, r24
    114a:	00 97       	sbiw	r24, 0x00	; 0
    114c:	29 f0       	breq	.+10     	; 0x1158 <calloc+0x2c>
    114e:	a8 01       	movw	r20, r16
    1150:	60 e0       	ldi	r22, 0x00	; 0
    1152:	70 e0       	ldi	r23, 0x00	; 0
    1154:	0e 94 bd 08 	call	0x117a	; 0x117a <memset>
    1158:	ce 01       	movw	r24, r28
    115a:	df 91       	pop	r29
    115c:	cf 91       	pop	r28
    115e:	1f 91       	pop	r17
    1160:	0f 91       	pop	r16
    1162:	08 95       	ret

00001164 <strnlen_P>:
    1164:	fc 01       	movw	r30, r24
    1166:	05 90       	lpm	r0, Z+
    1168:	61 50       	subi	r22, 0x01	; 1
    116a:	70 40       	sbci	r23, 0x00	; 0
    116c:	01 10       	cpse	r0, r1
    116e:	d8 f7       	brcc	.-10     	; 0x1166 <strnlen_P+0x2>
    1170:	80 95       	com	r24
    1172:	90 95       	com	r25
    1174:	8e 0f       	add	r24, r30
    1176:	9f 1f       	adc	r25, r31
    1178:	08 95       	ret

0000117a <memset>:
    117a:	dc 01       	movw	r26, r24
    117c:	01 c0       	rjmp	.+2      	; 0x1180 <memset+0x6>
    117e:	6d 93       	st	X+, r22
    1180:	41 50       	subi	r20, 0x01	; 1
    1182:	50 40       	sbci	r21, 0x00	; 0
    1184:	e0 f7       	brcc	.-8      	; 0x117e <memset+0x4>
    1186:	08 95       	ret

00001188 <strnlen>:
    1188:	fc 01       	movw	r30, r24
    118a:	61 50       	subi	r22, 0x01	; 1
    118c:	70 40       	sbci	r23, 0x00	; 0
    118e:	01 90       	ld	r0, Z+
    1190:	01 10       	cpse	r0, r1
    1192:	d8 f7       	brcc	.-10     	; 0x118a <strnlen+0x2>
    1194:	80 95       	com	r24
    1196:	90 95       	com	r25
    1198:	8e 0f       	add	r24, r30
    119a:	9f 1f       	adc	r25, r31
    119c:	08 95       	ret

0000119e <fputc>:
    119e:	0f 93       	push	r16
    11a0:	1f 93       	push	r17
    11a2:	cf 93       	push	r28
    11a4:	df 93       	push	r29
    11a6:	fb 01       	movw	r30, r22
    11a8:	23 81       	ldd	r18, Z+3	; 0x03
    11aa:	21 fd       	sbrc	r18, 1
    11ac:	03 c0       	rjmp	.+6      	; 0x11b4 <fputc+0x16>
    11ae:	8f ef       	ldi	r24, 0xFF	; 255
    11b0:	9f ef       	ldi	r25, 0xFF	; 255
    11b2:	2c c0       	rjmp	.+88     	; 0x120c <fputc+0x6e>
    11b4:	22 ff       	sbrs	r18, 2
    11b6:	16 c0       	rjmp	.+44     	; 0x11e4 <fputc+0x46>
    11b8:	46 81       	ldd	r20, Z+6	; 0x06
    11ba:	57 81       	ldd	r21, Z+7	; 0x07
    11bc:	24 81       	ldd	r18, Z+4	; 0x04
    11be:	35 81       	ldd	r19, Z+5	; 0x05
    11c0:	42 17       	cp	r20, r18
    11c2:	53 07       	cpc	r21, r19
    11c4:	44 f4       	brge	.+16     	; 0x11d6 <fputc+0x38>
    11c6:	a0 81       	ld	r26, Z
    11c8:	b1 81       	ldd	r27, Z+1	; 0x01
    11ca:	9d 01       	movw	r18, r26
    11cc:	2f 5f       	subi	r18, 0xFF	; 255
    11ce:	3f 4f       	sbci	r19, 0xFF	; 255
    11d0:	31 83       	std	Z+1, r19	; 0x01
    11d2:	20 83       	st	Z, r18
    11d4:	8c 93       	st	X, r24
    11d6:	26 81       	ldd	r18, Z+6	; 0x06
    11d8:	37 81       	ldd	r19, Z+7	; 0x07
    11da:	2f 5f       	subi	r18, 0xFF	; 255
    11dc:	3f 4f       	sbci	r19, 0xFF	; 255
    11de:	37 83       	std	Z+7, r19	; 0x07
    11e0:	26 83       	std	Z+6, r18	; 0x06
    11e2:	14 c0       	rjmp	.+40     	; 0x120c <fputc+0x6e>
    11e4:	8b 01       	movw	r16, r22
    11e6:	ec 01       	movw	r28, r24
    11e8:	fb 01       	movw	r30, r22
    11ea:	00 84       	ldd	r0, Z+8	; 0x08
    11ec:	f1 85       	ldd	r31, Z+9	; 0x09
    11ee:	e0 2d       	mov	r30, r0
    11f0:	09 95       	icall
    11f2:	89 2b       	or	r24, r25
    11f4:	e1 f6       	brne	.-72     	; 0x11ae <fputc+0x10>
    11f6:	d8 01       	movw	r26, r16
    11f8:	16 96       	adiw	r26, 0x06	; 6
    11fa:	8d 91       	ld	r24, X+
    11fc:	9c 91       	ld	r25, X
    11fe:	17 97       	sbiw	r26, 0x07	; 7
    1200:	01 96       	adiw	r24, 0x01	; 1
    1202:	17 96       	adiw	r26, 0x07	; 7
    1204:	9c 93       	st	X, r25
    1206:	8e 93       	st	-X, r24
    1208:	16 97       	sbiw	r26, 0x06	; 6
    120a:	ce 01       	movw	r24, r28
    120c:	df 91       	pop	r29
    120e:	cf 91       	pop	r28
    1210:	1f 91       	pop	r17
    1212:	0f 91       	pop	r16
    1214:	08 95       	ret

00001216 <__ultoa_invert>:
    1216:	fa 01       	movw	r30, r20
    1218:	aa 27       	eor	r26, r26
    121a:	28 30       	cpi	r18, 0x08	; 8
    121c:	51 f1       	breq	.+84     	; 0x1272 <__ultoa_invert+0x5c>
    121e:	20 31       	cpi	r18, 0x10	; 16
    1220:	81 f1       	breq	.+96     	; 0x1282 <__ultoa_invert+0x6c>
    1222:	e8 94       	clt
    1224:	6f 93       	push	r22
    1226:	6e 7f       	andi	r22, 0xFE	; 254
    1228:	6e 5f       	subi	r22, 0xFE	; 254
    122a:	7f 4f       	sbci	r23, 0xFF	; 255
    122c:	8f 4f       	sbci	r24, 0xFF	; 255
    122e:	9f 4f       	sbci	r25, 0xFF	; 255
    1230:	af 4f       	sbci	r26, 0xFF	; 255
    1232:	b1 e0       	ldi	r27, 0x01	; 1
    1234:	3e d0       	rcall	.+124    	; 0x12b2 <__ultoa_invert+0x9c>
    1236:	b4 e0       	ldi	r27, 0x04	; 4
    1238:	3c d0       	rcall	.+120    	; 0x12b2 <__ultoa_invert+0x9c>
    123a:	67 0f       	add	r22, r23
    123c:	78 1f       	adc	r23, r24
    123e:	89 1f       	adc	r24, r25
    1240:	9a 1f       	adc	r25, r26
    1242:	a1 1d       	adc	r26, r1
    1244:	68 0f       	add	r22, r24
    1246:	79 1f       	adc	r23, r25
    1248:	8a 1f       	adc	r24, r26
    124a:	91 1d       	adc	r25, r1
    124c:	a1 1d       	adc	r26, r1
    124e:	6a 0f       	add	r22, r26
    1250:	71 1d       	adc	r23, r1
    1252:	81 1d       	adc	r24, r1
    1254:	91 1d       	adc	r25, r1
    1256:	a1 1d       	adc	r26, r1
    1258:	20 d0       	rcall	.+64     	; 0x129a <__ultoa_invert+0x84>
    125a:	09 f4       	brne	.+2      	; 0x125e <__ultoa_invert+0x48>
    125c:	68 94       	set
    125e:	3f 91       	pop	r19
    1260:	2a e0       	ldi	r18, 0x0A	; 10
    1262:	26 9f       	mul	r18, r22
    1264:	11 24       	eor	r1, r1
    1266:	30 19       	sub	r19, r0
    1268:	30 5d       	subi	r19, 0xD0	; 208
    126a:	31 93       	st	Z+, r19
    126c:	de f6       	brtc	.-74     	; 0x1224 <__ultoa_invert+0xe>
    126e:	cf 01       	movw	r24, r30
    1270:	08 95       	ret
    1272:	46 2f       	mov	r20, r22
    1274:	47 70       	andi	r20, 0x07	; 7
    1276:	40 5d       	subi	r20, 0xD0	; 208
    1278:	41 93       	st	Z+, r20
    127a:	b3 e0       	ldi	r27, 0x03	; 3
    127c:	0f d0       	rcall	.+30     	; 0x129c <__ultoa_invert+0x86>
    127e:	c9 f7       	brne	.-14     	; 0x1272 <__ultoa_invert+0x5c>
    1280:	f6 cf       	rjmp	.-20     	; 0x126e <__ultoa_invert+0x58>
    1282:	46 2f       	mov	r20, r22
    1284:	4f 70       	andi	r20, 0x0F	; 15
    1286:	40 5d       	subi	r20, 0xD0	; 208
    1288:	4a 33       	cpi	r20, 0x3A	; 58
    128a:	18 f0       	brcs	.+6      	; 0x1292 <__ultoa_invert+0x7c>
    128c:	49 5d       	subi	r20, 0xD9	; 217
    128e:	31 fd       	sbrc	r19, 1
    1290:	40 52       	subi	r20, 0x20	; 32
    1292:	41 93       	st	Z+, r20
    1294:	02 d0       	rcall	.+4      	; 0x129a <__ultoa_invert+0x84>
    1296:	a9 f7       	brne	.-22     	; 0x1282 <__ultoa_invert+0x6c>
    1298:	ea cf       	rjmp	.-44     	; 0x126e <__ultoa_invert+0x58>
    129a:	b4 e0       	ldi	r27, 0x04	; 4
    129c:	a6 95       	lsr	r26
    129e:	97 95       	ror	r25
    12a0:	87 95       	ror	r24
    12a2:	77 95       	ror	r23
    12a4:	67 95       	ror	r22
    12a6:	ba 95       	dec	r27
    12a8:	c9 f7       	brne	.-14     	; 0x129c <__ultoa_invert+0x86>
    12aa:	00 97       	sbiw	r24, 0x00	; 0
    12ac:	61 05       	cpc	r22, r1
    12ae:	71 05       	cpc	r23, r1
    12b0:	08 95       	ret
    12b2:	9b 01       	movw	r18, r22
    12b4:	ac 01       	movw	r20, r24
    12b6:	0a 2e       	mov	r0, r26
    12b8:	06 94       	lsr	r0
    12ba:	57 95       	ror	r21
    12bc:	47 95       	ror	r20
    12be:	37 95       	ror	r19
    12c0:	27 95       	ror	r18
    12c2:	ba 95       	dec	r27
    12c4:	c9 f7       	brne	.-14     	; 0x12b8 <__ultoa_invert+0xa2>
    12c6:	62 0f       	add	r22, r18
    12c8:	73 1f       	adc	r23, r19
    12ca:	84 1f       	adc	r24, r20
    12cc:	95 1f       	adc	r25, r21
    12ce:	a0 1d       	adc	r26, r0
    12d0:	08 95       	ret

000012d2 <__prologue_saves__>:
    12d2:	2f 92       	push	r2
    12d4:	3f 92       	push	r3
    12d6:	4f 92       	push	r4
    12d8:	5f 92       	push	r5
    12da:	6f 92       	push	r6
    12dc:	7f 92       	push	r7
    12de:	8f 92       	push	r8
    12e0:	9f 92       	push	r9
    12e2:	af 92       	push	r10
    12e4:	bf 92       	push	r11
    12e6:	cf 92       	push	r12
    12e8:	df 92       	push	r13
    12ea:	ef 92       	push	r14
    12ec:	ff 92       	push	r15
    12ee:	0f 93       	push	r16
    12f0:	1f 93       	push	r17
    12f2:	cf 93       	push	r28
    12f4:	df 93       	push	r29
    12f6:	cd b7       	in	r28, 0x3d	; 61
    12f8:	de b7       	in	r29, 0x3e	; 62
    12fa:	ca 1b       	sub	r28, r26
    12fc:	db 0b       	sbc	r29, r27
    12fe:	0f b6       	in	r0, 0x3f	; 63
    1300:	f8 94       	cli
    1302:	de bf       	out	0x3e, r29	; 62
    1304:	0f be       	out	0x3f, r0	; 63
    1306:	cd bf       	out	0x3d, r28	; 61
    1308:	09 94       	ijmp

0000130a <__epilogue_restores__>:
    130a:	2a 88       	ldd	r2, Y+18	; 0x12
    130c:	39 88       	ldd	r3, Y+17	; 0x11
    130e:	48 88       	ldd	r4, Y+16	; 0x10
    1310:	5f 84       	ldd	r5, Y+15	; 0x0f
    1312:	6e 84       	ldd	r6, Y+14	; 0x0e
    1314:	7d 84       	ldd	r7, Y+13	; 0x0d
    1316:	8c 84       	ldd	r8, Y+12	; 0x0c
    1318:	9b 84       	ldd	r9, Y+11	; 0x0b
    131a:	aa 84       	ldd	r10, Y+10	; 0x0a
    131c:	b9 84       	ldd	r11, Y+9	; 0x09
    131e:	c8 84       	ldd	r12, Y+8	; 0x08
    1320:	df 80       	ldd	r13, Y+7	; 0x07
    1322:	ee 80       	ldd	r14, Y+6	; 0x06
    1324:	fd 80       	ldd	r15, Y+5	; 0x05
    1326:	0c 81       	ldd	r16, Y+4	; 0x04
    1328:	1b 81       	ldd	r17, Y+3	; 0x03
    132a:	aa 81       	ldd	r26, Y+2	; 0x02
    132c:	b9 81       	ldd	r27, Y+1	; 0x01
    132e:	ce 0f       	add	r28, r30
    1330:	d1 1d       	adc	r29, r1
    1332:	0f b6       	in	r0, 0x3f	; 63
    1334:	f8 94       	cli
    1336:	de bf       	out	0x3e, r29	; 62
    1338:	0f be       	out	0x3f, r0	; 63
    133a:	cd bf       	out	0x3d, r28	; 61
    133c:	ed 01       	movw	r28, r26
    133e:	08 95       	ret

00001340 <_exit>:
    1340:	f8 94       	cli

00001342 <__stop_program>:
    1342:	ff cf       	rjmp	.-2      	; 0x1342 <__stop_program>
