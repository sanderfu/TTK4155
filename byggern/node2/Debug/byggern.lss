
byggern.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000015e  00800200  00001368  000013fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001368  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001c  0080035e  0080035e  0000155a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000155a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000015b8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000160  00000000  00000000  000015f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001fb1  00000000  00000000  00001758  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000013db  00000000  00000000  00003709  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c8c  00000000  00000000  00004ae4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000388  00000000  00000000  00005770  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000853  00000000  00000000  00005af8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b1b  00000000  00000000  0000634b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000108  00000000  00000000  00006e66  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	88 c0       	rjmp	.+272    	; 0x112 <__ctors_end>
       2:	00 00       	nop
       4:	a6 c0       	rjmp	.+332    	; 0x152 <__bad_interrupt>
       6:	00 00       	nop
       8:	a4 c0       	rjmp	.+328    	; 0x152 <__bad_interrupt>
       a:	00 00       	nop
       c:	a2 c0       	rjmp	.+324    	; 0x152 <__bad_interrupt>
       e:	00 00       	nop
      10:	a0 c0       	rjmp	.+320    	; 0x152 <__bad_interrupt>
      12:	00 00       	nop
      14:	9f c0       	rjmp	.+318    	; 0x154 <__vector_5>
      16:	00 00       	nop
      18:	9c c0       	rjmp	.+312    	; 0x152 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	9a c0       	rjmp	.+308    	; 0x152 <__bad_interrupt>
      1e:	00 00       	nop
      20:	98 c0       	rjmp	.+304    	; 0x152 <__bad_interrupt>
      22:	00 00       	nop
      24:	96 c0       	rjmp	.+300    	; 0x152 <__bad_interrupt>
      26:	00 00       	nop
      28:	94 c0       	rjmp	.+296    	; 0x152 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	92 c0       	rjmp	.+292    	; 0x152 <__bad_interrupt>
      2e:	00 00       	nop
      30:	90 c0       	rjmp	.+288    	; 0x152 <__bad_interrupt>
      32:	00 00       	nop
      34:	8e c0       	rjmp	.+284    	; 0x152 <__bad_interrupt>
      36:	00 00       	nop
      38:	8c c0       	rjmp	.+280    	; 0x152 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	8a c0       	rjmp	.+276    	; 0x152 <__bad_interrupt>
      3e:	00 00       	nop
      40:	88 c0       	rjmp	.+272    	; 0x152 <__bad_interrupt>
      42:	00 00       	nop
      44:	86 c0       	rjmp	.+268    	; 0x152 <__bad_interrupt>
      46:	00 00       	nop
      48:	84 c0       	rjmp	.+264    	; 0x152 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	82 c0       	rjmp	.+260    	; 0x152 <__bad_interrupt>
      4e:	00 00       	nop
      50:	80 c0       	rjmp	.+256    	; 0x152 <__bad_interrupt>
      52:	00 00       	nop
      54:	7e c0       	rjmp	.+252    	; 0x152 <__bad_interrupt>
      56:	00 00       	nop
      58:	7c c0       	rjmp	.+248    	; 0x152 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	7a c0       	rjmp	.+244    	; 0x152 <__bad_interrupt>
      5e:	00 00       	nop
      60:	78 c0       	rjmp	.+240    	; 0x152 <__bad_interrupt>
      62:	00 00       	nop
      64:	76 c0       	rjmp	.+236    	; 0x152 <__bad_interrupt>
      66:	00 00       	nop
      68:	74 c0       	rjmp	.+232    	; 0x152 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	72 c0       	rjmp	.+228    	; 0x152 <__bad_interrupt>
      6e:	00 00       	nop
      70:	70 c0       	rjmp	.+224    	; 0x152 <__bad_interrupt>
      72:	00 00       	nop
      74:	6e c0       	rjmp	.+220    	; 0x152 <__bad_interrupt>
      76:	00 00       	nop
      78:	6c c0       	rjmp	.+216    	; 0x152 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	6a c0       	rjmp	.+212    	; 0x152 <__bad_interrupt>
      7e:	00 00       	nop
      80:	68 c0       	rjmp	.+208    	; 0x152 <__bad_interrupt>
      82:	00 00       	nop
      84:	66 c0       	rjmp	.+204    	; 0x152 <__bad_interrupt>
      86:	00 00       	nop
      88:	64 c0       	rjmp	.+200    	; 0x152 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	62 c0       	rjmp	.+196    	; 0x152 <__bad_interrupt>
      8e:	00 00       	nop
      90:	60 c0       	rjmp	.+192    	; 0x152 <__bad_interrupt>
      92:	00 00       	nop
      94:	5e c0       	rjmp	.+188    	; 0x152 <__bad_interrupt>
      96:	00 00       	nop
      98:	5c c0       	rjmp	.+184    	; 0x152 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	5a c0       	rjmp	.+180    	; 0x152 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	58 c0       	rjmp	.+176    	; 0x152 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	56 c0       	rjmp	.+172    	; 0x152 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	54 c0       	rjmp	.+168    	; 0x152 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	52 c0       	rjmp	.+164    	; 0x152 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	50 c0       	rjmp	.+160    	; 0x152 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	4e c0       	rjmp	.+156    	; 0x152 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	4c c0       	rjmp	.+152    	; 0x152 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	4a c0       	rjmp	.+148    	; 0x152 <__bad_interrupt>
      be:	00 00       	nop
      c0:	48 c0       	rjmp	.+144    	; 0x152 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	46 c0       	rjmp	.+140    	; 0x152 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	44 c0       	rjmp	.+136    	; 0x152 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	42 c0       	rjmp	.+132    	; 0x152 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	40 c0       	rjmp	.+128    	; 0x152 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	3e c0       	rjmp	.+124    	; 0x152 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	3c c0       	rjmp	.+120    	; 0x152 <__bad_interrupt>
      da:	00 00       	nop
      dc:	3a c0       	rjmp	.+116    	; 0x152 <__bad_interrupt>
      de:	00 00       	nop
      e0:	38 c0       	rjmp	.+112    	; 0x152 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	08 4a       	sbci	r16, 0xA8	; 168
      e6:	d7 3b       	cpi	r29, 0xB7	; 183
      e8:	3b ce       	rjmp	.-906    	; 0xfffffd60 <__eeprom_end+0xff7efd60>
      ea:	01 6e       	ori	r16, 0xE1	; 225
      ec:	84 bc       	out	0x24, r8	; 36
      ee:	bf fd       	.word	0xfdbf	; ????
      f0:	c1 2f       	mov	r28, r17
      f2:	3d 6c       	ori	r19, 0xCD	; 205
      f4:	74 31       	cpi	r23, 0x14	; 20
      f6:	9a bd       	out	0x2a, r25	; 42
      f8:	56 83       	std	Z+6, r21	; 0x06
      fa:	3d da       	rcall	.-2950   	; 0xfffff576 <__eeprom_end+0xff7ef576>
      fc:	3d 00       	.word	0x003d	; ????
      fe:	c7 7f       	andi	r28, 0xF7	; 247
     100:	11 be       	out	0x31, r1	; 49
     102:	d9 e4       	ldi	r29, 0x49	; 73
     104:	bb 4c       	sbci	r27, 0xCB	; 203
     106:	3e 91       	ld	r19, -X
     108:	6b aa       	std	Y+51, r6	; 0x33
     10a:	aa be       	out	0x3a, r10	; 58
     10c:	00 00       	nop
     10e:	00 80       	ld	r0, Z
     110:	3f 00       	.word	0x003f	; ????

00000112 <__ctors_end>:
     112:	11 24       	eor	r1, r1
     114:	1f be       	out	0x3f, r1	; 63
     116:	cf ef       	ldi	r28, 0xFF	; 255
     118:	d1 e2       	ldi	r29, 0x21	; 33
     11a:	de bf       	out	0x3e, r29	; 62
     11c:	cd bf       	out	0x3d, r28	; 61
     11e:	00 e0       	ldi	r16, 0x00	; 0
     120:	0c bf       	out	0x3c, r16	; 60

00000122 <__do_copy_data>:
     122:	13 e0       	ldi	r17, 0x03	; 3
     124:	a0 e0       	ldi	r26, 0x00	; 0
     126:	b2 e0       	ldi	r27, 0x02	; 2
     128:	e8 e6       	ldi	r30, 0x68	; 104
     12a:	f3 e1       	ldi	r31, 0x13	; 19
     12c:	00 e0       	ldi	r16, 0x00	; 0
     12e:	0b bf       	out	0x3b, r16	; 59
     130:	02 c0       	rjmp	.+4      	; 0x136 <__do_copy_data+0x14>
     132:	07 90       	elpm	r0, Z+
     134:	0d 92       	st	X+, r0
     136:	ae 35       	cpi	r26, 0x5E	; 94
     138:	b1 07       	cpc	r27, r17
     13a:	d9 f7       	brne	.-10     	; 0x132 <__do_copy_data+0x10>

0000013c <__do_clear_bss>:
     13c:	23 e0       	ldi	r18, 0x03	; 3
     13e:	ae e5       	ldi	r26, 0x5E	; 94
     140:	b3 e0       	ldi	r27, 0x03	; 3
     142:	01 c0       	rjmp	.+2      	; 0x146 <.do_clear_bss_start>

00000144 <.do_clear_bss_loop>:
     144:	1d 92       	st	X+, r1

00000146 <.do_clear_bss_start>:
     146:	aa 37       	cpi	r26, 0x7A	; 122
     148:	b2 07       	cpc	r27, r18
     14a:	e1 f7       	brne	.-8      	; 0x144 <.do_clear_bss_loop>
     14c:	12 d0       	rcall	.+36     	; 0x172 <main>
     14e:	0c 94 b2 09 	jmp	0x1364	; 0x1364 <_exit>

00000152 <__bad_interrupt>:
     152:	56 cf       	rjmp	.-340    	; 0x0 <__vectors>

00000154 <__vector_5>:
#include "CAN.h"
#include "joystick.h"

volatile CAN_message_t received_message;
volatile uint8_t flag = 0;
ISR (INT4_vect) {
     154:	1f 92       	push	r1
     156:	0f 92       	push	r0
     158:	0f b6       	in	r0, 0x3f	; 63
     15a:	0f 92       	push	r0
     15c:	11 24       	eor	r1, r1
     15e:	8f 93       	push	r24
	//cli();
	flag= 1;
     160:	81 e0       	ldi	r24, 0x01	; 1
     162:	80 93 5e 03 	sts	0x035E, r24	; 0x80035e <__data_end>
	
	
	
	//sei();
	
}
     166:	8f 91       	pop	r24
     168:	0f 90       	pop	r0
     16a:	0f be       	out	0x3f, r0	; 63
     16c:	0f 90       	pop	r0
     16e:	1f 90       	pop	r1
     170:	18 95       	reti

00000172 <main>:


int main(void)
//p.23 for can read instructions
{
     172:	cf 93       	push	r28
     174:	df 93       	push	r29
     176:	cd b7       	in	r28, 0x3d	; 61
     178:	de b7       	in	r29, 0x3e	; 62
     17a:	2b 97       	sbiw	r28, 0x0b	; 11
     17c:	0f b6       	in	r0, 0x3f	; 63
     17e:	f8 94       	cli
     180:	de bf       	out	0x3e, r29	; 62
     182:	0f be       	out	0x3f, r0	; 63
     184:	cd bf       	out	0x3d, r28	; 61
	setupInit();
     186:	c1 d1       	rcall	.+898    	; 0x50a <setupInit>
	printf("\n\r---------------------------------------\n\n\n\n\n\n\r");
     188:	86 e0       	ldi	r24, 0x06	; 6
     18a:	92 e0       	ldi	r25, 0x02	; 2
     18c:	9f 93       	push	r25
     18e:	8f 93       	push	r24
     190:	e7 d4       	rcall	.+2510   	; 0xb60 <printf>


	//test_SRAM();
	volatile CAN_message_t message;
	message.ID = 0b10101010111;
     192:	87 e5       	ldi	r24, 0x57	; 87
     194:	95 e0       	ldi	r25, 0x05	; 5
     196:	9a 87       	std	Y+10, r25	; 0x0a
     198:	89 87       	std	Y+9, r24	; 0x09
	message.data_length = 3;
     19a:	83 e0       	ldi	r24, 0x03	; 3
     19c:	8b 87       	std	Y+11, r24	; 0x0b
	message.data[0] = 13;
     19e:	8d e0       	ldi	r24, 0x0D	; 13
     1a0:	89 83       	std	Y+1, r24	; 0x01
	message.data[1] = 22;
     1a2:	86 e1       	ldi	r24, 0x16	; 22
     1a4:	8a 83       	std	Y+2, r24	; 0x02
	message.data[2] = 33;
     1a6:	81 e2       	ldi	r24, 0x21	; 33
     1a8:	8b 83       	std	Y+3, r24	; 0x03
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1aa:	2f ef       	ldi	r18, 0xFF	; 255
     1ac:	87 ea       	ldi	r24, 0xA7	; 167
     1ae:	91 e6       	ldi	r25, 0x61	; 97
     1b0:	21 50       	subi	r18, 0x01	; 1
     1b2:	80 40       	sbci	r24, 0x00	; 0
     1b4:	90 40       	sbci	r25, 0x00	; 0
     1b6:	e1 f7       	brne	.-8      	; 0x1b0 <main+0x3e>
     1b8:	00 c0       	rjmp	.+0      	; 0x1ba <main+0x48>
	
	_delay_ms(2000);
	CAN_controller_setMode(MODE_NORMAL);
     1ba:	00 00       	nop
     1bc:	80 e0       	ldi	r24, 0x00	; 0
     1be:	a3 d0       	rcall	.+326    	; 0x306 <CAN_controller_setMode>
     1c0:	0f 90       	pop	r0
     1c2:	0f 90       	pop	r0
		_delay_ms(500);
		//Put microcontroller to sleep until next interrupt. 

		
		if (flag) {
			printf("Message received");
     1c4:	0f 2e       	mov	r0, r31
     1c6:	f7 e3       	ldi	r31, 0x37	; 55
     1c8:	ef 2e       	mov	r14, r31
     1ca:	f2 e0       	ldi	r31, 0x02	; 2
     1cc:	ff 2e       	mov	r15, r31
     1ce:	f0 2d       	mov	r31, r0
			
		}
		_delay_ms(50);	
	
		//CAN_transmit_message(&message);
		printf("\n\r-------------------------------------------\n\r");
     1d0:	08 e4       	ldi	r16, 0x48	; 72
     1d2:	12 e0       	ldi	r17, 0x02	; 2
     1d4:	2f ef       	ldi	r18, 0xFF	; 255
     1d6:	89 e6       	ldi	r24, 0x69	; 105
     1d8:	98 e1       	ldi	r25, 0x18	; 24
     1da:	21 50       	subi	r18, 0x01	; 1
     1dc:	80 40       	sbci	r24, 0x00	; 0
     1de:	90 40       	sbci	r25, 0x00	; 0
     1e0:	e1 f7       	brne	.-8      	; 0x1da <main+0x68>
     1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <main+0x72>
     1e4:	00 00       	nop
		//
		_delay_ms(500);
		//Put microcontroller to sleep until next interrupt. 

		
		if (flag) {
     1e6:	80 91 5e 03 	lds	r24, 0x035E	; 0x80035e <__data_end>
     1ea:	88 23       	and	r24, r24
			printf("Message received");
     1ec:	81 f0       	breq	.+32     	; 0x20e <main+0x9c>
     1ee:	ff 92       	push	r15
     1f0:	ef 92       	push	r14
			flag=0;
     1f2:	b6 d4       	rcall	.+2412   	; 0xb60 <printf>
     1f4:	10 92 5e 03 	sts	0x035E, r1	; 0x80035e <__data_end>
			joystick_readPositionOverCAN();
     1f8:	0f d1       	rcall	.+542    	; 0x418 <joystick_readPositionOverCAN>
			joystick_printPosition();
     1fa:	65 d1       	rcall	.+714    	; 0x4c6 <joystick_printPosition>
     1fc:	40 e0       	ldi	r20, 0x00	; 0
			uint8_t mask = 0b11; 
			CAN_controller_bitModify(mask, CANINTF, 0b00);
     1fe:	50 e0       	ldi	r21, 0x00	; 0
     200:	6c e2       	ldi	r22, 0x2C	; 44
     202:	70 e0       	ldi	r23, 0x00	; 0
     204:	83 e0       	ldi	r24, 0x03	; 3
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	56 d0       	rcall	.+172    	; 0x2b6 <CAN_controller_bitModify>
     20a:	0f 90       	pop	r0
     20c:	0f 90       	pop	r0
     20e:	2f ef       	ldi	r18, 0xFF	; 255
     210:	80 e7       	ldi	r24, 0x70	; 112
     212:	92 e0       	ldi	r25, 0x02	; 2
     214:	21 50       	subi	r18, 0x01	; 1
     216:	80 40       	sbci	r24, 0x00	; 0
     218:	90 40       	sbci	r25, 0x00	; 0
     21a:	e1 f7       	brne	.-8      	; 0x214 <main+0xa2>
     21c:	00 c0       	rjmp	.+0      	; 0x21e <main+0xac>
     21e:	00 00       	nop
			
		}
		_delay_ms(50);	
	
		//CAN_transmit_message(&message);
		printf("\n\r-------------------------------------------\n\r");
     220:	1f 93       	push	r17
     222:	0f 93       	push	r16
     224:	9d d4       	rcall	.+2362   	; 0xb60 <printf>
     226:	0f 90       	pop	r0
		CAN_transmit_message(&message);
		_delay_ms(500);	
		
		//CAN_controller_setMode(MODE_LOOPBACK);
		*/
	}
     228:	0f 90       	pop	r0
     22a:	d4 cf       	rjmp	.-88     	; 0x1d4 <main+0x62>

0000022c <CAN_receiveMessage>:
     22c:	ef 92       	push	r14
	CAN_controller_RTS(buffer_number);

	//ERROR HANDLING?	
}

void CAN_receiveMessage(CAN_message_t * received_message) {
     22e:	ff 92       	push	r15
     230:	0f 93       	push	r16
     232:	1f 93       	push	r17
     234:	cf 93       	push	r28
     236:	7c 01       	movw	r14, r24
	
	
	uint8_t buffer = 0;
	switch (buffer) {
		case 0:
				received_message->ID = ((CAN_controller_read(MCP_RXB0SIDL) & 0b11100000) >> 5) + (CAN_controller_read(MCP_RXB0SIDH) << 3); 
     238:	82 e6       	ldi	r24, 0x62	; 98
     23a:	2c d0       	rcall	.+88     	; 0x294 <CAN_controller_read>
     23c:	c8 2f       	mov	r28, r24
     23e:	81 e6       	ldi	r24, 0x61	; 97
     240:	29 d0       	rcall	.+82     	; 0x294 <CAN_controller_read>
     242:	c2 95       	swap	r28
     244:	c6 95       	lsr	r28
     246:	c7 70       	andi	r28, 0x07	; 7
     248:	28 e0       	ldi	r18, 0x08	; 8
     24a:	82 9f       	mul	r24, r18
     24c:	c0 01       	movw	r24, r0
     24e:	11 24       	eor	r1, r1
     250:	8c 0f       	add	r24, r28
     252:	91 1d       	adc	r25, r1
     254:	f7 01       	movw	r30, r14
     256:	91 87       	std	Z+9, r25	; 0x09
     258:	80 87       	std	Z+8, r24	; 0x08
				
				//printf("Whole id: %i\n\r", received_message->ID);
				received_message->data_length = (CAN_controller_read(MCP_RXB0DLC) & 0b00001111);
     25a:	85 e6       	ldi	r24, 0x65	; 101
     25c:	1b d0       	rcall	.+54     	; 0x294 <CAN_controller_read>
     25e:	8f 70       	andi	r24, 0x0F	; 15
     260:	f7 01       	movw	r30, r14
     262:	82 87       	std	Z+10, r24	; 0x0a
     264:	82 85       	ldd	r24, Z+10	; 0x0a
				//printf("data length read: %i\n\r",(CAN_controller_read(MCP_RXB0DLC) & 0b00001111));
				for (uint8_t i = 0; i != received_message->data_length; i++) {
     266:	88 23       	and	r24, r24
     268:	79 f0       	breq	.+30     	; 0x288 <CAN_receiveMessage+0x5c>
     26a:	c0 e0       	ldi	r28, 0x00	; 0
     26c:	0c 2f       	mov	r16, r28
					received_message->data[i] = CAN_controller_read(MCP_RXB0D0 + i);
     26e:	10 e0       	ldi	r17, 0x00	; 0
     270:	86 e6       	ldi	r24, 0x66	; 102
     272:	8c 0f       	add	r24, r28
     274:	0f d0       	rcall	.+30     	; 0x294 <CAN_controller_read>
     276:	f7 01       	movw	r30, r14
     278:	e0 0f       	add	r30, r16
     27a:	f1 1f       	adc	r31, r17
     27c:	80 83       	st	Z, r24
     27e:	cf 5f       	subi	r28, 0xFF	; 255
				received_message->ID = ((CAN_controller_read(MCP_RXB0SIDL) & 0b11100000) >> 5) + (CAN_controller_read(MCP_RXB0SIDH) << 3); 
				
				//printf("Whole id: %i\n\r", received_message->ID);
				received_message->data_length = (CAN_controller_read(MCP_RXB0DLC) & 0b00001111);
				//printf("data length read: %i\n\r",(CAN_controller_read(MCP_RXB0DLC) & 0b00001111));
				for (uint8_t i = 0; i != received_message->data_length; i++) {
     280:	f7 01       	movw	r30, r14
     282:	82 85       	ldd	r24, Z+10	; 0x0a
     284:	8c 13       	cpse	r24, r28
     286:	f2 cf       	rjmp	.-28     	; 0x26c <CAN_receiveMessage+0x40>
     288:	cf 91       	pop	r28
	}
	
	
	
	
}
     28a:	1f 91       	pop	r17
     28c:	0f 91       	pop	r16
     28e:	ff 90       	pop	r15
     290:	ef 90       	pop	r14
     292:	08 95       	ret

00000294 <CAN_controller_read>:
     294:	cf 93       	push	r28
		default: 
			break;
			
	}
	SPI_setChipSelect(PB7, 1);
}
     296:	c8 2f       	mov	r28, r24
     298:	60 e0       	ldi	r22, 0x00	; 0
     29a:	87 e0       	ldi	r24, 0x07	; 7
     29c:	4f d1       	rcall	.+670    	; 0x53c <SPI_setChipSelect>
     29e:	83 e0       	ldi	r24, 0x03	; 3
     2a0:	42 d1       	rcall	.+644    	; 0x526 <SPI_masterWrite>
     2a2:	8c 2f       	mov	r24, r28
     2a4:	40 d1       	rcall	.+640    	; 0x526 <SPI_masterWrite>
     2a6:	44 d1       	rcall	.+648    	; 0x530 <SPI_masterRead>
     2a8:	c8 2f       	mov	r28, r24
     2aa:	61 e0       	ldi	r22, 0x01	; 1
     2ac:	87 e0       	ldi	r24, 0x07	; 7
     2ae:	46 d1       	rcall	.+652    	; 0x53c <SPI_setChipSelect>
     2b0:	8c 2f       	mov	r24, r28
     2b2:	cf 91       	pop	r28
     2b4:	08 95       	ret

000002b6 <CAN_controller_bitModify>:
     2b6:	1f 93       	push	r17
     2b8:	cf 93       	push	r28
     2ba:	df 93       	push	r29
     2bc:	d8 2f       	mov	r29, r24
     2be:	16 2f       	mov	r17, r22
     2c0:	c4 2f       	mov	r28, r20
     2c2:	60 e0       	ldi	r22, 0x00	; 0
     2c4:	87 e0       	ldi	r24, 0x07	; 7
     2c6:	3a d1       	rcall	.+628    	; 0x53c <SPI_setChipSelect>
     2c8:	85 e0       	ldi	r24, 0x05	; 5
     2ca:	2d d1       	rcall	.+602    	; 0x526 <SPI_masterWrite>
     2cc:	81 2f       	mov	r24, r17
     2ce:	2b d1       	rcall	.+598    	; 0x526 <SPI_masterWrite>
     2d0:	8d 2f       	mov	r24, r29
     2d2:	29 d1       	rcall	.+594    	; 0x526 <SPI_masterWrite>
     2d4:	8c 2f       	mov	r24, r28
     2d6:	27 d1       	rcall	.+590    	; 0x526 <SPI_masterWrite>
     2d8:	61 e0       	ldi	r22, 0x01	; 1
     2da:	87 e0       	ldi	r24, 0x07	; 7
     2dc:	2f d1       	rcall	.+606    	; 0x53c <SPI_setChipSelect>
     2de:	df 91       	pop	r29
     2e0:	cf 91       	pop	r28
     2e2:	1f 91       	pop	r17
     2e4:	08 95       	ret

000002e6 <CAN_controller_reset>:
     2e6:	60 e0       	ldi	r22, 0x00	; 0
     2e8:	87 e0       	ldi	r24, 0x07	; 7
     2ea:	28 d1       	rcall	.+592    	; 0x53c <SPI_setChipSelect>
     2ec:	88 e7       	ldi	r24, 0x78	; 120
     2ee:	92 e0       	ldi	r25, 0x02	; 2
     2f0:	9f 93       	push	r25
     2f2:	8f 93       	push	r24
     2f4:	35 d4       	rcall	.+2154   	; 0xb60 <printf>
     2f6:	80 ec       	ldi	r24, 0xC0	; 192
     2f8:	16 d1       	rcall	.+556    	; 0x526 <SPI_masterWrite>
     2fa:	61 e0       	ldi	r22, 0x01	; 1
     2fc:	87 e0       	ldi	r24, 0x07	; 7
     2fe:	1e d1       	rcall	.+572    	; 0x53c <SPI_setChipSelect>
     300:	0f 90       	pop	r0
     302:	0f 90       	pop	r0
     304:	08 95       	ret

00000306 <CAN_controller_setMode>:

void CAN_controller_setMode(uint8_t mode) {
     306:	cf 93       	push	r28
     308:	df 93       	push	r29
     30a:	c8 2f       	mov	r28, r24
	
	
	
	CAN_controller_reset();
     30c:	ec df       	rcall	.-40     	; 0x2e6 <CAN_controller_reset>
	uint8_t status = CAN_controller_read(MCP_CANSTAT);
     30e:	8e e0       	ldi	r24, 0x0E	; 14
     310:	c1 df       	rcall	.-126    	; 0x294 <CAN_controller_read>
	uint8_t mode_bits = (status & MODE_MASK);
     312:	80 7e       	andi	r24, 0xE0	; 224
	
	if (mode_bits != MODE_CONFIG) {
     314:	80 38       	cpi	r24, 0x80	; 128
     316:	61 f0       	breq	.+24     	; 0x330 <CAN_controller_setMode+0x2a>
		printf("Not in config mode, \t %i\n\r", mode_bits);
     318:	1f 92       	push	r1
     31a:	8f 93       	push	r24
     31c:	84 e8       	ldi	r24, 0x84	; 132
     31e:	92 e0       	ldi	r25, 0x02	; 2
     320:	9f 93       	push	r25
     322:	8f 93       	push	r24
     324:	1d d4       	rcall	.+2106   	; 0xb60 <printf>
		return;
     326:	0f 90       	pop	r0
     328:	0f 90       	pop	r0
     32a:	0f 90       	pop	r0
     32c:	0f 90       	pop	r0
     32e:	32 c0       	rjmp	.+100    	; 0x394 <CAN_controller_setMode+0x8e>
	}
	
	
	//set in loopback mode p.60 MCP2515
	CAN_controller_bitModify(0b11101110, MCP_CANCTRL, mode | (0b1100));
     330:	4c 2f       	mov	r20, r28
     332:	4c 60       	ori	r20, 0x0C	; 12
     334:	6f e0       	ldi	r22, 0x0F	; 15
     336:	8e ee       	ldi	r24, 0xEE	; 238
     338:	be df       	rcall	.-132    	; 0x2b6 <CAN_controller_bitModify>
	CAN_controller_bitModify(0b11111111, MCP_CANINTE, 0b1);
     33a:	41 e0       	ldi	r20, 0x01	; 1
     33c:	6b e2       	ldi	r22, 0x2B	; 43
     33e:	8f ef       	ldi	r24, 0xFF	; 255
     340:	ba df       	rcall	.-140    	; 0x2b6 <CAN_controller_bitModify>
	CAN_controller_bitModify(0b01100000, MCP_RXB0CTRL, 0b01100000); //receive any type of message, no filter p. 27
     342:	40 e6       	ldi	r20, 0x60	; 96
     344:	60 e6       	ldi	r22, 0x60	; 96
     346:	80 e6       	ldi	r24, 0x60	; 96
     348:	b6 df       	rcall	.-148    	; 0x2b6 <CAN_controller_bitModify>
     34a:	2f ef       	ldi	r18, 0xFF	; 255
     34c:	83 ec       	ldi	r24, 0xC3	; 195
     34e:	99 e0       	ldi	r25, 0x09	; 9
     350:	21 50       	subi	r18, 0x01	; 1
     352:	80 40       	sbci	r24, 0x00	; 0
     354:	90 40       	sbci	r25, 0x00	; 0
     356:	e1 f7       	brne	.-8      	; 0x350 <CAN_controller_setMode+0x4a>
     358:	00 c0       	rjmp	.+0      	; 0x35a <CAN_controller_setMode+0x54>
     35a:	00 00       	nop

	_delay_ms(200);
	status = CAN_controller_read(MCP_CANSTAT);
     35c:	8e e0       	ldi	r24, 0x0E	; 14
     35e:	9a df       	rcall	.-204    	; 0x294 <CAN_controller_read>
     360:	d8 2f       	mov	r29, r24
	mode_bits = (status & MODE_MASK);
     362:	d0 7e       	andi	r29, 0xE0	; 224
     364:	cd 17       	cp	r28, r29
	if (mode_bits != mode) {
     366:	59 f0       	breq	.+22     	; 0x37e <CAN_controller_setMode+0x78>
		printf("Not in correct mode: Mode: %i\n\r", mode_bits);
     368:	1f 92       	push	r1
     36a:	df 93       	push	r29
     36c:	8f e9       	ldi	r24, 0x9F	; 159
     36e:	92 e0       	ldi	r25, 0x02	; 2
     370:	9f 93       	push	r25
     372:	8f 93       	push	r24
     374:	f5 d3       	rcall	.+2026   	; 0xb60 <printf>
     376:	0f 90       	pop	r0
     378:	0f 90       	pop	r0
     37a:	0f 90       	pop	r0
     37c:	0f 90       	pop	r0

	}
	printf("Mode set: %i\n\r", status & MODE_MASK);
     37e:	1f 92       	push	r1
     380:	df 93       	push	r29
     382:	8f eb       	ldi	r24, 0xBF	; 191
     384:	92 e0       	ldi	r25, 0x02	; 2
     386:	9f 93       	push	r25
     388:	8f 93       	push	r24
     38a:	ea d3       	rcall	.+2004   	; 0xb60 <printf>
     38c:	0f 90       	pop	r0
     38e:	0f 90       	pop	r0
     390:	0f 90       	pop	r0
     392:	0f 90       	pop	r0
     394:	df 91       	pop	r29
}
     396:	cf 91       	pop	r28
     398:	08 95       	ret

0000039a <CAN_controller_init>:
     39a:	8e ec       	ldi	r24, 0xCE	; 206
	SPI_masterWrite(MCP_RESET);
	SPI_setChipSelect(PB7, 1);
}
void CAN_controller_init() {
	
	printf("Can controller init \n\r");
     39c:	92 e0       	ldi	r25, 0x02	; 2
     39e:	9f 93       	push	r25
     3a0:	8f 93       	push	r24
     3a2:	de d3       	rcall	.+1980   	; 0xb60 <printf>
	SPI_masterInit();
     3a4:	b7 d0       	rcall	.+366    	; 0x514 <SPI_masterInit>
     3a6:	85 ee       	ldi	r24, 0xE5	; 229
	printf("SPI master init done \n\r");
     3a8:	92 e0       	ldi	r25, 0x02	; 2
     3aa:	9f 93       	push	r25
     3ac:	8f 93       	push	r24
     3ae:	d8 d3       	rcall	.+1968   	; 0xb60 <printf>

	CAN_controller_setMode(MODE_LOOPBACK);
     3b0:	80 e4       	ldi	r24, 0x40	; 64
     3b2:	a9 df       	rcall	.-174    	; 0x306 <CAN_controller_setMode>
     3b4:	8d ef       	ldi	r24, 0xFD	; 253
	printf("Modes set \n\r");
     3b6:	92 e0       	ldi	r25, 0x02	; 2
     3b8:	9f 93       	push	r25
     3ba:	8f 93       	push	r24
     3bc:	d1 d3       	rcall	.+1954   	; 0xb60 <printf>
     3be:	78 94       	sei

	//set interrupt on 2560
	//Global interrupt enable
	sei();
     3c0:	ec 9a       	sbi	0x1d, 4	; 29
	//SREG |= (1 << I);
	EIMSK |= 1 << INT4;	//interrupt on pin INT4
     3c2:	ea e6       	ldi	r30, 0x6A	; 106
	EICRB |= 1 << ISC41; //Turn on falling edge
     3c4:	f0 e0       	ldi	r31, 0x00	; 0
     3c6:	80 81       	ld	r24, Z
     3c8:	82 60       	ori	r24, 0x02	; 2
     3ca:	80 83       	st	Z, r24
     3cc:	80 81       	ld	r24, Z
	EICRB &= ~(1 << ISC40); //....
     3ce:	8e 7f       	andi	r24, 0xFE	; 254
     3d0:	80 83       	st	Z, r24
     3d2:	8d b1       	in	r24, 0x0d	; 13

//set PD2 as input
	DDRE  &= (1 << PE4); //set as input.
     3d4:	80 71       	andi	r24, 0x10	; 16
     3d6:	8d b9       	out	0x0d, r24	; 13
     3d8:	2f ef       	ldi	r18, 0xFF	; 255
     3da:	83 ec       	ldi	r24, 0xC3	; 195
     3dc:	99 e0       	ldi	r25, 0x09	; 9
     3de:	21 50       	subi	r18, 0x01	; 1
     3e0:	80 40       	sbci	r24, 0x00	; 0
     3e2:	90 40       	sbci	r25, 0x00	; 0
     3e4:	e1 f7       	brne	.-8      	; 0x3de <CAN_controller_init+0x44>
     3e6:	00 c0       	rjmp	.+0      	; 0x3e8 <CAN_controller_init+0x4e>
     3e8:	00 00       	nop
	
	
	
	_delay_ms(200);
	printf("after write to canctrl\n\r");
     3ea:	8a e0       	ldi	r24, 0x0A	; 10
     3ec:	93 e0       	ldi	r25, 0x03	; 3
     3ee:	9f 93       	push	r25
     3f0:	8f 93       	push	r24
     3f2:	b6 d3       	rcall	.+1900   	; 0xb60 <printf>
	
	//Check CANSTAT register
	uint8_t status = CAN_controller_read(MCP_CANSTAT);
     3f4:	8e e0       	ldi	r24, 0x0E	; 14
     3f6:	4e df       	rcall	.-356    	; 0x294 <CAN_controller_read>
	printf("Data: %i\n\r", status);
     3f8:	1f 92       	push	r1
     3fa:	8f 93       	push	r24
     3fc:	83 e2       	ldi	r24, 0x23	; 35
     3fe:	93 e0       	ldi	r25, 0x03	; 3
     400:	9f 93       	push	r25
     402:	8f 93       	push	r24
     404:	ad d3       	rcall	.+1882   	; 0xb60 <printf>
     406:	8d b7       	in	r24, 0x3d	; 61

}
     408:	9e b7       	in	r25, 0x3e	; 62
     40a:	0c 96       	adiw	r24, 0x0c	; 12
     40c:	0f b6       	in	r0, 0x3f	; 63
     40e:	f8 94       	cli
     410:	9e bf       	out	0x3e, r25	; 62
     412:	0f be       	out	0x3f, r0	; 63
     414:	8d bf       	out	0x3d, r24	; 61
     416:	08 95       	ret

00000418 <joystick_readPositionOverCAN>:
     418:	8f 92       	push	r8
 *  Author: torsteoe
 */ 
#include "joystick.h"
#include "CAN.h"

void joystick_readPositionOverCAN() {
     41a:	9f 92       	push	r9
     41c:	af 92       	push	r10
     41e:	bf 92       	push	r11
     420:	ef 92       	push	r14
     422:	ff 92       	push	r15
     424:	1f 93       	push	r17
     426:	cf 93       	push	r28
     428:	df 93       	push	r29
     42a:	cd b7       	in	r28, 0x3d	; 61
     42c:	de b7       	in	r29, 0x3e	; 62
     42e:	2b 97       	sbiw	r28, 0x0b	; 11
     430:	0f b6       	in	r0, 0x3f	; 63
     432:	f8 94       	cli
     434:	de bf       	out	0x3e, r29	; 62
     436:	0f be       	out	0x3f, r0	; 63
     438:	cd bf       	out	0x3d, r28	; 61
	CAN_message_t mess;
	CAN_receiveMessage(&mess);
     43a:	ce 01       	movw	r24, r28
     43c:	01 96       	adiw	r24, 0x01	; 1
     43e:	f6 de       	rcall	.-532    	; 0x22c <CAN_receiveMessage>
	
	if (mess.ID = 0x01) {
     440:	81 e0       	ldi	r24, 0x01	; 1
     442:	90 e0       	ldi	r25, 0x00	; 0
     444:	9a 87       	std	Y+10, r25	; 0x0a
     446:	89 87       	std	Y+9, r24	; 0x09
		joystick_pos.x_pos = mess.data[0];
     448:	69 81       	ldd	r22, Y+1	; 0x01
     44a:	0f 2e       	mov	r0, r31
     44c:	ff e5       	ldi	r31, 0x5F	; 95
     44e:	ef 2e       	mov	r14, r31
     450:	f3 e0       	ldi	r31, 0x03	; 3
     452:	ff 2e       	mov	r15, r31
     454:	f0 2d       	mov	r31, r0
     456:	f7 01       	movw	r30, r14
     458:	60 83       	st	Z, r22
		joystick_pos.y_pos = mess.data[1];
     45a:	1a 81       	ldd	r17, Y+2	; 0x02
     45c:	11 83       	std	Z+1, r17	; 0x01
		joystick_pos.angle = atan2(joystick_pos.y_pos, joystick_pos.x_pos)*360/2.0/3.14;
     45e:	06 2e       	mov	r0, r22
     460:	00 0c       	add	r0, r0
     462:	77 0b       	sbc	r23, r23
     464:	88 0b       	sbc	r24, r24
     466:	99 0b       	sbc	r25, r25
     468:	ae d1       	rcall	.+860    	; 0x7c6 <__floatsisf>
     46a:	4b 01       	movw	r8, r22
     46c:	5c 01       	movw	r10, r24
     46e:	61 2f       	mov	r22, r17
     470:	11 0f       	add	r17, r17
     472:	77 0b       	sbc	r23, r23
     474:	88 0b       	sbc	r24, r24
     476:	99 0b       	sbc	r25, r25
     478:	a6 d1       	rcall	.+844    	; 0x7c6 <__floatsisf>
     47a:	a5 01       	movw	r20, r10
     47c:	94 01       	movw	r18, r8
     47e:	b5 d0       	rcall	.+362    	; 0x5ea <atan2>
     480:	20 e0       	ldi	r18, 0x00	; 0
     482:	30 e0       	ldi	r19, 0x00	; 0
     484:	44 eb       	ldi	r20, 0xB4	; 180
     486:	53 e4       	ldi	r21, 0x43	; 67
     488:	56 d2       	rcall	.+1196   	; 0x936 <__mulsf3>
     48a:	20 e0       	ldi	r18, 0x00	; 0
     48c:	30 e0       	ldi	r19, 0x00	; 0
     48e:	40 e0       	ldi	r20, 0x00	; 0
     490:	5f e3       	ldi	r21, 0x3F	; 63
     492:	51 d2       	rcall	.+1186   	; 0x936 <__mulsf3>
     494:	23 ec       	ldi	r18, 0xC3	; 195
     496:	35 ef       	ldi	r19, 0xF5	; 245
     498:	48 e4       	ldi	r20, 0x48	; 72
     49a:	50 e4       	ldi	r21, 0x40	; 64
     49c:	f9 d0       	rcall	.+498    	; 0x690 <__divsf3>
     49e:	60 d1       	rcall	.+704    	; 0x760 <__fixsfsi>
     4a0:	f7 01       	movw	r30, r14
     4a2:	73 83       	std	Z+3, r23	; 0x03
     4a4:	62 83       	std	Z+2, r22	; 0x02
	}
}
     4a6:	2b 96       	adiw	r28, 0x0b	; 11
     4a8:	0f b6       	in	r0, 0x3f	; 63
     4aa:	f8 94       	cli
     4ac:	de bf       	out	0x3e, r29	; 62
     4ae:	0f be       	out	0x3f, r0	; 63
     4b0:	cd bf       	out	0x3d, r28	; 61
     4b2:	df 91       	pop	r29
     4b4:	cf 91       	pop	r28
     4b6:	1f 91       	pop	r17
     4b8:	ff 90       	pop	r15
     4ba:	ef 90       	pop	r14
     4bc:	bf 90       	pop	r11
     4be:	af 90       	pop	r10
     4c0:	9f 90       	pop	r9
     4c2:	8f 90       	pop	r8
     4c4:	08 95       	ret

000004c6 <joystick_printPosition>:

void joystick_printPosition() {
	printf("X: %i\tY: %i\n\rAngle: %i\n\r", joystick_pos.x_pos, joystick_pos.y_pos, joystick_pos.angle);
     4c6:	ef e5       	ldi	r30, 0x5F	; 95
     4c8:	f3 e0       	ldi	r31, 0x03	; 3
     4ca:	83 81       	ldd	r24, Z+3	; 0x03
     4cc:	8f 93       	push	r24
     4ce:	82 81       	ldd	r24, Z+2	; 0x02
     4d0:	8f 93       	push	r24
     4d2:	81 81       	ldd	r24, Z+1	; 0x01
     4d4:	28 2f       	mov	r18, r24
     4d6:	08 2e       	mov	r0, r24
     4d8:	00 0c       	add	r0, r0
     4da:	33 0b       	sbc	r19, r19
     4dc:	3f 93       	push	r19
     4de:	8f 93       	push	r24
     4e0:	80 81       	ld	r24, Z
     4e2:	28 2f       	mov	r18, r24
     4e4:	08 2e       	mov	r0, r24
     4e6:	00 0c       	add	r0, r0
     4e8:	33 0b       	sbc	r19, r19
     4ea:	3f 93       	push	r19
     4ec:	8f 93       	push	r24
     4ee:	8e e2       	ldi	r24, 0x2E	; 46
     4f0:	93 e0       	ldi	r25, 0x03	; 3
     4f2:	9f 93       	push	r25
     4f4:	8f 93       	push	r24
     4f6:	34 d3       	rcall	.+1640   	; 0xb60 <printf>
     4f8:	8d b7       	in	r24, 0x3d	; 61
     4fa:	9e b7       	in	r25, 0x3e	; 62
     4fc:	08 96       	adiw	r24, 0x08	; 8
     4fe:	0f b6       	in	r0, 0x3f	; 63
     500:	f8 94       	cli
     502:	9e bf       	out	0x3e, r25	; 62
     504:	0f be       	out	0x3f, r0	; 63
     506:	8d bf       	out	0x3d, r24	; 61
     508:	08 95       	ret

0000050a <setupInit>:
#include "setup.h"
#include "timer.h"

	void setupInit(void){
	//cli();
	USART_init(MYUBRR);
     50a:	87 e6       	ldi	r24, 0x67	; 103
     50c:	90 e0       	ldi	r25, 0x00	; 0
     50e:	43 d0       	rcall	.+134    	; 0x596 <USART_init>
	CAN_controller_init();
     510:	44 cf       	rjmp	.-376    	; 0x39a <CAN_controller_init>
     512:	08 95       	ret

00000514 <SPI_masterInit>:
     514:	84 b1       	in	r24, 0x04	; 4
	SPI_setChipSelect(PB7, 1);
}

void SPI_slaveInit(void) {
	DDRB = (1 << PB3);
	SPCR = (1 << SPE);
     516:	87 60       	ori	r24, 0x07	; 7
     518:	84 b9       	out	0x04, r24	; 4
     51a:	27 9a       	sbi	0x04, 7	; 4
     51c:	8c b5       	in	r24, 0x2c	; 44
     51e:	81 65       	ori	r24, 0x51	; 81
     520:	8c bd       	out	0x2c, r24	; 44
     522:	2f 9a       	sbi	0x05, 7	; 5
     524:	08 95       	ret

00000526 <SPI_masterWrite>:
	
}
void SPI_masterWrite(char cData)
{
	SPDR = cData;
     526:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR & (1<<SPIF)));
     528:	0d b4       	in	r0, 0x2d	; 45
     52a:	07 fe       	sbrs	r0, 7
     52c:	fd cf       	rjmp	.-6      	; 0x528 <SPI_masterWrite+0x2>

}
     52e:	08 95       	ret

00000530 <SPI_masterRead>:

uint8_t SPI_masterRead() {
	SPDR = 0;
     530:	1e bc       	out	0x2e, r1	; 46
	while (!(SPSR & (1<<SPIF)));
     532:	0d b4       	in	r0, 0x2d	; 45
     534:	07 fe       	sbrs	r0, 7
     536:	fd cf       	rjmp	.-6      	; 0x532 <SPI_masterRead+0x2>
	return SPDR;
     538:	8e b5       	in	r24, 0x2e	; 46
}
     53a:	08 95       	ret

0000053c <SPI_setChipSelect>:

void SPI_setChipSelect(uint8_t pin, uint8_t setHigh ) {
	if (setHigh) {
     53c:	66 23       	and	r22, r22
     53e:	69 f0       	breq	.+26     	; 0x55a <SPI_setChipSelect+0x1e>
		PORTB |= (1 << pin); //chip select high
     540:	45 b1       	in	r20, 0x05	; 5
     542:	21 e0       	ldi	r18, 0x01	; 1
     544:	30 e0       	ldi	r19, 0x00	; 0
     546:	b9 01       	movw	r22, r18
     548:	02 c0       	rjmp	.+4      	; 0x54e <SPI_setChipSelect+0x12>
     54a:	66 0f       	add	r22, r22
     54c:	77 1f       	adc	r23, r23
     54e:	8a 95       	dec	r24
     550:	e2 f7       	brpl	.-8      	; 0x54a <SPI_setChipSelect+0xe>
     552:	cb 01       	movw	r24, r22
     554:	84 2b       	or	r24, r20
     556:	85 b9       	out	0x05, r24	; 5
     558:	08 95       	ret
	}
	else {
		PORTB &= ~(1 << pin); //chip select low
     55a:	45 b1       	in	r20, 0x05	; 5
     55c:	21 e0       	ldi	r18, 0x01	; 1
     55e:	30 e0       	ldi	r19, 0x00	; 0
     560:	b9 01       	movw	r22, r18
     562:	02 c0       	rjmp	.+4      	; 0x568 <SPI_setChipSelect+0x2c>
     564:	66 0f       	add	r22, r22
     566:	77 1f       	adc	r23, r23
     568:	8a 95       	dec	r24
     56a:	e2 f7       	brpl	.-8      	; 0x564 <SPI_setChipSelect+0x28>
     56c:	cb 01       	movw	r24, r22
     56e:	80 95       	com	r24
     570:	84 23       	and	r24, r20
     572:	85 b9       	out	0x05, r24	; 5
     574:	08 95       	ret

00000576 <USART_transmitChar>:
	printf("uart setup finished\n\r");
}

void USART_transmitChar(unsigned char data) {
	/* wait for empty transmit buffer */
	while ( ! ( UCSR0A & (1<<UDRE0)))
     576:	e0 ec       	ldi	r30, 0xC0	; 192
     578:	f0 e0       	ldi	r31, 0x00	; 0
     57a:	90 81       	ld	r25, Z
     57c:	95 ff       	sbrs	r25, 5
     57e:	fd cf       	rjmp	.-6      	; 0x57a <USART_transmitChar+0x4>
		;
		
	/* Put data in buffer, send data */
	UDR0 = data;
     580:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     584:	08 95       	ret

00000586 <USART_receiveChar>:
}

unsigned char USART_receiveChar( void ) {
	/* wait for data to be received*/
	while ( !(UCSR0A & (1<<RXC0) ) ) 
     586:	e0 ec       	ldi	r30, 0xC0	; 192
     588:	f0 e0       	ldi	r31, 0x00	; 0
     58a:	80 81       	ld	r24, Z
     58c:	88 23       	and	r24, r24
     58e:	ec f7       	brge	.-6      	; 0x58a <USART_receiveChar+0x4>
		;
	
	return UDR0;
     590:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     594:	08 95       	ret

00000596 <USART_init>:

#include "uart.h"
FILE *uart ;
void USART_init(unsigned int ubrr) {
	
	UBRR0H = (unsigned char) (ubrr >> 8);
     596:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
	UBRR0L = (unsigned char) (ubrr);
     59a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
	
	/*Enable receiver and transmitter*/
	
	UCSR0B = (1<<RXEN0) | (1 <<TXEN0);
     59e:	88 e1       	ldi	r24, 0x18	; 24
     5a0:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
	
	/* SET FRAME FORMAT: 8data, 2 stop bit */
	
	
	UCSR0C = (1<<USBS0) | (3<<UCSZ00);
     5a4:	8e e0       	ldi	r24, 0x0E	; 14
     5a6:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
	
	uart = fdevopen(&USART_transmitChar, &USART_receiveChar);
     5aa:	63 ec       	ldi	r22, 0xC3	; 195
     5ac:	72 e0       	ldi	r23, 0x02	; 2
     5ae:	8b eb       	ldi	r24, 0xBB	; 187
     5b0:	92 e0       	ldi	r25, 0x02	; 2
     5b2:	8c d2       	rcall	.+1304   	; 0xacc <fdevopen>
     5b4:	90 93 6f 03 	sts	0x036F, r25	; 0x80036f <uart+0x1>
     5b8:	80 93 6e 03 	sts	0x036E, r24	; 0x80036e <uart>
	printf("uart setup finished\n\r");
     5bc:	87 e4       	ldi	r24, 0x47	; 71
     5be:	93 e0       	ldi	r25, 0x03	; 3
     5c0:	9f 93       	push	r25
     5c2:	8f 93       	push	r24
     5c4:	cd d2       	rcall	.+1434   	; 0xb60 <printf>
}
     5c6:	0f 90       	pop	r0
     5c8:	0f 90       	pop	r0
     5ca:	08 95       	ret
     5cc:	65 d1       	rcall	.+714    	; 0x898 <__fp_pscA>
     5ce:	58 f0       	brcs	.+22     	; 0x5e6 <USART_init+0x50>
     5d0:	80 e8       	ldi	r24, 0x80	; 128
     5d2:	91 e0       	ldi	r25, 0x01	; 1
     5d4:	09 f4       	brne	.+2      	; 0x5d8 <USART_init+0x42>
     5d6:	9e ef       	ldi	r25, 0xFE	; 254
     5d8:	66 d1       	rcall	.+716    	; 0x8a6 <__fp_pscB>
     5da:	28 f0       	brcs	.+10     	; 0x5e6 <USART_init+0x50>
     5dc:	40 e8       	ldi	r20, 0x80	; 128
     5de:	51 e0       	ldi	r21, 0x01	; 1
     5e0:	59 f4       	brne	.+22     	; 0x5f8 <atan2+0xe>
     5e2:	5e ef       	ldi	r21, 0xFE	; 254
     5e4:	09 c0       	rjmp	.+18     	; 0x5f8 <atan2+0xe>
     5e6:	30 c1       	rjmp	.+608    	; 0x848 <__fp_nan>
     5e8:	98 c1       	rjmp	.+816    	; 0x91a <__fp_zero>

000005ea <atan2>:
     5ea:	e9 2f       	mov	r30, r25
     5ec:	e0 78       	andi	r30, 0x80	; 128
     5ee:	73 d1       	rcall	.+742    	; 0x8d6 <__fp_split3>
     5f0:	68 f3       	brcs	.-38     	; 0x5cc <USART_init+0x36>
     5f2:	09 2e       	mov	r0, r25
     5f4:	05 2a       	or	r0, r21
     5f6:	c1 f3       	breq	.-16     	; 0x5e8 <USART_init+0x52>
     5f8:	26 17       	cp	r18, r22
     5fa:	37 07       	cpc	r19, r23
     5fc:	48 07       	cpc	r20, r24
     5fe:	59 07       	cpc	r21, r25
     600:	38 f0       	brcs	.+14     	; 0x610 <atan2+0x26>
     602:	0e 2e       	mov	r0, r30
     604:	07 f8       	bld	r0, 7
     606:	e0 25       	eor	r30, r0
     608:	69 f0       	breq	.+26     	; 0x624 <atan2+0x3a>
     60a:	e0 25       	eor	r30, r0
     60c:	e0 64       	ori	r30, 0x40	; 64
     60e:	0a c0       	rjmp	.+20     	; 0x624 <atan2+0x3a>
     610:	ef 63       	ori	r30, 0x3F	; 63
     612:	07 f8       	bld	r0, 7
     614:	00 94       	com	r0
     616:	07 fa       	bst	r0, 7
     618:	db 01       	movw	r26, r22
     61a:	b9 01       	movw	r22, r18
     61c:	9d 01       	movw	r18, r26
     61e:	dc 01       	movw	r26, r24
     620:	ca 01       	movw	r24, r20
     622:	ad 01       	movw	r20, r26
     624:	ef 93       	push	r30
     626:	43 d0       	rcall	.+134    	; 0x6ae <__divsf3_pse>
     628:	45 d1       	rcall	.+650    	; 0x8b4 <__fp_round>
     62a:	0a d0       	rcall	.+20     	; 0x640 <atan>
     62c:	5f 91       	pop	r21
     62e:	55 23       	and	r21, r21
     630:	31 f0       	breq	.+12     	; 0x63e <atan2+0x54>
     632:	2b ed       	ldi	r18, 0xDB	; 219
     634:	3f e0       	ldi	r19, 0x0F	; 15
     636:	49 e4       	ldi	r20, 0x49	; 73
     638:	50 fd       	sbrc	r21, 0
     63a:	49 ec       	ldi	r20, 0xC9	; 201
     63c:	e3 c1       	rjmp	.+966    	; 0xa04 <__addsf3>
     63e:	08 95       	ret

00000640 <atan>:
     640:	df 93       	push	r29
     642:	dd 27       	eor	r29, r29
     644:	b9 2f       	mov	r27, r25
     646:	bf 77       	andi	r27, 0x7F	; 127
     648:	40 e8       	ldi	r20, 0x80	; 128
     64a:	5f e3       	ldi	r21, 0x3F	; 63
     64c:	16 16       	cp	r1, r22
     64e:	17 06       	cpc	r1, r23
     650:	48 07       	cpc	r20, r24
     652:	5b 07       	cpc	r21, r27
     654:	10 f4       	brcc	.+4      	; 0x65a <atan+0x1a>
     656:	d9 2f       	mov	r29, r25
     658:	67 d1       	rcall	.+718    	; 0x928 <inverse>
     65a:	9f 93       	push	r25
     65c:	8f 93       	push	r24
     65e:	7f 93       	push	r23
     660:	6f 93       	push	r22
     662:	cc d1       	rcall	.+920    	; 0x9fc <square>
     664:	e4 ee       	ldi	r30, 0xE4	; 228
     666:	f0 e0       	ldi	r31, 0x00	; 0
     668:	f2 d0       	rcall	.+484    	; 0x84e <__fp_powser>
     66a:	24 d1       	rcall	.+584    	; 0x8b4 <__fp_round>
     66c:	2f 91       	pop	r18
     66e:	3f 91       	pop	r19
     670:	4f 91       	pop	r20
     672:	5f 91       	pop	r21
     674:	6c d1       	rcall	.+728    	; 0x94e <__mulsf3x>
     676:	dd 23       	and	r29, r29
     678:	49 f0       	breq	.+18     	; 0x68c <atan+0x4c>
     67a:	90 58       	subi	r25, 0x80	; 128
     67c:	a2 ea       	ldi	r26, 0xA2	; 162
     67e:	2a ed       	ldi	r18, 0xDA	; 218
     680:	3f e0       	ldi	r19, 0x0F	; 15
     682:	49 ec       	ldi	r20, 0xC9	; 201
     684:	5f e3       	ldi	r21, 0x3F	; 63
     686:	d0 78       	andi	r29, 0x80	; 128
     688:	5d 27       	eor	r21, r29
     68a:	cd d1       	rcall	.+922    	; 0xa26 <__addsf3x>
     68c:	df 91       	pop	r29
     68e:	12 c1       	rjmp	.+548    	; 0x8b4 <__fp_round>

00000690 <__divsf3>:
     690:	0c d0       	rcall	.+24     	; 0x6aa <__divsf3x>
     692:	10 c1       	rjmp	.+544    	; 0x8b4 <__fp_round>
     694:	08 d1       	rcall	.+528    	; 0x8a6 <__fp_pscB>
     696:	40 f0       	brcs	.+16     	; 0x6a8 <__divsf3+0x18>
     698:	ff d0       	rcall	.+510    	; 0x898 <__fp_pscA>
     69a:	30 f0       	brcs	.+12     	; 0x6a8 <__divsf3+0x18>
     69c:	21 f4       	brne	.+8      	; 0x6a6 <__divsf3+0x16>
     69e:	5f 3f       	cpi	r21, 0xFF	; 255
     6a0:	19 f0       	breq	.+6      	; 0x6a8 <__divsf3+0x18>
     6a2:	cc c0       	rjmp	.+408    	; 0x83c <__fp_inf>
     6a4:	51 11       	cpse	r21, r1
     6a6:	3a c1       	rjmp	.+628    	; 0x91c <__fp_szero>
     6a8:	cf c0       	rjmp	.+414    	; 0x848 <__fp_nan>

000006aa <__divsf3x>:
     6aa:	15 d1       	rcall	.+554    	; 0x8d6 <__fp_split3>
     6ac:	98 f3       	brcs	.-26     	; 0x694 <__divsf3+0x4>

000006ae <__divsf3_pse>:
     6ae:	99 23       	and	r25, r25
     6b0:	c9 f3       	breq	.-14     	; 0x6a4 <__divsf3+0x14>
     6b2:	55 23       	and	r21, r21
     6b4:	b1 f3       	breq	.-20     	; 0x6a2 <__divsf3+0x12>
     6b6:	95 1b       	sub	r25, r21
     6b8:	55 0b       	sbc	r21, r21
     6ba:	bb 27       	eor	r27, r27
     6bc:	aa 27       	eor	r26, r26
     6be:	62 17       	cp	r22, r18
     6c0:	73 07       	cpc	r23, r19
     6c2:	84 07       	cpc	r24, r20
     6c4:	38 f0       	brcs	.+14     	; 0x6d4 <__divsf3_pse+0x26>
     6c6:	9f 5f       	subi	r25, 0xFF	; 255
     6c8:	5f 4f       	sbci	r21, 0xFF	; 255
     6ca:	22 0f       	add	r18, r18
     6cc:	33 1f       	adc	r19, r19
     6ce:	44 1f       	adc	r20, r20
     6d0:	aa 1f       	adc	r26, r26
     6d2:	a9 f3       	breq	.-22     	; 0x6be <__divsf3_pse+0x10>
     6d4:	33 d0       	rcall	.+102    	; 0x73c <__divsf3_pse+0x8e>
     6d6:	0e 2e       	mov	r0, r30
     6d8:	3a f0       	brmi	.+14     	; 0x6e8 <__divsf3_pse+0x3a>
     6da:	e0 e8       	ldi	r30, 0x80	; 128
     6dc:	30 d0       	rcall	.+96     	; 0x73e <__divsf3_pse+0x90>
     6de:	91 50       	subi	r25, 0x01	; 1
     6e0:	50 40       	sbci	r21, 0x00	; 0
     6e2:	e6 95       	lsr	r30
     6e4:	00 1c       	adc	r0, r0
     6e6:	ca f7       	brpl	.-14     	; 0x6da <__divsf3_pse+0x2c>
     6e8:	29 d0       	rcall	.+82     	; 0x73c <__divsf3_pse+0x8e>
     6ea:	fe 2f       	mov	r31, r30
     6ec:	27 d0       	rcall	.+78     	; 0x73c <__divsf3_pse+0x8e>
     6ee:	66 0f       	add	r22, r22
     6f0:	77 1f       	adc	r23, r23
     6f2:	88 1f       	adc	r24, r24
     6f4:	bb 1f       	adc	r27, r27
     6f6:	26 17       	cp	r18, r22
     6f8:	37 07       	cpc	r19, r23
     6fa:	48 07       	cpc	r20, r24
     6fc:	ab 07       	cpc	r26, r27
     6fe:	b0 e8       	ldi	r27, 0x80	; 128
     700:	09 f0       	breq	.+2      	; 0x704 <__divsf3_pse+0x56>
     702:	bb 0b       	sbc	r27, r27
     704:	80 2d       	mov	r24, r0
     706:	bf 01       	movw	r22, r30
     708:	ff 27       	eor	r31, r31
     70a:	93 58       	subi	r25, 0x83	; 131
     70c:	5f 4f       	sbci	r21, 0xFF	; 255
     70e:	2a f0       	brmi	.+10     	; 0x71a <__divsf3_pse+0x6c>
     710:	9e 3f       	cpi	r25, 0xFE	; 254
     712:	51 05       	cpc	r21, r1
     714:	68 f0       	brcs	.+26     	; 0x730 <__divsf3_pse+0x82>
     716:	92 c0       	rjmp	.+292    	; 0x83c <__fp_inf>
     718:	01 c1       	rjmp	.+514    	; 0x91c <__fp_szero>
     71a:	5f 3f       	cpi	r21, 0xFF	; 255
     71c:	ec f3       	brlt	.-6      	; 0x718 <__divsf3_pse+0x6a>
     71e:	98 3e       	cpi	r25, 0xE8	; 232
     720:	dc f3       	brlt	.-10     	; 0x718 <__divsf3_pse+0x6a>
     722:	86 95       	lsr	r24
     724:	77 95       	ror	r23
     726:	67 95       	ror	r22
     728:	b7 95       	ror	r27
     72a:	f7 95       	ror	r31
     72c:	9f 5f       	subi	r25, 0xFF	; 255
     72e:	c9 f7       	brne	.-14     	; 0x722 <__divsf3_pse+0x74>
     730:	88 0f       	add	r24, r24
     732:	91 1d       	adc	r25, r1
     734:	96 95       	lsr	r25
     736:	87 95       	ror	r24
     738:	97 f9       	bld	r25, 7
     73a:	08 95       	ret
     73c:	e1 e0       	ldi	r30, 0x01	; 1
     73e:	66 0f       	add	r22, r22
     740:	77 1f       	adc	r23, r23
     742:	88 1f       	adc	r24, r24
     744:	bb 1f       	adc	r27, r27
     746:	62 17       	cp	r22, r18
     748:	73 07       	cpc	r23, r19
     74a:	84 07       	cpc	r24, r20
     74c:	ba 07       	cpc	r27, r26
     74e:	20 f0       	brcs	.+8      	; 0x758 <__divsf3_pse+0xaa>
     750:	62 1b       	sub	r22, r18
     752:	73 0b       	sbc	r23, r19
     754:	84 0b       	sbc	r24, r20
     756:	ba 0b       	sbc	r27, r26
     758:	ee 1f       	adc	r30, r30
     75a:	88 f7       	brcc	.-30     	; 0x73e <__divsf3_pse+0x90>
     75c:	e0 95       	com	r30
     75e:	08 95       	ret

00000760 <__fixsfsi>:
     760:	04 d0       	rcall	.+8      	; 0x76a <__fixunssfsi>
     762:	68 94       	set
     764:	b1 11       	cpse	r27, r1
     766:	da c0       	rjmp	.+436    	; 0x91c <__fp_szero>
     768:	08 95       	ret

0000076a <__fixunssfsi>:
     76a:	bd d0       	rcall	.+378    	; 0x8e6 <__fp_splitA>
     76c:	88 f0       	brcs	.+34     	; 0x790 <__fixunssfsi+0x26>
     76e:	9f 57       	subi	r25, 0x7F	; 127
     770:	90 f0       	brcs	.+36     	; 0x796 <__fixunssfsi+0x2c>
     772:	b9 2f       	mov	r27, r25
     774:	99 27       	eor	r25, r25
     776:	b7 51       	subi	r27, 0x17	; 23
     778:	a0 f0       	brcs	.+40     	; 0x7a2 <__fixunssfsi+0x38>
     77a:	d1 f0       	breq	.+52     	; 0x7b0 <__fixunssfsi+0x46>
     77c:	66 0f       	add	r22, r22
     77e:	77 1f       	adc	r23, r23
     780:	88 1f       	adc	r24, r24
     782:	99 1f       	adc	r25, r25
     784:	1a f0       	brmi	.+6      	; 0x78c <__fixunssfsi+0x22>
     786:	ba 95       	dec	r27
     788:	c9 f7       	brne	.-14     	; 0x77c <__fixunssfsi+0x12>
     78a:	12 c0       	rjmp	.+36     	; 0x7b0 <__fixunssfsi+0x46>
     78c:	b1 30       	cpi	r27, 0x01	; 1
     78e:	81 f0       	breq	.+32     	; 0x7b0 <__fixunssfsi+0x46>
     790:	c4 d0       	rcall	.+392    	; 0x91a <__fp_zero>
     792:	b1 e0       	ldi	r27, 0x01	; 1
     794:	08 95       	ret
     796:	c1 c0       	rjmp	.+386    	; 0x91a <__fp_zero>
     798:	67 2f       	mov	r22, r23
     79a:	78 2f       	mov	r23, r24
     79c:	88 27       	eor	r24, r24
     79e:	b8 5f       	subi	r27, 0xF8	; 248
     7a0:	39 f0       	breq	.+14     	; 0x7b0 <__fixunssfsi+0x46>
     7a2:	b9 3f       	cpi	r27, 0xF9	; 249
     7a4:	cc f3       	brlt	.-14     	; 0x798 <__fixunssfsi+0x2e>
     7a6:	86 95       	lsr	r24
     7a8:	77 95       	ror	r23
     7aa:	67 95       	ror	r22
     7ac:	b3 95       	inc	r27
     7ae:	d9 f7       	brne	.-10     	; 0x7a6 <__fixunssfsi+0x3c>
     7b0:	3e f4       	brtc	.+14     	; 0x7c0 <__fixunssfsi+0x56>
     7b2:	90 95       	com	r25
     7b4:	80 95       	com	r24
     7b6:	70 95       	com	r23
     7b8:	61 95       	neg	r22
     7ba:	7f 4f       	sbci	r23, 0xFF	; 255
     7bc:	8f 4f       	sbci	r24, 0xFF	; 255
     7be:	9f 4f       	sbci	r25, 0xFF	; 255
     7c0:	08 95       	ret

000007c2 <__floatunsisf>:
     7c2:	e8 94       	clt
     7c4:	09 c0       	rjmp	.+18     	; 0x7d8 <__floatsisf+0x12>

000007c6 <__floatsisf>:
     7c6:	97 fb       	bst	r25, 7
     7c8:	3e f4       	brtc	.+14     	; 0x7d8 <__floatsisf+0x12>
     7ca:	90 95       	com	r25
     7cc:	80 95       	com	r24
     7ce:	70 95       	com	r23
     7d0:	61 95       	neg	r22
     7d2:	7f 4f       	sbci	r23, 0xFF	; 255
     7d4:	8f 4f       	sbci	r24, 0xFF	; 255
     7d6:	9f 4f       	sbci	r25, 0xFF	; 255
     7d8:	99 23       	and	r25, r25
     7da:	a9 f0       	breq	.+42     	; 0x806 <__floatsisf+0x40>
     7dc:	f9 2f       	mov	r31, r25
     7de:	96 e9       	ldi	r25, 0x96	; 150
     7e0:	bb 27       	eor	r27, r27
     7e2:	93 95       	inc	r25
     7e4:	f6 95       	lsr	r31
     7e6:	87 95       	ror	r24
     7e8:	77 95       	ror	r23
     7ea:	67 95       	ror	r22
     7ec:	b7 95       	ror	r27
     7ee:	f1 11       	cpse	r31, r1
     7f0:	f8 cf       	rjmp	.-16     	; 0x7e2 <__floatsisf+0x1c>
     7f2:	fa f4       	brpl	.+62     	; 0x832 <__floatsisf+0x6c>
     7f4:	bb 0f       	add	r27, r27
     7f6:	11 f4       	brne	.+4      	; 0x7fc <__floatsisf+0x36>
     7f8:	60 ff       	sbrs	r22, 0
     7fa:	1b c0       	rjmp	.+54     	; 0x832 <__floatsisf+0x6c>
     7fc:	6f 5f       	subi	r22, 0xFF	; 255
     7fe:	7f 4f       	sbci	r23, 0xFF	; 255
     800:	8f 4f       	sbci	r24, 0xFF	; 255
     802:	9f 4f       	sbci	r25, 0xFF	; 255
     804:	16 c0       	rjmp	.+44     	; 0x832 <__floatsisf+0x6c>
     806:	88 23       	and	r24, r24
     808:	11 f0       	breq	.+4      	; 0x80e <__floatsisf+0x48>
     80a:	96 e9       	ldi	r25, 0x96	; 150
     80c:	11 c0       	rjmp	.+34     	; 0x830 <__floatsisf+0x6a>
     80e:	77 23       	and	r23, r23
     810:	21 f0       	breq	.+8      	; 0x81a <__floatsisf+0x54>
     812:	9e e8       	ldi	r25, 0x8E	; 142
     814:	87 2f       	mov	r24, r23
     816:	76 2f       	mov	r23, r22
     818:	05 c0       	rjmp	.+10     	; 0x824 <__floatsisf+0x5e>
     81a:	66 23       	and	r22, r22
     81c:	71 f0       	breq	.+28     	; 0x83a <__floatsisf+0x74>
     81e:	96 e8       	ldi	r25, 0x86	; 134
     820:	86 2f       	mov	r24, r22
     822:	70 e0       	ldi	r23, 0x00	; 0
     824:	60 e0       	ldi	r22, 0x00	; 0
     826:	2a f0       	brmi	.+10     	; 0x832 <__floatsisf+0x6c>
     828:	9a 95       	dec	r25
     82a:	66 0f       	add	r22, r22
     82c:	77 1f       	adc	r23, r23
     82e:	88 1f       	adc	r24, r24
     830:	da f7       	brpl	.-10     	; 0x828 <__floatsisf+0x62>
     832:	88 0f       	add	r24, r24
     834:	96 95       	lsr	r25
     836:	87 95       	ror	r24
     838:	97 f9       	bld	r25, 7
     83a:	08 95       	ret

0000083c <__fp_inf>:
     83c:	97 f9       	bld	r25, 7
     83e:	9f 67       	ori	r25, 0x7F	; 127
     840:	80 e8       	ldi	r24, 0x80	; 128
     842:	70 e0       	ldi	r23, 0x00	; 0
     844:	60 e0       	ldi	r22, 0x00	; 0
     846:	08 95       	ret

00000848 <__fp_nan>:
     848:	9f ef       	ldi	r25, 0xFF	; 255
     84a:	80 ec       	ldi	r24, 0xC0	; 192
     84c:	08 95       	ret

0000084e <__fp_powser>:
     84e:	df 93       	push	r29
     850:	cf 93       	push	r28
     852:	1f 93       	push	r17
     854:	0f 93       	push	r16
     856:	ff 92       	push	r15
     858:	ef 92       	push	r14
     85a:	df 92       	push	r13
     85c:	7b 01       	movw	r14, r22
     85e:	8c 01       	movw	r16, r24
     860:	68 94       	set
     862:	05 c0       	rjmp	.+10     	; 0x86e <__fp_powser+0x20>
     864:	da 2e       	mov	r13, r26
     866:	ef 01       	movw	r28, r30
     868:	72 d0       	rcall	.+228    	; 0x94e <__mulsf3x>
     86a:	fe 01       	movw	r30, r28
     86c:	e8 94       	clt
     86e:	a5 91       	lpm	r26, Z+
     870:	25 91       	lpm	r18, Z+
     872:	35 91       	lpm	r19, Z+
     874:	45 91       	lpm	r20, Z+
     876:	55 91       	lpm	r21, Z+
     878:	ae f3       	brts	.-22     	; 0x864 <__fp_powser+0x16>
     87a:	ef 01       	movw	r28, r30
     87c:	d4 d0       	rcall	.+424    	; 0xa26 <__addsf3x>
     87e:	fe 01       	movw	r30, r28
     880:	97 01       	movw	r18, r14
     882:	a8 01       	movw	r20, r16
     884:	da 94       	dec	r13
     886:	79 f7       	brne	.-34     	; 0x866 <__fp_powser+0x18>
     888:	df 90       	pop	r13
     88a:	ef 90       	pop	r14
     88c:	ff 90       	pop	r15
     88e:	0f 91       	pop	r16
     890:	1f 91       	pop	r17
     892:	cf 91       	pop	r28
     894:	df 91       	pop	r29
     896:	08 95       	ret

00000898 <__fp_pscA>:
     898:	00 24       	eor	r0, r0
     89a:	0a 94       	dec	r0
     89c:	16 16       	cp	r1, r22
     89e:	17 06       	cpc	r1, r23
     8a0:	18 06       	cpc	r1, r24
     8a2:	09 06       	cpc	r0, r25
     8a4:	08 95       	ret

000008a6 <__fp_pscB>:
     8a6:	00 24       	eor	r0, r0
     8a8:	0a 94       	dec	r0
     8aa:	12 16       	cp	r1, r18
     8ac:	13 06       	cpc	r1, r19
     8ae:	14 06       	cpc	r1, r20
     8b0:	05 06       	cpc	r0, r21
     8b2:	08 95       	ret

000008b4 <__fp_round>:
     8b4:	09 2e       	mov	r0, r25
     8b6:	03 94       	inc	r0
     8b8:	00 0c       	add	r0, r0
     8ba:	11 f4       	brne	.+4      	; 0x8c0 <__fp_round+0xc>
     8bc:	88 23       	and	r24, r24
     8be:	52 f0       	brmi	.+20     	; 0x8d4 <__fp_round+0x20>
     8c0:	bb 0f       	add	r27, r27
     8c2:	40 f4       	brcc	.+16     	; 0x8d4 <__fp_round+0x20>
     8c4:	bf 2b       	or	r27, r31
     8c6:	11 f4       	brne	.+4      	; 0x8cc <__fp_round+0x18>
     8c8:	60 ff       	sbrs	r22, 0
     8ca:	04 c0       	rjmp	.+8      	; 0x8d4 <__fp_round+0x20>
     8cc:	6f 5f       	subi	r22, 0xFF	; 255
     8ce:	7f 4f       	sbci	r23, 0xFF	; 255
     8d0:	8f 4f       	sbci	r24, 0xFF	; 255
     8d2:	9f 4f       	sbci	r25, 0xFF	; 255
     8d4:	08 95       	ret

000008d6 <__fp_split3>:
     8d6:	57 fd       	sbrc	r21, 7
     8d8:	90 58       	subi	r25, 0x80	; 128
     8da:	44 0f       	add	r20, r20
     8dc:	55 1f       	adc	r21, r21
     8de:	59 f0       	breq	.+22     	; 0x8f6 <__fp_splitA+0x10>
     8e0:	5f 3f       	cpi	r21, 0xFF	; 255
     8e2:	71 f0       	breq	.+28     	; 0x900 <__fp_splitA+0x1a>
     8e4:	47 95       	ror	r20

000008e6 <__fp_splitA>:
     8e6:	88 0f       	add	r24, r24
     8e8:	97 fb       	bst	r25, 7
     8ea:	99 1f       	adc	r25, r25
     8ec:	61 f0       	breq	.+24     	; 0x906 <__fp_splitA+0x20>
     8ee:	9f 3f       	cpi	r25, 0xFF	; 255
     8f0:	79 f0       	breq	.+30     	; 0x910 <__fp_splitA+0x2a>
     8f2:	87 95       	ror	r24
     8f4:	08 95       	ret
     8f6:	12 16       	cp	r1, r18
     8f8:	13 06       	cpc	r1, r19
     8fa:	14 06       	cpc	r1, r20
     8fc:	55 1f       	adc	r21, r21
     8fe:	f2 cf       	rjmp	.-28     	; 0x8e4 <__fp_split3+0xe>
     900:	46 95       	lsr	r20
     902:	f1 df       	rcall	.-30     	; 0x8e6 <__fp_splitA>
     904:	08 c0       	rjmp	.+16     	; 0x916 <__fp_splitA+0x30>
     906:	16 16       	cp	r1, r22
     908:	17 06       	cpc	r1, r23
     90a:	18 06       	cpc	r1, r24
     90c:	99 1f       	adc	r25, r25
     90e:	f1 cf       	rjmp	.-30     	; 0x8f2 <__fp_splitA+0xc>
     910:	86 95       	lsr	r24
     912:	71 05       	cpc	r23, r1
     914:	61 05       	cpc	r22, r1
     916:	08 94       	sec
     918:	08 95       	ret

0000091a <__fp_zero>:
     91a:	e8 94       	clt

0000091c <__fp_szero>:
     91c:	bb 27       	eor	r27, r27
     91e:	66 27       	eor	r22, r22
     920:	77 27       	eor	r23, r23
     922:	cb 01       	movw	r24, r22
     924:	97 f9       	bld	r25, 7
     926:	08 95       	ret

00000928 <inverse>:
     928:	9b 01       	movw	r18, r22
     92a:	ac 01       	movw	r20, r24
     92c:	60 e0       	ldi	r22, 0x00	; 0
     92e:	70 e0       	ldi	r23, 0x00	; 0
     930:	80 e8       	ldi	r24, 0x80	; 128
     932:	9f e3       	ldi	r25, 0x3F	; 63
     934:	ad ce       	rjmp	.-678    	; 0x690 <__divsf3>

00000936 <__mulsf3>:
     936:	0b d0       	rcall	.+22     	; 0x94e <__mulsf3x>
     938:	bd cf       	rjmp	.-134    	; 0x8b4 <__fp_round>
     93a:	ae df       	rcall	.-164    	; 0x898 <__fp_pscA>
     93c:	28 f0       	brcs	.+10     	; 0x948 <__mulsf3+0x12>
     93e:	b3 df       	rcall	.-154    	; 0x8a6 <__fp_pscB>
     940:	18 f0       	brcs	.+6      	; 0x948 <__mulsf3+0x12>
     942:	95 23       	and	r25, r21
     944:	09 f0       	breq	.+2      	; 0x948 <__mulsf3+0x12>
     946:	7a cf       	rjmp	.-268    	; 0x83c <__fp_inf>
     948:	7f cf       	rjmp	.-258    	; 0x848 <__fp_nan>
     94a:	11 24       	eor	r1, r1
     94c:	e7 cf       	rjmp	.-50     	; 0x91c <__fp_szero>

0000094e <__mulsf3x>:
     94e:	c3 df       	rcall	.-122    	; 0x8d6 <__fp_split3>
     950:	a0 f3       	brcs	.-24     	; 0x93a <__mulsf3+0x4>

00000952 <__mulsf3_pse>:
     952:	95 9f       	mul	r25, r21
     954:	d1 f3       	breq	.-12     	; 0x94a <__mulsf3+0x14>
     956:	95 0f       	add	r25, r21
     958:	50 e0       	ldi	r21, 0x00	; 0
     95a:	55 1f       	adc	r21, r21
     95c:	62 9f       	mul	r22, r18
     95e:	f0 01       	movw	r30, r0
     960:	72 9f       	mul	r23, r18
     962:	bb 27       	eor	r27, r27
     964:	f0 0d       	add	r31, r0
     966:	b1 1d       	adc	r27, r1
     968:	63 9f       	mul	r22, r19
     96a:	aa 27       	eor	r26, r26
     96c:	f0 0d       	add	r31, r0
     96e:	b1 1d       	adc	r27, r1
     970:	aa 1f       	adc	r26, r26
     972:	64 9f       	mul	r22, r20
     974:	66 27       	eor	r22, r22
     976:	b0 0d       	add	r27, r0
     978:	a1 1d       	adc	r26, r1
     97a:	66 1f       	adc	r22, r22
     97c:	82 9f       	mul	r24, r18
     97e:	22 27       	eor	r18, r18
     980:	b0 0d       	add	r27, r0
     982:	a1 1d       	adc	r26, r1
     984:	62 1f       	adc	r22, r18
     986:	73 9f       	mul	r23, r19
     988:	b0 0d       	add	r27, r0
     98a:	a1 1d       	adc	r26, r1
     98c:	62 1f       	adc	r22, r18
     98e:	83 9f       	mul	r24, r19
     990:	a0 0d       	add	r26, r0
     992:	61 1d       	adc	r22, r1
     994:	22 1f       	adc	r18, r18
     996:	74 9f       	mul	r23, r20
     998:	33 27       	eor	r19, r19
     99a:	a0 0d       	add	r26, r0
     99c:	61 1d       	adc	r22, r1
     99e:	23 1f       	adc	r18, r19
     9a0:	84 9f       	mul	r24, r20
     9a2:	60 0d       	add	r22, r0
     9a4:	21 1d       	adc	r18, r1
     9a6:	82 2f       	mov	r24, r18
     9a8:	76 2f       	mov	r23, r22
     9aa:	6a 2f       	mov	r22, r26
     9ac:	11 24       	eor	r1, r1
     9ae:	9f 57       	subi	r25, 0x7F	; 127
     9b0:	50 40       	sbci	r21, 0x00	; 0
     9b2:	8a f0       	brmi	.+34     	; 0x9d6 <__mulsf3_pse+0x84>
     9b4:	e1 f0       	breq	.+56     	; 0x9ee <__mulsf3_pse+0x9c>
     9b6:	88 23       	and	r24, r24
     9b8:	4a f0       	brmi	.+18     	; 0x9cc <__mulsf3_pse+0x7a>
     9ba:	ee 0f       	add	r30, r30
     9bc:	ff 1f       	adc	r31, r31
     9be:	bb 1f       	adc	r27, r27
     9c0:	66 1f       	adc	r22, r22
     9c2:	77 1f       	adc	r23, r23
     9c4:	88 1f       	adc	r24, r24
     9c6:	91 50       	subi	r25, 0x01	; 1
     9c8:	50 40       	sbci	r21, 0x00	; 0
     9ca:	a9 f7       	brne	.-22     	; 0x9b6 <__mulsf3_pse+0x64>
     9cc:	9e 3f       	cpi	r25, 0xFE	; 254
     9ce:	51 05       	cpc	r21, r1
     9d0:	70 f0       	brcs	.+28     	; 0x9ee <__mulsf3_pse+0x9c>
     9d2:	34 cf       	rjmp	.-408    	; 0x83c <__fp_inf>
     9d4:	a3 cf       	rjmp	.-186    	; 0x91c <__fp_szero>
     9d6:	5f 3f       	cpi	r21, 0xFF	; 255
     9d8:	ec f3       	brlt	.-6      	; 0x9d4 <__mulsf3_pse+0x82>
     9da:	98 3e       	cpi	r25, 0xE8	; 232
     9dc:	dc f3       	brlt	.-10     	; 0x9d4 <__mulsf3_pse+0x82>
     9de:	86 95       	lsr	r24
     9e0:	77 95       	ror	r23
     9e2:	67 95       	ror	r22
     9e4:	b7 95       	ror	r27
     9e6:	f7 95       	ror	r31
     9e8:	e7 95       	ror	r30
     9ea:	9f 5f       	subi	r25, 0xFF	; 255
     9ec:	c1 f7       	brne	.-16     	; 0x9de <__mulsf3_pse+0x8c>
     9ee:	fe 2b       	or	r31, r30
     9f0:	88 0f       	add	r24, r24
     9f2:	91 1d       	adc	r25, r1
     9f4:	96 95       	lsr	r25
     9f6:	87 95       	ror	r24
     9f8:	97 f9       	bld	r25, 7
     9fa:	08 95       	ret

000009fc <square>:
     9fc:	9b 01       	movw	r18, r22
     9fe:	ac 01       	movw	r20, r24
     a00:	9a cf       	rjmp	.-204    	; 0x936 <__mulsf3>

00000a02 <__subsf3>:
     a02:	50 58       	subi	r21, 0x80	; 128

00000a04 <__addsf3>:
     a04:	bb 27       	eor	r27, r27
     a06:	aa 27       	eor	r26, r26
     a08:	0e d0       	rcall	.+28     	; 0xa26 <__addsf3x>
     a0a:	54 cf       	rjmp	.-344    	; 0x8b4 <__fp_round>
     a0c:	45 df       	rcall	.-374    	; 0x898 <__fp_pscA>
     a0e:	30 f0       	brcs	.+12     	; 0xa1c <__addsf3+0x18>
     a10:	4a df       	rcall	.-364    	; 0x8a6 <__fp_pscB>
     a12:	20 f0       	brcs	.+8      	; 0xa1c <__addsf3+0x18>
     a14:	31 f4       	brne	.+12     	; 0xa22 <__addsf3+0x1e>
     a16:	9f 3f       	cpi	r25, 0xFF	; 255
     a18:	11 f4       	brne	.+4      	; 0xa1e <__addsf3+0x1a>
     a1a:	1e f4       	brtc	.+6      	; 0xa22 <__addsf3+0x1e>
     a1c:	15 cf       	rjmp	.-470    	; 0x848 <__fp_nan>
     a1e:	0e f4       	brtc	.+2      	; 0xa22 <__addsf3+0x1e>
     a20:	e0 95       	com	r30
     a22:	e7 fb       	bst	r30, 7
     a24:	0b cf       	rjmp	.-490    	; 0x83c <__fp_inf>

00000a26 <__addsf3x>:
     a26:	e9 2f       	mov	r30, r25
     a28:	56 df       	rcall	.-340    	; 0x8d6 <__fp_split3>
     a2a:	80 f3       	brcs	.-32     	; 0xa0c <__addsf3+0x8>
     a2c:	ba 17       	cp	r27, r26
     a2e:	62 07       	cpc	r22, r18
     a30:	73 07       	cpc	r23, r19
     a32:	84 07       	cpc	r24, r20
     a34:	95 07       	cpc	r25, r21
     a36:	18 f0       	brcs	.+6      	; 0xa3e <__addsf3x+0x18>
     a38:	71 f4       	brne	.+28     	; 0xa56 <__addsf3x+0x30>
     a3a:	9e f5       	brtc	.+102    	; 0xaa2 <__addsf3x+0x7c>
     a3c:	6e cf       	rjmp	.-292    	; 0x91a <__fp_zero>
     a3e:	0e f4       	brtc	.+2      	; 0xa42 <__addsf3x+0x1c>
     a40:	e0 95       	com	r30
     a42:	0b 2e       	mov	r0, r27
     a44:	ba 2f       	mov	r27, r26
     a46:	a0 2d       	mov	r26, r0
     a48:	0b 01       	movw	r0, r22
     a4a:	b9 01       	movw	r22, r18
     a4c:	90 01       	movw	r18, r0
     a4e:	0c 01       	movw	r0, r24
     a50:	ca 01       	movw	r24, r20
     a52:	a0 01       	movw	r20, r0
     a54:	11 24       	eor	r1, r1
     a56:	ff 27       	eor	r31, r31
     a58:	59 1b       	sub	r21, r25
     a5a:	99 f0       	breq	.+38     	; 0xa82 <__addsf3x+0x5c>
     a5c:	59 3f       	cpi	r21, 0xF9	; 249
     a5e:	50 f4       	brcc	.+20     	; 0xa74 <__addsf3x+0x4e>
     a60:	50 3e       	cpi	r21, 0xE0	; 224
     a62:	68 f1       	brcs	.+90     	; 0xabe <__addsf3x+0x98>
     a64:	1a 16       	cp	r1, r26
     a66:	f0 40       	sbci	r31, 0x00	; 0
     a68:	a2 2f       	mov	r26, r18
     a6a:	23 2f       	mov	r18, r19
     a6c:	34 2f       	mov	r19, r20
     a6e:	44 27       	eor	r20, r20
     a70:	58 5f       	subi	r21, 0xF8	; 248
     a72:	f3 cf       	rjmp	.-26     	; 0xa5a <__addsf3x+0x34>
     a74:	46 95       	lsr	r20
     a76:	37 95       	ror	r19
     a78:	27 95       	ror	r18
     a7a:	a7 95       	ror	r26
     a7c:	f0 40       	sbci	r31, 0x00	; 0
     a7e:	53 95       	inc	r21
     a80:	c9 f7       	brne	.-14     	; 0xa74 <__addsf3x+0x4e>
     a82:	7e f4       	brtc	.+30     	; 0xaa2 <__addsf3x+0x7c>
     a84:	1f 16       	cp	r1, r31
     a86:	ba 0b       	sbc	r27, r26
     a88:	62 0b       	sbc	r22, r18
     a8a:	73 0b       	sbc	r23, r19
     a8c:	84 0b       	sbc	r24, r20
     a8e:	ba f0       	brmi	.+46     	; 0xabe <__addsf3x+0x98>
     a90:	91 50       	subi	r25, 0x01	; 1
     a92:	a1 f0       	breq	.+40     	; 0xabc <__addsf3x+0x96>
     a94:	ff 0f       	add	r31, r31
     a96:	bb 1f       	adc	r27, r27
     a98:	66 1f       	adc	r22, r22
     a9a:	77 1f       	adc	r23, r23
     a9c:	88 1f       	adc	r24, r24
     a9e:	c2 f7       	brpl	.-16     	; 0xa90 <__addsf3x+0x6a>
     aa0:	0e c0       	rjmp	.+28     	; 0xabe <__addsf3x+0x98>
     aa2:	ba 0f       	add	r27, r26
     aa4:	62 1f       	adc	r22, r18
     aa6:	73 1f       	adc	r23, r19
     aa8:	84 1f       	adc	r24, r20
     aaa:	48 f4       	brcc	.+18     	; 0xabe <__addsf3x+0x98>
     aac:	87 95       	ror	r24
     aae:	77 95       	ror	r23
     ab0:	67 95       	ror	r22
     ab2:	b7 95       	ror	r27
     ab4:	f7 95       	ror	r31
     ab6:	9e 3f       	cpi	r25, 0xFE	; 254
     ab8:	08 f0       	brcs	.+2      	; 0xabc <__addsf3x+0x96>
     aba:	b3 cf       	rjmp	.-154    	; 0xa22 <__addsf3+0x1e>
     abc:	93 95       	inc	r25
     abe:	88 0f       	add	r24, r24
     ac0:	08 f0       	brcs	.+2      	; 0xac4 <__addsf3x+0x9e>
     ac2:	99 27       	eor	r25, r25
     ac4:	ee 0f       	add	r30, r30
     ac6:	97 95       	ror	r25
     ac8:	87 95       	ror	r24
     aca:	08 95       	ret

00000acc <fdevopen>:
     acc:	0f 93       	push	r16
     ace:	1f 93       	push	r17
     ad0:	cf 93       	push	r28
     ad2:	df 93       	push	r29
     ad4:	00 97       	sbiw	r24, 0x00	; 0
     ad6:	31 f4       	brne	.+12     	; 0xae4 <fdevopen+0x18>
     ad8:	61 15       	cp	r22, r1
     ada:	71 05       	cpc	r23, r1
     adc:	19 f4       	brne	.+6      	; 0xae4 <fdevopen+0x18>
     ade:	80 e0       	ldi	r24, 0x00	; 0
     ae0:	90 e0       	ldi	r25, 0x00	; 0
     ae2:	39 c0       	rjmp	.+114    	; 0xb56 <fdevopen+0x8a>
     ae4:	8b 01       	movw	r16, r22
     ae6:	ec 01       	movw	r28, r24
     ae8:	6e e0       	ldi	r22, 0x0E	; 14
     aea:	70 e0       	ldi	r23, 0x00	; 0
     aec:	81 e0       	ldi	r24, 0x01	; 1
     aee:	90 e0       	ldi	r25, 0x00	; 0
     af0:	47 d2       	rcall	.+1166   	; 0xf80 <calloc>
     af2:	fc 01       	movw	r30, r24
     af4:	89 2b       	or	r24, r25
     af6:	99 f3       	breq	.-26     	; 0xade <fdevopen+0x12>
     af8:	80 e8       	ldi	r24, 0x80	; 128
     afa:	83 83       	std	Z+3, r24	; 0x03
     afc:	01 15       	cp	r16, r1
     afe:	11 05       	cpc	r17, r1
     b00:	71 f0       	breq	.+28     	; 0xb1e <fdevopen+0x52>
     b02:	13 87       	std	Z+11, r17	; 0x0b
     b04:	02 87       	std	Z+10, r16	; 0x0a
     b06:	81 e8       	ldi	r24, 0x81	; 129
     b08:	83 83       	std	Z+3, r24	; 0x03
     b0a:	80 91 70 03 	lds	r24, 0x0370	; 0x800370 <__iob>
     b0e:	90 91 71 03 	lds	r25, 0x0371	; 0x800371 <__iob+0x1>
     b12:	89 2b       	or	r24, r25
     b14:	21 f4       	brne	.+8      	; 0xb1e <fdevopen+0x52>
     b16:	f0 93 71 03 	sts	0x0371, r31	; 0x800371 <__iob+0x1>
     b1a:	e0 93 70 03 	sts	0x0370, r30	; 0x800370 <__iob>
     b1e:	20 97       	sbiw	r28, 0x00	; 0
     b20:	c9 f0       	breq	.+50     	; 0xb54 <fdevopen+0x88>
     b22:	d1 87       	std	Z+9, r29	; 0x09
     b24:	c0 87       	std	Z+8, r28	; 0x08
     b26:	83 81       	ldd	r24, Z+3	; 0x03
     b28:	82 60       	ori	r24, 0x02	; 2
     b2a:	83 83       	std	Z+3, r24	; 0x03
     b2c:	80 91 72 03 	lds	r24, 0x0372	; 0x800372 <__iob+0x2>
     b30:	90 91 73 03 	lds	r25, 0x0373	; 0x800373 <__iob+0x3>
     b34:	89 2b       	or	r24, r25
     b36:	71 f4       	brne	.+28     	; 0xb54 <fdevopen+0x88>
     b38:	f0 93 73 03 	sts	0x0373, r31	; 0x800373 <__iob+0x3>
     b3c:	e0 93 72 03 	sts	0x0372, r30	; 0x800372 <__iob+0x2>
     b40:	80 91 74 03 	lds	r24, 0x0374	; 0x800374 <__iob+0x4>
     b44:	90 91 75 03 	lds	r25, 0x0375	; 0x800375 <__iob+0x5>
     b48:	89 2b       	or	r24, r25
     b4a:	21 f4       	brne	.+8      	; 0xb54 <fdevopen+0x88>
     b4c:	f0 93 75 03 	sts	0x0375, r31	; 0x800375 <__iob+0x5>
     b50:	e0 93 74 03 	sts	0x0374, r30	; 0x800374 <__iob+0x4>
     b54:	cf 01       	movw	r24, r30
     b56:	df 91       	pop	r29
     b58:	cf 91       	pop	r28
     b5a:	1f 91       	pop	r17
     b5c:	0f 91       	pop	r16
     b5e:	08 95       	ret

00000b60 <printf>:
     b60:	cf 93       	push	r28
     b62:	df 93       	push	r29
     b64:	cd b7       	in	r28, 0x3d	; 61
     b66:	de b7       	in	r29, 0x3e	; 62
     b68:	ae 01       	movw	r20, r28
     b6a:	4a 5f       	subi	r20, 0xFA	; 250
     b6c:	5f 4f       	sbci	r21, 0xFF	; 255
     b6e:	fa 01       	movw	r30, r20
     b70:	61 91       	ld	r22, Z+
     b72:	71 91       	ld	r23, Z+
     b74:	af 01       	movw	r20, r30
     b76:	80 91 72 03 	lds	r24, 0x0372	; 0x800372 <__iob+0x2>
     b7a:	90 91 73 03 	lds	r25, 0x0373	; 0x800373 <__iob+0x3>
     b7e:	03 d0       	rcall	.+6      	; 0xb86 <vfprintf>
     b80:	df 91       	pop	r29
     b82:	cf 91       	pop	r28
     b84:	08 95       	ret

00000b86 <vfprintf>:
     b86:	2f 92       	push	r2
     b88:	3f 92       	push	r3
     b8a:	4f 92       	push	r4
     b8c:	5f 92       	push	r5
     b8e:	6f 92       	push	r6
     b90:	7f 92       	push	r7
     b92:	8f 92       	push	r8
     b94:	9f 92       	push	r9
     b96:	af 92       	push	r10
     b98:	bf 92       	push	r11
     b9a:	cf 92       	push	r12
     b9c:	df 92       	push	r13
     b9e:	ef 92       	push	r14
     ba0:	ff 92       	push	r15
     ba2:	0f 93       	push	r16
     ba4:	1f 93       	push	r17
     ba6:	cf 93       	push	r28
     ba8:	df 93       	push	r29
     baa:	cd b7       	in	r28, 0x3d	; 61
     bac:	de b7       	in	r29, 0x3e	; 62
     bae:	2b 97       	sbiw	r28, 0x0b	; 11
     bb0:	0f b6       	in	r0, 0x3f	; 63
     bb2:	f8 94       	cli
     bb4:	de bf       	out	0x3e, r29	; 62
     bb6:	0f be       	out	0x3f, r0	; 63
     bb8:	cd bf       	out	0x3d, r28	; 61
     bba:	6c 01       	movw	r12, r24
     bbc:	7b 01       	movw	r14, r22
     bbe:	8a 01       	movw	r16, r20
     bc0:	fc 01       	movw	r30, r24
     bc2:	17 82       	std	Z+7, r1	; 0x07
     bc4:	16 82       	std	Z+6, r1	; 0x06
     bc6:	83 81       	ldd	r24, Z+3	; 0x03
     bc8:	81 ff       	sbrs	r24, 1
     bca:	bf c1       	rjmp	.+894    	; 0xf4a <vfprintf+0x3c4>
     bcc:	ce 01       	movw	r24, r28
     bce:	01 96       	adiw	r24, 0x01	; 1
     bd0:	3c 01       	movw	r6, r24
     bd2:	f6 01       	movw	r30, r12
     bd4:	93 81       	ldd	r25, Z+3	; 0x03
     bd6:	f7 01       	movw	r30, r14
     bd8:	93 fd       	sbrc	r25, 3
     bda:	85 91       	lpm	r24, Z+
     bdc:	93 ff       	sbrs	r25, 3
     bde:	81 91       	ld	r24, Z+
     be0:	7f 01       	movw	r14, r30
     be2:	88 23       	and	r24, r24
     be4:	09 f4       	brne	.+2      	; 0xbe8 <vfprintf+0x62>
     be6:	ad c1       	rjmp	.+858    	; 0xf42 <vfprintf+0x3bc>
     be8:	85 32       	cpi	r24, 0x25	; 37
     bea:	39 f4       	brne	.+14     	; 0xbfa <vfprintf+0x74>
     bec:	93 fd       	sbrc	r25, 3
     bee:	85 91       	lpm	r24, Z+
     bf0:	93 ff       	sbrs	r25, 3
     bf2:	81 91       	ld	r24, Z+
     bf4:	7f 01       	movw	r14, r30
     bf6:	85 32       	cpi	r24, 0x25	; 37
     bf8:	21 f4       	brne	.+8      	; 0xc02 <vfprintf+0x7c>
     bfa:	b6 01       	movw	r22, r12
     bfc:	90 e0       	ldi	r25, 0x00	; 0
     bfe:	18 d3       	rcall	.+1584   	; 0x1230 <fputc>
     c00:	e8 cf       	rjmp	.-48     	; 0xbd2 <vfprintf+0x4c>
     c02:	91 2c       	mov	r9, r1
     c04:	21 2c       	mov	r2, r1
     c06:	31 2c       	mov	r3, r1
     c08:	ff e1       	ldi	r31, 0x1F	; 31
     c0a:	f3 15       	cp	r31, r3
     c0c:	d8 f0       	brcs	.+54     	; 0xc44 <vfprintf+0xbe>
     c0e:	8b 32       	cpi	r24, 0x2B	; 43
     c10:	79 f0       	breq	.+30     	; 0xc30 <vfprintf+0xaa>
     c12:	38 f4       	brcc	.+14     	; 0xc22 <vfprintf+0x9c>
     c14:	80 32       	cpi	r24, 0x20	; 32
     c16:	79 f0       	breq	.+30     	; 0xc36 <vfprintf+0xb0>
     c18:	83 32       	cpi	r24, 0x23	; 35
     c1a:	a1 f4       	brne	.+40     	; 0xc44 <vfprintf+0xbe>
     c1c:	23 2d       	mov	r18, r3
     c1e:	20 61       	ori	r18, 0x10	; 16
     c20:	1d c0       	rjmp	.+58     	; 0xc5c <vfprintf+0xd6>
     c22:	8d 32       	cpi	r24, 0x2D	; 45
     c24:	61 f0       	breq	.+24     	; 0xc3e <vfprintf+0xb8>
     c26:	80 33       	cpi	r24, 0x30	; 48
     c28:	69 f4       	brne	.+26     	; 0xc44 <vfprintf+0xbe>
     c2a:	23 2d       	mov	r18, r3
     c2c:	21 60       	ori	r18, 0x01	; 1
     c2e:	16 c0       	rjmp	.+44     	; 0xc5c <vfprintf+0xd6>
     c30:	83 2d       	mov	r24, r3
     c32:	82 60       	ori	r24, 0x02	; 2
     c34:	38 2e       	mov	r3, r24
     c36:	e3 2d       	mov	r30, r3
     c38:	e4 60       	ori	r30, 0x04	; 4
     c3a:	3e 2e       	mov	r3, r30
     c3c:	2a c0       	rjmp	.+84     	; 0xc92 <vfprintf+0x10c>
     c3e:	f3 2d       	mov	r31, r3
     c40:	f8 60       	ori	r31, 0x08	; 8
     c42:	1d c0       	rjmp	.+58     	; 0xc7e <vfprintf+0xf8>
     c44:	37 fc       	sbrc	r3, 7
     c46:	2d c0       	rjmp	.+90     	; 0xca2 <vfprintf+0x11c>
     c48:	20 ed       	ldi	r18, 0xD0	; 208
     c4a:	28 0f       	add	r18, r24
     c4c:	2a 30       	cpi	r18, 0x0A	; 10
     c4e:	40 f0       	brcs	.+16     	; 0xc60 <vfprintf+0xda>
     c50:	8e 32       	cpi	r24, 0x2E	; 46
     c52:	b9 f4       	brne	.+46     	; 0xc82 <vfprintf+0xfc>
     c54:	36 fc       	sbrc	r3, 6
     c56:	75 c1       	rjmp	.+746    	; 0xf42 <vfprintf+0x3bc>
     c58:	23 2d       	mov	r18, r3
     c5a:	20 64       	ori	r18, 0x40	; 64
     c5c:	32 2e       	mov	r3, r18
     c5e:	19 c0       	rjmp	.+50     	; 0xc92 <vfprintf+0x10c>
     c60:	36 fe       	sbrs	r3, 6
     c62:	06 c0       	rjmp	.+12     	; 0xc70 <vfprintf+0xea>
     c64:	8a e0       	ldi	r24, 0x0A	; 10
     c66:	98 9e       	mul	r9, r24
     c68:	20 0d       	add	r18, r0
     c6a:	11 24       	eor	r1, r1
     c6c:	92 2e       	mov	r9, r18
     c6e:	11 c0       	rjmp	.+34     	; 0xc92 <vfprintf+0x10c>
     c70:	ea e0       	ldi	r30, 0x0A	; 10
     c72:	2e 9e       	mul	r2, r30
     c74:	20 0d       	add	r18, r0
     c76:	11 24       	eor	r1, r1
     c78:	22 2e       	mov	r2, r18
     c7a:	f3 2d       	mov	r31, r3
     c7c:	f0 62       	ori	r31, 0x20	; 32
     c7e:	3f 2e       	mov	r3, r31
     c80:	08 c0       	rjmp	.+16     	; 0xc92 <vfprintf+0x10c>
     c82:	8c 36       	cpi	r24, 0x6C	; 108
     c84:	21 f4       	brne	.+8      	; 0xc8e <vfprintf+0x108>
     c86:	83 2d       	mov	r24, r3
     c88:	80 68       	ori	r24, 0x80	; 128
     c8a:	38 2e       	mov	r3, r24
     c8c:	02 c0       	rjmp	.+4      	; 0xc92 <vfprintf+0x10c>
     c8e:	88 36       	cpi	r24, 0x68	; 104
     c90:	41 f4       	brne	.+16     	; 0xca2 <vfprintf+0x11c>
     c92:	f7 01       	movw	r30, r14
     c94:	93 fd       	sbrc	r25, 3
     c96:	85 91       	lpm	r24, Z+
     c98:	93 ff       	sbrs	r25, 3
     c9a:	81 91       	ld	r24, Z+
     c9c:	7f 01       	movw	r14, r30
     c9e:	81 11       	cpse	r24, r1
     ca0:	b3 cf       	rjmp	.-154    	; 0xc08 <vfprintf+0x82>
     ca2:	98 2f       	mov	r25, r24
     ca4:	9f 7d       	andi	r25, 0xDF	; 223
     ca6:	95 54       	subi	r25, 0x45	; 69
     ca8:	93 30       	cpi	r25, 0x03	; 3
     caa:	28 f4       	brcc	.+10     	; 0xcb6 <vfprintf+0x130>
     cac:	0c 5f       	subi	r16, 0xFC	; 252
     cae:	1f 4f       	sbci	r17, 0xFF	; 255
     cb0:	9f e3       	ldi	r25, 0x3F	; 63
     cb2:	99 83       	std	Y+1, r25	; 0x01
     cb4:	0d c0       	rjmp	.+26     	; 0xcd0 <vfprintf+0x14a>
     cb6:	83 36       	cpi	r24, 0x63	; 99
     cb8:	31 f0       	breq	.+12     	; 0xcc6 <vfprintf+0x140>
     cba:	83 37       	cpi	r24, 0x73	; 115
     cbc:	71 f0       	breq	.+28     	; 0xcda <vfprintf+0x154>
     cbe:	83 35       	cpi	r24, 0x53	; 83
     cc0:	09 f0       	breq	.+2      	; 0xcc4 <vfprintf+0x13e>
     cc2:	55 c0       	rjmp	.+170    	; 0xd6e <vfprintf+0x1e8>
     cc4:	20 c0       	rjmp	.+64     	; 0xd06 <vfprintf+0x180>
     cc6:	f8 01       	movw	r30, r16
     cc8:	80 81       	ld	r24, Z
     cca:	89 83       	std	Y+1, r24	; 0x01
     ccc:	0e 5f       	subi	r16, 0xFE	; 254
     cce:	1f 4f       	sbci	r17, 0xFF	; 255
     cd0:	88 24       	eor	r8, r8
     cd2:	83 94       	inc	r8
     cd4:	91 2c       	mov	r9, r1
     cd6:	53 01       	movw	r10, r6
     cd8:	12 c0       	rjmp	.+36     	; 0xcfe <vfprintf+0x178>
     cda:	28 01       	movw	r4, r16
     cdc:	f2 e0       	ldi	r31, 0x02	; 2
     cde:	4f 0e       	add	r4, r31
     ce0:	51 1c       	adc	r5, r1
     ce2:	f8 01       	movw	r30, r16
     ce4:	a0 80       	ld	r10, Z
     ce6:	b1 80       	ldd	r11, Z+1	; 0x01
     ce8:	36 fe       	sbrs	r3, 6
     cea:	03 c0       	rjmp	.+6      	; 0xcf2 <vfprintf+0x16c>
     cec:	69 2d       	mov	r22, r9
     cee:	70 e0       	ldi	r23, 0x00	; 0
     cf0:	02 c0       	rjmp	.+4      	; 0xcf6 <vfprintf+0x170>
     cf2:	6f ef       	ldi	r22, 0xFF	; 255
     cf4:	7f ef       	ldi	r23, 0xFF	; 255
     cf6:	c5 01       	movw	r24, r10
     cf8:	90 d2       	rcall	.+1312   	; 0x121a <strnlen>
     cfa:	4c 01       	movw	r8, r24
     cfc:	82 01       	movw	r16, r4
     cfe:	f3 2d       	mov	r31, r3
     d00:	ff 77       	andi	r31, 0x7F	; 127
     d02:	3f 2e       	mov	r3, r31
     d04:	15 c0       	rjmp	.+42     	; 0xd30 <vfprintf+0x1aa>
     d06:	28 01       	movw	r4, r16
     d08:	22 e0       	ldi	r18, 0x02	; 2
     d0a:	42 0e       	add	r4, r18
     d0c:	51 1c       	adc	r5, r1
     d0e:	f8 01       	movw	r30, r16
     d10:	a0 80       	ld	r10, Z
     d12:	b1 80       	ldd	r11, Z+1	; 0x01
     d14:	36 fe       	sbrs	r3, 6
     d16:	03 c0       	rjmp	.+6      	; 0xd1e <vfprintf+0x198>
     d18:	69 2d       	mov	r22, r9
     d1a:	70 e0       	ldi	r23, 0x00	; 0
     d1c:	02 c0       	rjmp	.+4      	; 0xd22 <vfprintf+0x19c>
     d1e:	6f ef       	ldi	r22, 0xFF	; 255
     d20:	7f ef       	ldi	r23, 0xFF	; 255
     d22:	c5 01       	movw	r24, r10
     d24:	68 d2       	rcall	.+1232   	; 0x11f6 <strnlen_P>
     d26:	4c 01       	movw	r8, r24
     d28:	f3 2d       	mov	r31, r3
     d2a:	f0 68       	ori	r31, 0x80	; 128
     d2c:	3f 2e       	mov	r3, r31
     d2e:	82 01       	movw	r16, r4
     d30:	33 fc       	sbrc	r3, 3
     d32:	19 c0       	rjmp	.+50     	; 0xd66 <vfprintf+0x1e0>
     d34:	82 2d       	mov	r24, r2
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	88 16       	cp	r8, r24
     d3a:	99 06       	cpc	r9, r25
     d3c:	a0 f4       	brcc	.+40     	; 0xd66 <vfprintf+0x1e0>
     d3e:	b6 01       	movw	r22, r12
     d40:	80 e2       	ldi	r24, 0x20	; 32
     d42:	90 e0       	ldi	r25, 0x00	; 0
     d44:	75 d2       	rcall	.+1258   	; 0x1230 <fputc>
     d46:	2a 94       	dec	r2
     d48:	f5 cf       	rjmp	.-22     	; 0xd34 <vfprintf+0x1ae>
     d4a:	f5 01       	movw	r30, r10
     d4c:	37 fc       	sbrc	r3, 7
     d4e:	85 91       	lpm	r24, Z+
     d50:	37 fe       	sbrs	r3, 7
     d52:	81 91       	ld	r24, Z+
     d54:	5f 01       	movw	r10, r30
     d56:	b6 01       	movw	r22, r12
     d58:	90 e0       	ldi	r25, 0x00	; 0
     d5a:	6a d2       	rcall	.+1236   	; 0x1230 <fputc>
     d5c:	21 10       	cpse	r2, r1
     d5e:	2a 94       	dec	r2
     d60:	21 e0       	ldi	r18, 0x01	; 1
     d62:	82 1a       	sub	r8, r18
     d64:	91 08       	sbc	r9, r1
     d66:	81 14       	cp	r8, r1
     d68:	91 04       	cpc	r9, r1
     d6a:	79 f7       	brne	.-34     	; 0xd4a <vfprintf+0x1c4>
     d6c:	e1 c0       	rjmp	.+450    	; 0xf30 <vfprintf+0x3aa>
     d6e:	84 36       	cpi	r24, 0x64	; 100
     d70:	11 f0       	breq	.+4      	; 0xd76 <vfprintf+0x1f0>
     d72:	89 36       	cpi	r24, 0x69	; 105
     d74:	39 f5       	brne	.+78     	; 0xdc4 <vfprintf+0x23e>
     d76:	f8 01       	movw	r30, r16
     d78:	37 fe       	sbrs	r3, 7
     d7a:	07 c0       	rjmp	.+14     	; 0xd8a <vfprintf+0x204>
     d7c:	60 81       	ld	r22, Z
     d7e:	71 81       	ldd	r23, Z+1	; 0x01
     d80:	82 81       	ldd	r24, Z+2	; 0x02
     d82:	93 81       	ldd	r25, Z+3	; 0x03
     d84:	0c 5f       	subi	r16, 0xFC	; 252
     d86:	1f 4f       	sbci	r17, 0xFF	; 255
     d88:	08 c0       	rjmp	.+16     	; 0xd9a <vfprintf+0x214>
     d8a:	60 81       	ld	r22, Z
     d8c:	71 81       	ldd	r23, Z+1	; 0x01
     d8e:	07 2e       	mov	r0, r23
     d90:	00 0c       	add	r0, r0
     d92:	88 0b       	sbc	r24, r24
     d94:	99 0b       	sbc	r25, r25
     d96:	0e 5f       	subi	r16, 0xFE	; 254
     d98:	1f 4f       	sbci	r17, 0xFF	; 255
     d9a:	f3 2d       	mov	r31, r3
     d9c:	ff 76       	andi	r31, 0x6F	; 111
     d9e:	3f 2e       	mov	r3, r31
     da0:	97 ff       	sbrs	r25, 7
     da2:	09 c0       	rjmp	.+18     	; 0xdb6 <vfprintf+0x230>
     da4:	90 95       	com	r25
     da6:	80 95       	com	r24
     da8:	70 95       	com	r23
     daa:	61 95       	neg	r22
     dac:	7f 4f       	sbci	r23, 0xFF	; 255
     dae:	8f 4f       	sbci	r24, 0xFF	; 255
     db0:	9f 4f       	sbci	r25, 0xFF	; 255
     db2:	f0 68       	ori	r31, 0x80	; 128
     db4:	3f 2e       	mov	r3, r31
     db6:	2a e0       	ldi	r18, 0x0A	; 10
     db8:	30 e0       	ldi	r19, 0x00	; 0
     dba:	a3 01       	movw	r20, r6
     dbc:	75 d2       	rcall	.+1258   	; 0x12a8 <__ultoa_invert>
     dbe:	88 2e       	mov	r8, r24
     dc0:	86 18       	sub	r8, r6
     dc2:	44 c0       	rjmp	.+136    	; 0xe4c <vfprintf+0x2c6>
     dc4:	85 37       	cpi	r24, 0x75	; 117
     dc6:	31 f4       	brne	.+12     	; 0xdd4 <vfprintf+0x24e>
     dc8:	23 2d       	mov	r18, r3
     dca:	2f 7e       	andi	r18, 0xEF	; 239
     dcc:	b2 2e       	mov	r11, r18
     dce:	2a e0       	ldi	r18, 0x0A	; 10
     dd0:	30 e0       	ldi	r19, 0x00	; 0
     dd2:	25 c0       	rjmp	.+74     	; 0xe1e <vfprintf+0x298>
     dd4:	93 2d       	mov	r25, r3
     dd6:	99 7f       	andi	r25, 0xF9	; 249
     dd8:	b9 2e       	mov	r11, r25
     dda:	8f 36       	cpi	r24, 0x6F	; 111
     ddc:	c1 f0       	breq	.+48     	; 0xe0e <vfprintf+0x288>
     dde:	18 f4       	brcc	.+6      	; 0xde6 <vfprintf+0x260>
     de0:	88 35       	cpi	r24, 0x58	; 88
     de2:	79 f0       	breq	.+30     	; 0xe02 <vfprintf+0x27c>
     de4:	ae c0       	rjmp	.+348    	; 0xf42 <vfprintf+0x3bc>
     de6:	80 37       	cpi	r24, 0x70	; 112
     de8:	19 f0       	breq	.+6      	; 0xdf0 <vfprintf+0x26a>
     dea:	88 37       	cpi	r24, 0x78	; 120
     dec:	21 f0       	breq	.+8      	; 0xdf6 <vfprintf+0x270>
     dee:	a9 c0       	rjmp	.+338    	; 0xf42 <vfprintf+0x3bc>
     df0:	e9 2f       	mov	r30, r25
     df2:	e0 61       	ori	r30, 0x10	; 16
     df4:	be 2e       	mov	r11, r30
     df6:	b4 fe       	sbrs	r11, 4
     df8:	0d c0       	rjmp	.+26     	; 0xe14 <vfprintf+0x28e>
     dfa:	fb 2d       	mov	r31, r11
     dfc:	f4 60       	ori	r31, 0x04	; 4
     dfe:	bf 2e       	mov	r11, r31
     e00:	09 c0       	rjmp	.+18     	; 0xe14 <vfprintf+0x28e>
     e02:	34 fe       	sbrs	r3, 4
     e04:	0a c0       	rjmp	.+20     	; 0xe1a <vfprintf+0x294>
     e06:	29 2f       	mov	r18, r25
     e08:	26 60       	ori	r18, 0x06	; 6
     e0a:	b2 2e       	mov	r11, r18
     e0c:	06 c0       	rjmp	.+12     	; 0xe1a <vfprintf+0x294>
     e0e:	28 e0       	ldi	r18, 0x08	; 8
     e10:	30 e0       	ldi	r19, 0x00	; 0
     e12:	05 c0       	rjmp	.+10     	; 0xe1e <vfprintf+0x298>
     e14:	20 e1       	ldi	r18, 0x10	; 16
     e16:	30 e0       	ldi	r19, 0x00	; 0
     e18:	02 c0       	rjmp	.+4      	; 0xe1e <vfprintf+0x298>
     e1a:	20 e1       	ldi	r18, 0x10	; 16
     e1c:	32 e0       	ldi	r19, 0x02	; 2
     e1e:	f8 01       	movw	r30, r16
     e20:	b7 fe       	sbrs	r11, 7
     e22:	07 c0       	rjmp	.+14     	; 0xe32 <vfprintf+0x2ac>
     e24:	60 81       	ld	r22, Z
     e26:	71 81       	ldd	r23, Z+1	; 0x01
     e28:	82 81       	ldd	r24, Z+2	; 0x02
     e2a:	93 81       	ldd	r25, Z+3	; 0x03
     e2c:	0c 5f       	subi	r16, 0xFC	; 252
     e2e:	1f 4f       	sbci	r17, 0xFF	; 255
     e30:	06 c0       	rjmp	.+12     	; 0xe3e <vfprintf+0x2b8>
     e32:	60 81       	ld	r22, Z
     e34:	71 81       	ldd	r23, Z+1	; 0x01
     e36:	80 e0       	ldi	r24, 0x00	; 0
     e38:	90 e0       	ldi	r25, 0x00	; 0
     e3a:	0e 5f       	subi	r16, 0xFE	; 254
     e3c:	1f 4f       	sbci	r17, 0xFF	; 255
     e3e:	a3 01       	movw	r20, r6
     e40:	33 d2       	rcall	.+1126   	; 0x12a8 <__ultoa_invert>
     e42:	88 2e       	mov	r8, r24
     e44:	86 18       	sub	r8, r6
     e46:	fb 2d       	mov	r31, r11
     e48:	ff 77       	andi	r31, 0x7F	; 127
     e4a:	3f 2e       	mov	r3, r31
     e4c:	36 fe       	sbrs	r3, 6
     e4e:	0d c0       	rjmp	.+26     	; 0xe6a <vfprintf+0x2e4>
     e50:	23 2d       	mov	r18, r3
     e52:	2e 7f       	andi	r18, 0xFE	; 254
     e54:	a2 2e       	mov	r10, r18
     e56:	89 14       	cp	r8, r9
     e58:	58 f4       	brcc	.+22     	; 0xe70 <vfprintf+0x2ea>
     e5a:	34 fe       	sbrs	r3, 4
     e5c:	0b c0       	rjmp	.+22     	; 0xe74 <vfprintf+0x2ee>
     e5e:	32 fc       	sbrc	r3, 2
     e60:	09 c0       	rjmp	.+18     	; 0xe74 <vfprintf+0x2ee>
     e62:	83 2d       	mov	r24, r3
     e64:	8e 7e       	andi	r24, 0xEE	; 238
     e66:	a8 2e       	mov	r10, r24
     e68:	05 c0       	rjmp	.+10     	; 0xe74 <vfprintf+0x2ee>
     e6a:	b8 2c       	mov	r11, r8
     e6c:	a3 2c       	mov	r10, r3
     e6e:	03 c0       	rjmp	.+6      	; 0xe76 <vfprintf+0x2f0>
     e70:	b8 2c       	mov	r11, r8
     e72:	01 c0       	rjmp	.+2      	; 0xe76 <vfprintf+0x2f0>
     e74:	b9 2c       	mov	r11, r9
     e76:	a4 fe       	sbrs	r10, 4
     e78:	0f c0       	rjmp	.+30     	; 0xe98 <vfprintf+0x312>
     e7a:	fe 01       	movw	r30, r28
     e7c:	e8 0d       	add	r30, r8
     e7e:	f1 1d       	adc	r31, r1
     e80:	80 81       	ld	r24, Z
     e82:	80 33       	cpi	r24, 0x30	; 48
     e84:	21 f4       	brne	.+8      	; 0xe8e <vfprintf+0x308>
     e86:	9a 2d       	mov	r25, r10
     e88:	99 7e       	andi	r25, 0xE9	; 233
     e8a:	a9 2e       	mov	r10, r25
     e8c:	09 c0       	rjmp	.+18     	; 0xea0 <vfprintf+0x31a>
     e8e:	a2 fe       	sbrs	r10, 2
     e90:	06 c0       	rjmp	.+12     	; 0xe9e <vfprintf+0x318>
     e92:	b3 94       	inc	r11
     e94:	b3 94       	inc	r11
     e96:	04 c0       	rjmp	.+8      	; 0xea0 <vfprintf+0x31a>
     e98:	8a 2d       	mov	r24, r10
     e9a:	86 78       	andi	r24, 0x86	; 134
     e9c:	09 f0       	breq	.+2      	; 0xea0 <vfprintf+0x31a>
     e9e:	b3 94       	inc	r11
     ea0:	a3 fc       	sbrc	r10, 3
     ea2:	10 c0       	rjmp	.+32     	; 0xec4 <vfprintf+0x33e>
     ea4:	a0 fe       	sbrs	r10, 0
     ea6:	06 c0       	rjmp	.+12     	; 0xeb4 <vfprintf+0x32e>
     ea8:	b2 14       	cp	r11, r2
     eaa:	80 f4       	brcc	.+32     	; 0xecc <vfprintf+0x346>
     eac:	28 0c       	add	r2, r8
     eae:	92 2c       	mov	r9, r2
     eb0:	9b 18       	sub	r9, r11
     eb2:	0d c0       	rjmp	.+26     	; 0xece <vfprintf+0x348>
     eb4:	b2 14       	cp	r11, r2
     eb6:	58 f4       	brcc	.+22     	; 0xece <vfprintf+0x348>
     eb8:	b6 01       	movw	r22, r12
     eba:	80 e2       	ldi	r24, 0x20	; 32
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	b8 d1       	rcall	.+880    	; 0x1230 <fputc>
     ec0:	b3 94       	inc	r11
     ec2:	f8 cf       	rjmp	.-16     	; 0xeb4 <vfprintf+0x32e>
     ec4:	b2 14       	cp	r11, r2
     ec6:	18 f4       	brcc	.+6      	; 0xece <vfprintf+0x348>
     ec8:	2b 18       	sub	r2, r11
     eca:	02 c0       	rjmp	.+4      	; 0xed0 <vfprintf+0x34a>
     ecc:	98 2c       	mov	r9, r8
     ece:	21 2c       	mov	r2, r1
     ed0:	a4 fe       	sbrs	r10, 4
     ed2:	0f c0       	rjmp	.+30     	; 0xef2 <vfprintf+0x36c>
     ed4:	b6 01       	movw	r22, r12
     ed6:	80 e3       	ldi	r24, 0x30	; 48
     ed8:	90 e0       	ldi	r25, 0x00	; 0
     eda:	aa d1       	rcall	.+852    	; 0x1230 <fputc>
     edc:	a2 fe       	sbrs	r10, 2
     ede:	16 c0       	rjmp	.+44     	; 0xf0c <vfprintf+0x386>
     ee0:	a1 fc       	sbrc	r10, 1
     ee2:	03 c0       	rjmp	.+6      	; 0xeea <vfprintf+0x364>
     ee4:	88 e7       	ldi	r24, 0x78	; 120
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	02 c0       	rjmp	.+4      	; 0xeee <vfprintf+0x368>
     eea:	88 e5       	ldi	r24, 0x58	; 88
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	b6 01       	movw	r22, r12
     ef0:	0c c0       	rjmp	.+24     	; 0xf0a <vfprintf+0x384>
     ef2:	8a 2d       	mov	r24, r10
     ef4:	86 78       	andi	r24, 0x86	; 134
     ef6:	51 f0       	breq	.+20     	; 0xf0c <vfprintf+0x386>
     ef8:	a1 fe       	sbrs	r10, 1
     efa:	02 c0       	rjmp	.+4      	; 0xf00 <vfprintf+0x37a>
     efc:	8b e2       	ldi	r24, 0x2B	; 43
     efe:	01 c0       	rjmp	.+2      	; 0xf02 <vfprintf+0x37c>
     f00:	80 e2       	ldi	r24, 0x20	; 32
     f02:	a7 fc       	sbrc	r10, 7
     f04:	8d e2       	ldi	r24, 0x2D	; 45
     f06:	b6 01       	movw	r22, r12
     f08:	90 e0       	ldi	r25, 0x00	; 0
     f0a:	92 d1       	rcall	.+804    	; 0x1230 <fputc>
     f0c:	89 14       	cp	r8, r9
     f0e:	30 f4       	brcc	.+12     	; 0xf1c <vfprintf+0x396>
     f10:	b6 01       	movw	r22, r12
     f12:	80 e3       	ldi	r24, 0x30	; 48
     f14:	90 e0       	ldi	r25, 0x00	; 0
     f16:	8c d1       	rcall	.+792    	; 0x1230 <fputc>
     f18:	9a 94       	dec	r9
     f1a:	f8 cf       	rjmp	.-16     	; 0xf0c <vfprintf+0x386>
     f1c:	8a 94       	dec	r8
     f1e:	f3 01       	movw	r30, r6
     f20:	e8 0d       	add	r30, r8
     f22:	f1 1d       	adc	r31, r1
     f24:	80 81       	ld	r24, Z
     f26:	b6 01       	movw	r22, r12
     f28:	90 e0       	ldi	r25, 0x00	; 0
     f2a:	82 d1       	rcall	.+772    	; 0x1230 <fputc>
     f2c:	81 10       	cpse	r8, r1
     f2e:	f6 cf       	rjmp	.-20     	; 0xf1c <vfprintf+0x396>
     f30:	22 20       	and	r2, r2
     f32:	09 f4       	brne	.+2      	; 0xf36 <vfprintf+0x3b0>
     f34:	4e ce       	rjmp	.-868    	; 0xbd2 <vfprintf+0x4c>
     f36:	b6 01       	movw	r22, r12
     f38:	80 e2       	ldi	r24, 0x20	; 32
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	79 d1       	rcall	.+754    	; 0x1230 <fputc>
     f3e:	2a 94       	dec	r2
     f40:	f7 cf       	rjmp	.-18     	; 0xf30 <vfprintf+0x3aa>
     f42:	f6 01       	movw	r30, r12
     f44:	86 81       	ldd	r24, Z+6	; 0x06
     f46:	97 81       	ldd	r25, Z+7	; 0x07
     f48:	02 c0       	rjmp	.+4      	; 0xf4e <vfprintf+0x3c8>
     f4a:	8f ef       	ldi	r24, 0xFF	; 255
     f4c:	9f ef       	ldi	r25, 0xFF	; 255
     f4e:	2b 96       	adiw	r28, 0x0b	; 11
     f50:	0f b6       	in	r0, 0x3f	; 63
     f52:	f8 94       	cli
     f54:	de bf       	out	0x3e, r29	; 62
     f56:	0f be       	out	0x3f, r0	; 63
     f58:	cd bf       	out	0x3d, r28	; 61
     f5a:	df 91       	pop	r29
     f5c:	cf 91       	pop	r28
     f5e:	1f 91       	pop	r17
     f60:	0f 91       	pop	r16
     f62:	ff 90       	pop	r15
     f64:	ef 90       	pop	r14
     f66:	df 90       	pop	r13
     f68:	cf 90       	pop	r12
     f6a:	bf 90       	pop	r11
     f6c:	af 90       	pop	r10
     f6e:	9f 90       	pop	r9
     f70:	8f 90       	pop	r8
     f72:	7f 90       	pop	r7
     f74:	6f 90       	pop	r6
     f76:	5f 90       	pop	r5
     f78:	4f 90       	pop	r4
     f7a:	3f 90       	pop	r3
     f7c:	2f 90       	pop	r2
     f7e:	08 95       	ret

00000f80 <calloc>:
     f80:	0f 93       	push	r16
     f82:	1f 93       	push	r17
     f84:	cf 93       	push	r28
     f86:	df 93       	push	r29
     f88:	86 9f       	mul	r24, r22
     f8a:	80 01       	movw	r16, r0
     f8c:	87 9f       	mul	r24, r23
     f8e:	10 0d       	add	r17, r0
     f90:	96 9f       	mul	r25, r22
     f92:	10 0d       	add	r17, r0
     f94:	11 24       	eor	r1, r1
     f96:	c8 01       	movw	r24, r16
     f98:	0d d0       	rcall	.+26     	; 0xfb4 <malloc>
     f9a:	ec 01       	movw	r28, r24
     f9c:	00 97       	sbiw	r24, 0x00	; 0
     f9e:	21 f0       	breq	.+8      	; 0xfa8 <calloc+0x28>
     fa0:	a8 01       	movw	r20, r16
     fa2:	60 e0       	ldi	r22, 0x00	; 0
     fa4:	70 e0       	ldi	r23, 0x00	; 0
     fa6:	32 d1       	rcall	.+612    	; 0x120c <memset>
     fa8:	ce 01       	movw	r24, r28
     faa:	df 91       	pop	r29
     fac:	cf 91       	pop	r28
     fae:	1f 91       	pop	r17
     fb0:	0f 91       	pop	r16
     fb2:	08 95       	ret

00000fb4 <malloc>:
     fb4:	0f 93       	push	r16
     fb6:	1f 93       	push	r17
     fb8:	cf 93       	push	r28
     fba:	df 93       	push	r29
     fbc:	82 30       	cpi	r24, 0x02	; 2
     fbe:	91 05       	cpc	r25, r1
     fc0:	10 f4       	brcc	.+4      	; 0xfc6 <malloc+0x12>
     fc2:	82 e0       	ldi	r24, 0x02	; 2
     fc4:	90 e0       	ldi	r25, 0x00	; 0
     fc6:	e0 91 78 03 	lds	r30, 0x0378	; 0x800378 <__flp>
     fca:	f0 91 79 03 	lds	r31, 0x0379	; 0x800379 <__flp+0x1>
     fce:	20 e0       	ldi	r18, 0x00	; 0
     fd0:	30 e0       	ldi	r19, 0x00	; 0
     fd2:	a0 e0       	ldi	r26, 0x00	; 0
     fd4:	b0 e0       	ldi	r27, 0x00	; 0
     fd6:	30 97       	sbiw	r30, 0x00	; 0
     fd8:	19 f1       	breq	.+70     	; 0x1020 <malloc+0x6c>
     fda:	40 81       	ld	r20, Z
     fdc:	51 81       	ldd	r21, Z+1	; 0x01
     fde:	02 81       	ldd	r16, Z+2	; 0x02
     fe0:	13 81       	ldd	r17, Z+3	; 0x03
     fe2:	48 17       	cp	r20, r24
     fe4:	59 07       	cpc	r21, r25
     fe6:	c8 f0       	brcs	.+50     	; 0x101a <malloc+0x66>
     fe8:	84 17       	cp	r24, r20
     fea:	95 07       	cpc	r25, r21
     fec:	69 f4       	brne	.+26     	; 0x1008 <malloc+0x54>
     fee:	10 97       	sbiw	r26, 0x00	; 0
     ff0:	31 f0       	breq	.+12     	; 0xffe <malloc+0x4a>
     ff2:	12 96       	adiw	r26, 0x02	; 2
     ff4:	0c 93       	st	X, r16
     ff6:	12 97       	sbiw	r26, 0x02	; 2
     ff8:	13 96       	adiw	r26, 0x03	; 3
     ffa:	1c 93       	st	X, r17
     ffc:	27 c0       	rjmp	.+78     	; 0x104c <malloc+0x98>
     ffe:	00 93 78 03 	sts	0x0378, r16	; 0x800378 <__flp>
    1002:	10 93 79 03 	sts	0x0379, r17	; 0x800379 <__flp+0x1>
    1006:	22 c0       	rjmp	.+68     	; 0x104c <malloc+0x98>
    1008:	21 15       	cp	r18, r1
    100a:	31 05       	cpc	r19, r1
    100c:	19 f0       	breq	.+6      	; 0x1014 <malloc+0x60>
    100e:	42 17       	cp	r20, r18
    1010:	53 07       	cpc	r21, r19
    1012:	18 f4       	brcc	.+6      	; 0x101a <malloc+0x66>
    1014:	9a 01       	movw	r18, r20
    1016:	bd 01       	movw	r22, r26
    1018:	ef 01       	movw	r28, r30
    101a:	df 01       	movw	r26, r30
    101c:	f8 01       	movw	r30, r16
    101e:	db cf       	rjmp	.-74     	; 0xfd6 <malloc+0x22>
    1020:	21 15       	cp	r18, r1
    1022:	31 05       	cpc	r19, r1
    1024:	f9 f0       	breq	.+62     	; 0x1064 <malloc+0xb0>
    1026:	28 1b       	sub	r18, r24
    1028:	39 0b       	sbc	r19, r25
    102a:	24 30       	cpi	r18, 0x04	; 4
    102c:	31 05       	cpc	r19, r1
    102e:	80 f4       	brcc	.+32     	; 0x1050 <malloc+0x9c>
    1030:	8a 81       	ldd	r24, Y+2	; 0x02
    1032:	9b 81       	ldd	r25, Y+3	; 0x03
    1034:	61 15       	cp	r22, r1
    1036:	71 05       	cpc	r23, r1
    1038:	21 f0       	breq	.+8      	; 0x1042 <malloc+0x8e>
    103a:	fb 01       	movw	r30, r22
    103c:	93 83       	std	Z+3, r25	; 0x03
    103e:	82 83       	std	Z+2, r24	; 0x02
    1040:	04 c0       	rjmp	.+8      	; 0x104a <malloc+0x96>
    1042:	90 93 79 03 	sts	0x0379, r25	; 0x800379 <__flp+0x1>
    1046:	80 93 78 03 	sts	0x0378, r24	; 0x800378 <__flp>
    104a:	fe 01       	movw	r30, r28
    104c:	32 96       	adiw	r30, 0x02	; 2
    104e:	44 c0       	rjmp	.+136    	; 0x10d8 <malloc+0x124>
    1050:	fe 01       	movw	r30, r28
    1052:	e2 0f       	add	r30, r18
    1054:	f3 1f       	adc	r31, r19
    1056:	81 93       	st	Z+, r24
    1058:	91 93       	st	Z+, r25
    105a:	22 50       	subi	r18, 0x02	; 2
    105c:	31 09       	sbc	r19, r1
    105e:	39 83       	std	Y+1, r19	; 0x01
    1060:	28 83       	st	Y, r18
    1062:	3a c0       	rjmp	.+116    	; 0x10d8 <malloc+0x124>
    1064:	20 91 76 03 	lds	r18, 0x0376	; 0x800376 <__brkval>
    1068:	30 91 77 03 	lds	r19, 0x0377	; 0x800377 <__brkval+0x1>
    106c:	23 2b       	or	r18, r19
    106e:	41 f4       	brne	.+16     	; 0x1080 <malloc+0xcc>
    1070:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    1074:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    1078:	30 93 77 03 	sts	0x0377, r19	; 0x800377 <__brkval+0x1>
    107c:	20 93 76 03 	sts	0x0376, r18	; 0x800376 <__brkval>
    1080:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    1084:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    1088:	21 15       	cp	r18, r1
    108a:	31 05       	cpc	r19, r1
    108c:	41 f4       	brne	.+16     	; 0x109e <malloc+0xea>
    108e:	2d b7       	in	r18, 0x3d	; 61
    1090:	3e b7       	in	r19, 0x3e	; 62
    1092:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    1096:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    109a:	24 1b       	sub	r18, r20
    109c:	35 0b       	sbc	r19, r21
    109e:	e0 91 76 03 	lds	r30, 0x0376	; 0x800376 <__brkval>
    10a2:	f0 91 77 03 	lds	r31, 0x0377	; 0x800377 <__brkval+0x1>
    10a6:	e2 17       	cp	r30, r18
    10a8:	f3 07       	cpc	r31, r19
    10aa:	a0 f4       	brcc	.+40     	; 0x10d4 <malloc+0x120>
    10ac:	2e 1b       	sub	r18, r30
    10ae:	3f 0b       	sbc	r19, r31
    10b0:	28 17       	cp	r18, r24
    10b2:	39 07       	cpc	r19, r25
    10b4:	78 f0       	brcs	.+30     	; 0x10d4 <malloc+0x120>
    10b6:	ac 01       	movw	r20, r24
    10b8:	4e 5f       	subi	r20, 0xFE	; 254
    10ba:	5f 4f       	sbci	r21, 0xFF	; 255
    10bc:	24 17       	cp	r18, r20
    10be:	35 07       	cpc	r19, r21
    10c0:	48 f0       	brcs	.+18     	; 0x10d4 <malloc+0x120>
    10c2:	4e 0f       	add	r20, r30
    10c4:	5f 1f       	adc	r21, r31
    10c6:	50 93 77 03 	sts	0x0377, r21	; 0x800377 <__brkval+0x1>
    10ca:	40 93 76 03 	sts	0x0376, r20	; 0x800376 <__brkval>
    10ce:	81 93       	st	Z+, r24
    10d0:	91 93       	st	Z+, r25
    10d2:	02 c0       	rjmp	.+4      	; 0x10d8 <malloc+0x124>
    10d4:	e0 e0       	ldi	r30, 0x00	; 0
    10d6:	f0 e0       	ldi	r31, 0x00	; 0
    10d8:	cf 01       	movw	r24, r30
    10da:	df 91       	pop	r29
    10dc:	cf 91       	pop	r28
    10de:	1f 91       	pop	r17
    10e0:	0f 91       	pop	r16
    10e2:	08 95       	ret

000010e4 <free>:
    10e4:	cf 93       	push	r28
    10e6:	df 93       	push	r29
    10e8:	00 97       	sbiw	r24, 0x00	; 0
    10ea:	09 f4       	brne	.+2      	; 0x10ee <free+0xa>
    10ec:	81 c0       	rjmp	.+258    	; 0x11f0 <free+0x10c>
    10ee:	fc 01       	movw	r30, r24
    10f0:	32 97       	sbiw	r30, 0x02	; 2
    10f2:	13 82       	std	Z+3, r1	; 0x03
    10f4:	12 82       	std	Z+2, r1	; 0x02
    10f6:	a0 91 78 03 	lds	r26, 0x0378	; 0x800378 <__flp>
    10fa:	b0 91 79 03 	lds	r27, 0x0379	; 0x800379 <__flp+0x1>
    10fe:	10 97       	sbiw	r26, 0x00	; 0
    1100:	81 f4       	brne	.+32     	; 0x1122 <free+0x3e>
    1102:	20 81       	ld	r18, Z
    1104:	31 81       	ldd	r19, Z+1	; 0x01
    1106:	82 0f       	add	r24, r18
    1108:	93 1f       	adc	r25, r19
    110a:	20 91 76 03 	lds	r18, 0x0376	; 0x800376 <__brkval>
    110e:	30 91 77 03 	lds	r19, 0x0377	; 0x800377 <__brkval+0x1>
    1112:	28 17       	cp	r18, r24
    1114:	39 07       	cpc	r19, r25
    1116:	51 f5       	brne	.+84     	; 0x116c <free+0x88>
    1118:	f0 93 77 03 	sts	0x0377, r31	; 0x800377 <__brkval+0x1>
    111c:	e0 93 76 03 	sts	0x0376, r30	; 0x800376 <__brkval>
    1120:	67 c0       	rjmp	.+206    	; 0x11f0 <free+0x10c>
    1122:	ed 01       	movw	r28, r26
    1124:	20 e0       	ldi	r18, 0x00	; 0
    1126:	30 e0       	ldi	r19, 0x00	; 0
    1128:	ce 17       	cp	r28, r30
    112a:	df 07       	cpc	r29, r31
    112c:	40 f4       	brcc	.+16     	; 0x113e <free+0x5a>
    112e:	4a 81       	ldd	r20, Y+2	; 0x02
    1130:	5b 81       	ldd	r21, Y+3	; 0x03
    1132:	9e 01       	movw	r18, r28
    1134:	41 15       	cp	r20, r1
    1136:	51 05       	cpc	r21, r1
    1138:	f1 f0       	breq	.+60     	; 0x1176 <free+0x92>
    113a:	ea 01       	movw	r28, r20
    113c:	f5 cf       	rjmp	.-22     	; 0x1128 <free+0x44>
    113e:	d3 83       	std	Z+3, r29	; 0x03
    1140:	c2 83       	std	Z+2, r28	; 0x02
    1142:	40 81       	ld	r20, Z
    1144:	51 81       	ldd	r21, Z+1	; 0x01
    1146:	84 0f       	add	r24, r20
    1148:	95 1f       	adc	r25, r21
    114a:	c8 17       	cp	r28, r24
    114c:	d9 07       	cpc	r29, r25
    114e:	59 f4       	brne	.+22     	; 0x1166 <free+0x82>
    1150:	88 81       	ld	r24, Y
    1152:	99 81       	ldd	r25, Y+1	; 0x01
    1154:	84 0f       	add	r24, r20
    1156:	95 1f       	adc	r25, r21
    1158:	02 96       	adiw	r24, 0x02	; 2
    115a:	91 83       	std	Z+1, r25	; 0x01
    115c:	80 83       	st	Z, r24
    115e:	8a 81       	ldd	r24, Y+2	; 0x02
    1160:	9b 81       	ldd	r25, Y+3	; 0x03
    1162:	93 83       	std	Z+3, r25	; 0x03
    1164:	82 83       	std	Z+2, r24	; 0x02
    1166:	21 15       	cp	r18, r1
    1168:	31 05       	cpc	r19, r1
    116a:	29 f4       	brne	.+10     	; 0x1176 <free+0x92>
    116c:	f0 93 79 03 	sts	0x0379, r31	; 0x800379 <__flp+0x1>
    1170:	e0 93 78 03 	sts	0x0378, r30	; 0x800378 <__flp>
    1174:	3d c0       	rjmp	.+122    	; 0x11f0 <free+0x10c>
    1176:	e9 01       	movw	r28, r18
    1178:	fb 83       	std	Y+3, r31	; 0x03
    117a:	ea 83       	std	Y+2, r30	; 0x02
    117c:	49 91       	ld	r20, Y+
    117e:	59 91       	ld	r21, Y+
    1180:	c4 0f       	add	r28, r20
    1182:	d5 1f       	adc	r29, r21
    1184:	ec 17       	cp	r30, r28
    1186:	fd 07       	cpc	r31, r29
    1188:	61 f4       	brne	.+24     	; 0x11a2 <free+0xbe>
    118a:	80 81       	ld	r24, Z
    118c:	91 81       	ldd	r25, Z+1	; 0x01
    118e:	84 0f       	add	r24, r20
    1190:	95 1f       	adc	r25, r21
    1192:	02 96       	adiw	r24, 0x02	; 2
    1194:	e9 01       	movw	r28, r18
    1196:	99 83       	std	Y+1, r25	; 0x01
    1198:	88 83       	st	Y, r24
    119a:	82 81       	ldd	r24, Z+2	; 0x02
    119c:	93 81       	ldd	r25, Z+3	; 0x03
    119e:	9b 83       	std	Y+3, r25	; 0x03
    11a0:	8a 83       	std	Y+2, r24	; 0x02
    11a2:	e0 e0       	ldi	r30, 0x00	; 0
    11a4:	f0 e0       	ldi	r31, 0x00	; 0
    11a6:	12 96       	adiw	r26, 0x02	; 2
    11a8:	8d 91       	ld	r24, X+
    11aa:	9c 91       	ld	r25, X
    11ac:	13 97       	sbiw	r26, 0x03	; 3
    11ae:	00 97       	sbiw	r24, 0x00	; 0
    11b0:	19 f0       	breq	.+6      	; 0x11b8 <free+0xd4>
    11b2:	fd 01       	movw	r30, r26
    11b4:	dc 01       	movw	r26, r24
    11b6:	f7 cf       	rjmp	.-18     	; 0x11a6 <free+0xc2>
    11b8:	8d 91       	ld	r24, X+
    11ba:	9c 91       	ld	r25, X
    11bc:	11 97       	sbiw	r26, 0x01	; 1
    11be:	9d 01       	movw	r18, r26
    11c0:	2e 5f       	subi	r18, 0xFE	; 254
    11c2:	3f 4f       	sbci	r19, 0xFF	; 255
    11c4:	82 0f       	add	r24, r18
    11c6:	93 1f       	adc	r25, r19
    11c8:	20 91 76 03 	lds	r18, 0x0376	; 0x800376 <__brkval>
    11cc:	30 91 77 03 	lds	r19, 0x0377	; 0x800377 <__brkval+0x1>
    11d0:	28 17       	cp	r18, r24
    11d2:	39 07       	cpc	r19, r25
    11d4:	69 f4       	brne	.+26     	; 0x11f0 <free+0x10c>
    11d6:	30 97       	sbiw	r30, 0x00	; 0
    11d8:	29 f4       	brne	.+10     	; 0x11e4 <free+0x100>
    11da:	10 92 79 03 	sts	0x0379, r1	; 0x800379 <__flp+0x1>
    11de:	10 92 78 03 	sts	0x0378, r1	; 0x800378 <__flp>
    11e2:	02 c0       	rjmp	.+4      	; 0x11e8 <free+0x104>
    11e4:	13 82       	std	Z+3, r1	; 0x03
    11e6:	12 82       	std	Z+2, r1	; 0x02
    11e8:	b0 93 77 03 	sts	0x0377, r27	; 0x800377 <__brkval+0x1>
    11ec:	a0 93 76 03 	sts	0x0376, r26	; 0x800376 <__brkval>
    11f0:	df 91       	pop	r29
    11f2:	cf 91       	pop	r28
    11f4:	08 95       	ret

000011f6 <strnlen_P>:
    11f6:	fc 01       	movw	r30, r24
    11f8:	05 90       	lpm	r0, Z+
    11fa:	61 50       	subi	r22, 0x01	; 1
    11fc:	70 40       	sbci	r23, 0x00	; 0
    11fe:	01 10       	cpse	r0, r1
    1200:	d8 f7       	brcc	.-10     	; 0x11f8 <strnlen_P+0x2>
    1202:	80 95       	com	r24
    1204:	90 95       	com	r25
    1206:	8e 0f       	add	r24, r30
    1208:	9f 1f       	adc	r25, r31
    120a:	08 95       	ret

0000120c <memset>:
    120c:	dc 01       	movw	r26, r24
    120e:	01 c0       	rjmp	.+2      	; 0x1212 <memset+0x6>
    1210:	6d 93       	st	X+, r22
    1212:	41 50       	subi	r20, 0x01	; 1
    1214:	50 40       	sbci	r21, 0x00	; 0
    1216:	e0 f7       	brcc	.-8      	; 0x1210 <memset+0x4>
    1218:	08 95       	ret

0000121a <strnlen>:
    121a:	fc 01       	movw	r30, r24
    121c:	61 50       	subi	r22, 0x01	; 1
    121e:	70 40       	sbci	r23, 0x00	; 0
    1220:	01 90       	ld	r0, Z+
    1222:	01 10       	cpse	r0, r1
    1224:	d8 f7       	brcc	.-10     	; 0x121c <strnlen+0x2>
    1226:	80 95       	com	r24
    1228:	90 95       	com	r25
    122a:	8e 0f       	add	r24, r30
    122c:	9f 1f       	adc	r25, r31
    122e:	08 95       	ret

00001230 <fputc>:
    1230:	0f 93       	push	r16
    1232:	1f 93       	push	r17
    1234:	cf 93       	push	r28
    1236:	df 93       	push	r29
    1238:	fb 01       	movw	r30, r22
    123a:	23 81       	ldd	r18, Z+3	; 0x03
    123c:	21 fd       	sbrc	r18, 1
    123e:	03 c0       	rjmp	.+6      	; 0x1246 <fputc+0x16>
    1240:	8f ef       	ldi	r24, 0xFF	; 255
    1242:	9f ef       	ldi	r25, 0xFF	; 255
    1244:	2c c0       	rjmp	.+88     	; 0x129e <fputc+0x6e>
    1246:	22 ff       	sbrs	r18, 2
    1248:	16 c0       	rjmp	.+44     	; 0x1276 <fputc+0x46>
    124a:	46 81       	ldd	r20, Z+6	; 0x06
    124c:	57 81       	ldd	r21, Z+7	; 0x07
    124e:	24 81       	ldd	r18, Z+4	; 0x04
    1250:	35 81       	ldd	r19, Z+5	; 0x05
    1252:	42 17       	cp	r20, r18
    1254:	53 07       	cpc	r21, r19
    1256:	44 f4       	brge	.+16     	; 0x1268 <fputc+0x38>
    1258:	a0 81       	ld	r26, Z
    125a:	b1 81       	ldd	r27, Z+1	; 0x01
    125c:	9d 01       	movw	r18, r26
    125e:	2f 5f       	subi	r18, 0xFF	; 255
    1260:	3f 4f       	sbci	r19, 0xFF	; 255
    1262:	31 83       	std	Z+1, r19	; 0x01
    1264:	20 83       	st	Z, r18
    1266:	8c 93       	st	X, r24
    1268:	26 81       	ldd	r18, Z+6	; 0x06
    126a:	37 81       	ldd	r19, Z+7	; 0x07
    126c:	2f 5f       	subi	r18, 0xFF	; 255
    126e:	3f 4f       	sbci	r19, 0xFF	; 255
    1270:	37 83       	std	Z+7, r19	; 0x07
    1272:	26 83       	std	Z+6, r18	; 0x06
    1274:	14 c0       	rjmp	.+40     	; 0x129e <fputc+0x6e>
    1276:	8b 01       	movw	r16, r22
    1278:	ec 01       	movw	r28, r24
    127a:	fb 01       	movw	r30, r22
    127c:	00 84       	ldd	r0, Z+8	; 0x08
    127e:	f1 85       	ldd	r31, Z+9	; 0x09
    1280:	e0 2d       	mov	r30, r0
    1282:	19 95       	eicall
    1284:	89 2b       	or	r24, r25
    1286:	e1 f6       	brne	.-72     	; 0x1240 <fputc+0x10>
    1288:	d8 01       	movw	r26, r16
    128a:	16 96       	adiw	r26, 0x06	; 6
    128c:	8d 91       	ld	r24, X+
    128e:	9c 91       	ld	r25, X
    1290:	17 97       	sbiw	r26, 0x07	; 7
    1292:	01 96       	adiw	r24, 0x01	; 1
    1294:	17 96       	adiw	r26, 0x07	; 7
    1296:	9c 93       	st	X, r25
    1298:	8e 93       	st	-X, r24
    129a:	16 97       	sbiw	r26, 0x06	; 6
    129c:	ce 01       	movw	r24, r28
    129e:	df 91       	pop	r29
    12a0:	cf 91       	pop	r28
    12a2:	1f 91       	pop	r17
    12a4:	0f 91       	pop	r16
    12a6:	08 95       	ret

000012a8 <__ultoa_invert>:
    12a8:	fa 01       	movw	r30, r20
    12aa:	aa 27       	eor	r26, r26
    12ac:	28 30       	cpi	r18, 0x08	; 8
    12ae:	51 f1       	breq	.+84     	; 0x1304 <__ultoa_invert+0x5c>
    12b0:	20 31       	cpi	r18, 0x10	; 16
    12b2:	81 f1       	breq	.+96     	; 0x1314 <__ultoa_invert+0x6c>
    12b4:	e8 94       	clt
    12b6:	6f 93       	push	r22
    12b8:	6e 7f       	andi	r22, 0xFE	; 254
    12ba:	6e 5f       	subi	r22, 0xFE	; 254
    12bc:	7f 4f       	sbci	r23, 0xFF	; 255
    12be:	8f 4f       	sbci	r24, 0xFF	; 255
    12c0:	9f 4f       	sbci	r25, 0xFF	; 255
    12c2:	af 4f       	sbci	r26, 0xFF	; 255
    12c4:	b1 e0       	ldi	r27, 0x01	; 1
    12c6:	3e d0       	rcall	.+124    	; 0x1344 <__ultoa_invert+0x9c>
    12c8:	b4 e0       	ldi	r27, 0x04	; 4
    12ca:	3c d0       	rcall	.+120    	; 0x1344 <__ultoa_invert+0x9c>
    12cc:	67 0f       	add	r22, r23
    12ce:	78 1f       	adc	r23, r24
    12d0:	89 1f       	adc	r24, r25
    12d2:	9a 1f       	adc	r25, r26
    12d4:	a1 1d       	adc	r26, r1
    12d6:	68 0f       	add	r22, r24
    12d8:	79 1f       	adc	r23, r25
    12da:	8a 1f       	adc	r24, r26
    12dc:	91 1d       	adc	r25, r1
    12de:	a1 1d       	adc	r26, r1
    12e0:	6a 0f       	add	r22, r26
    12e2:	71 1d       	adc	r23, r1
    12e4:	81 1d       	adc	r24, r1
    12e6:	91 1d       	adc	r25, r1
    12e8:	a1 1d       	adc	r26, r1
    12ea:	20 d0       	rcall	.+64     	; 0x132c <__ultoa_invert+0x84>
    12ec:	09 f4       	brne	.+2      	; 0x12f0 <__ultoa_invert+0x48>
    12ee:	68 94       	set
    12f0:	3f 91       	pop	r19
    12f2:	2a e0       	ldi	r18, 0x0A	; 10
    12f4:	26 9f       	mul	r18, r22
    12f6:	11 24       	eor	r1, r1
    12f8:	30 19       	sub	r19, r0
    12fa:	30 5d       	subi	r19, 0xD0	; 208
    12fc:	31 93       	st	Z+, r19
    12fe:	de f6       	brtc	.-74     	; 0x12b6 <__ultoa_invert+0xe>
    1300:	cf 01       	movw	r24, r30
    1302:	08 95       	ret
    1304:	46 2f       	mov	r20, r22
    1306:	47 70       	andi	r20, 0x07	; 7
    1308:	40 5d       	subi	r20, 0xD0	; 208
    130a:	41 93       	st	Z+, r20
    130c:	b3 e0       	ldi	r27, 0x03	; 3
    130e:	0f d0       	rcall	.+30     	; 0x132e <__ultoa_invert+0x86>
    1310:	c9 f7       	brne	.-14     	; 0x1304 <__ultoa_invert+0x5c>
    1312:	f6 cf       	rjmp	.-20     	; 0x1300 <__ultoa_invert+0x58>
    1314:	46 2f       	mov	r20, r22
    1316:	4f 70       	andi	r20, 0x0F	; 15
    1318:	40 5d       	subi	r20, 0xD0	; 208
    131a:	4a 33       	cpi	r20, 0x3A	; 58
    131c:	18 f0       	brcs	.+6      	; 0x1324 <__ultoa_invert+0x7c>
    131e:	49 5d       	subi	r20, 0xD9	; 217
    1320:	31 fd       	sbrc	r19, 1
    1322:	40 52       	subi	r20, 0x20	; 32
    1324:	41 93       	st	Z+, r20
    1326:	02 d0       	rcall	.+4      	; 0x132c <__ultoa_invert+0x84>
    1328:	a9 f7       	brne	.-22     	; 0x1314 <__ultoa_invert+0x6c>
    132a:	ea cf       	rjmp	.-44     	; 0x1300 <__ultoa_invert+0x58>
    132c:	b4 e0       	ldi	r27, 0x04	; 4
    132e:	a6 95       	lsr	r26
    1330:	97 95       	ror	r25
    1332:	87 95       	ror	r24
    1334:	77 95       	ror	r23
    1336:	67 95       	ror	r22
    1338:	ba 95       	dec	r27
    133a:	c9 f7       	brne	.-14     	; 0x132e <__ultoa_invert+0x86>
    133c:	00 97       	sbiw	r24, 0x00	; 0
    133e:	61 05       	cpc	r22, r1
    1340:	71 05       	cpc	r23, r1
    1342:	08 95       	ret
    1344:	9b 01       	movw	r18, r22
    1346:	ac 01       	movw	r20, r24
    1348:	0a 2e       	mov	r0, r26
    134a:	06 94       	lsr	r0
    134c:	57 95       	ror	r21
    134e:	47 95       	ror	r20
    1350:	37 95       	ror	r19
    1352:	27 95       	ror	r18
    1354:	ba 95       	dec	r27
    1356:	c9 f7       	brne	.-14     	; 0x134a <__ultoa_invert+0xa2>
    1358:	62 0f       	add	r22, r18
    135a:	73 1f       	adc	r23, r19
    135c:	84 1f       	adc	r24, r20
    135e:	95 1f       	adc	r25, r21
    1360:	a0 1d       	adc	r26, r0
    1362:	08 95       	ret

00001364 <_exit>:
    1364:	f8 94       	cli

00001366 <__stop_program>:
    1366:	ff cf       	rjmp	.-2      	; 0x1366 <__stop_program>
