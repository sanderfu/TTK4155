
byggern.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000142  00800200  000014d0  00001564  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014d0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001c  00800342  00800342  000016a6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000016a6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001704  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000190  00000000  00000000  00001744  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002104  00000000  00000000  000018d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001497  00000000  00000000  000039d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000db6  00000000  00000000  00004e6f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000400  00000000  00000000  00005c28  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008dc  00000000  00000000  00006028  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c21  00000000  00000000  00006904  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000128  00000000  00000000  00007525  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	88 c0       	rjmp	.+272    	; 0x112 <__ctors_end>
       2:	00 00       	nop
       4:	a6 c0       	rjmp	.+332    	; 0x152 <__bad_interrupt>
       6:	00 00       	nop
       8:	a4 c0       	rjmp	.+328    	; 0x152 <__bad_interrupt>
       a:	00 00       	nop
       c:	a2 c0       	rjmp	.+324    	; 0x152 <__bad_interrupt>
       e:	00 00       	nop
      10:	a0 c0       	rjmp	.+320    	; 0x152 <__bad_interrupt>
      12:	00 00       	nop
      14:	9f c0       	rjmp	.+318    	; 0x154 <__vector_5>
      16:	00 00       	nop
      18:	9c c0       	rjmp	.+312    	; 0x152 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	9a c0       	rjmp	.+308    	; 0x152 <__bad_interrupt>
      1e:	00 00       	nop
      20:	98 c0       	rjmp	.+304    	; 0x152 <__bad_interrupt>
      22:	00 00       	nop
      24:	96 c0       	rjmp	.+300    	; 0x152 <__bad_interrupt>
      26:	00 00       	nop
      28:	94 c0       	rjmp	.+296    	; 0x152 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	92 c0       	rjmp	.+292    	; 0x152 <__bad_interrupt>
      2e:	00 00       	nop
      30:	90 c0       	rjmp	.+288    	; 0x152 <__bad_interrupt>
      32:	00 00       	nop
      34:	8e c0       	rjmp	.+284    	; 0x152 <__bad_interrupt>
      36:	00 00       	nop
      38:	8c c0       	rjmp	.+280    	; 0x152 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	8a c0       	rjmp	.+276    	; 0x152 <__bad_interrupt>
      3e:	00 00       	nop
      40:	88 c0       	rjmp	.+272    	; 0x152 <__bad_interrupt>
      42:	00 00       	nop
      44:	86 c0       	rjmp	.+268    	; 0x152 <__bad_interrupt>
      46:	00 00       	nop
      48:	84 c0       	rjmp	.+264    	; 0x152 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	82 c0       	rjmp	.+260    	; 0x152 <__bad_interrupt>
      4e:	00 00       	nop
      50:	80 c0       	rjmp	.+256    	; 0x152 <__bad_interrupt>
      52:	00 00       	nop
      54:	7e c0       	rjmp	.+252    	; 0x152 <__bad_interrupt>
      56:	00 00       	nop
      58:	7c c0       	rjmp	.+248    	; 0x152 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	7a c0       	rjmp	.+244    	; 0x152 <__bad_interrupt>
      5e:	00 00       	nop
      60:	78 c0       	rjmp	.+240    	; 0x152 <__bad_interrupt>
      62:	00 00       	nop
      64:	76 c0       	rjmp	.+236    	; 0x152 <__bad_interrupt>
      66:	00 00       	nop
      68:	74 c0       	rjmp	.+232    	; 0x152 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	72 c0       	rjmp	.+228    	; 0x152 <__bad_interrupt>
      6e:	00 00       	nop
      70:	70 c0       	rjmp	.+224    	; 0x152 <__bad_interrupt>
      72:	00 00       	nop
      74:	6e c0       	rjmp	.+220    	; 0x152 <__bad_interrupt>
      76:	00 00       	nop
      78:	6c c0       	rjmp	.+216    	; 0x152 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	6a c0       	rjmp	.+212    	; 0x152 <__bad_interrupt>
      7e:	00 00       	nop
      80:	68 c0       	rjmp	.+208    	; 0x152 <__bad_interrupt>
      82:	00 00       	nop
      84:	66 c0       	rjmp	.+204    	; 0x152 <__bad_interrupt>
      86:	00 00       	nop
      88:	64 c0       	rjmp	.+200    	; 0x152 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	62 c0       	rjmp	.+196    	; 0x152 <__bad_interrupt>
      8e:	00 00       	nop
      90:	60 c0       	rjmp	.+192    	; 0x152 <__bad_interrupt>
      92:	00 00       	nop
      94:	5e c0       	rjmp	.+188    	; 0x152 <__bad_interrupt>
      96:	00 00       	nop
      98:	5c c0       	rjmp	.+184    	; 0x152 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	5a c0       	rjmp	.+180    	; 0x152 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	58 c0       	rjmp	.+176    	; 0x152 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	56 c0       	rjmp	.+172    	; 0x152 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	54 c0       	rjmp	.+168    	; 0x152 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	52 c0       	rjmp	.+164    	; 0x152 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	50 c0       	rjmp	.+160    	; 0x152 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	4e c0       	rjmp	.+156    	; 0x152 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	4c c0       	rjmp	.+152    	; 0x152 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	4a c0       	rjmp	.+148    	; 0x152 <__bad_interrupt>
      be:	00 00       	nop
      c0:	48 c0       	rjmp	.+144    	; 0x152 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	46 c0       	rjmp	.+140    	; 0x152 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	44 c0       	rjmp	.+136    	; 0x152 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	42 c0       	rjmp	.+132    	; 0x152 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	40 c0       	rjmp	.+128    	; 0x152 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	3e c0       	rjmp	.+124    	; 0x152 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	3c c0       	rjmp	.+120    	; 0x152 <__bad_interrupt>
      da:	00 00       	nop
      dc:	3a c0       	rjmp	.+116    	; 0x152 <__bad_interrupt>
      de:	00 00       	nop
      e0:	38 c0       	rjmp	.+112    	; 0x152 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	08 4a       	sbci	r16, 0xA8	; 168
      e6:	d7 3b       	cpi	r29, 0xB7	; 183
      e8:	3b ce       	rjmp	.-906    	; 0xfffffd60 <__eeprom_end+0xff7efd60>
      ea:	01 6e       	ori	r16, 0xE1	; 225
      ec:	84 bc       	out	0x24, r8	; 36
      ee:	bf fd       	.word	0xfdbf	; ????
      f0:	c1 2f       	mov	r28, r17
      f2:	3d 6c       	ori	r19, 0xCD	; 205
      f4:	74 31       	cpi	r23, 0x14	; 20
      f6:	9a bd       	out	0x2a, r25	; 42
      f8:	56 83       	std	Z+6, r21	; 0x06
      fa:	3d da       	rcall	.-2950   	; 0xfffff576 <__eeprom_end+0xff7ef576>
      fc:	3d 00       	.word	0x003d	; ????
      fe:	c7 7f       	andi	r28, 0xF7	; 247
     100:	11 be       	out	0x31, r1	; 49
     102:	d9 e4       	ldi	r29, 0x49	; 73
     104:	bb 4c       	sbci	r27, 0xCB	; 203
     106:	3e 91       	ld	r19, -X
     108:	6b aa       	std	Y+51, r6	; 0x33
     10a:	aa be       	out	0x3a, r10	; 58
     10c:	00 00       	nop
     10e:	00 80       	ld	r0, Z
     110:	3f 00       	.word	0x003f	; ????

00000112 <__ctors_end>:
     112:	11 24       	eor	r1, r1
     114:	1f be       	out	0x3f, r1	; 63
     116:	cf ef       	ldi	r28, 0xFF	; 255
     118:	d1 e2       	ldi	r29, 0x21	; 33
     11a:	de bf       	out	0x3e, r29	; 62
     11c:	cd bf       	out	0x3d, r28	; 61
     11e:	00 e0       	ldi	r16, 0x00	; 0
     120:	0c bf       	out	0x3c, r16	; 60

00000122 <__do_copy_data>:
     122:	13 e0       	ldi	r17, 0x03	; 3
     124:	a0 e0       	ldi	r26, 0x00	; 0
     126:	b2 e0       	ldi	r27, 0x02	; 2
     128:	e0 ed       	ldi	r30, 0xD0	; 208
     12a:	f4 e1       	ldi	r31, 0x14	; 20
     12c:	00 e0       	ldi	r16, 0x00	; 0
     12e:	0b bf       	out	0x3b, r16	; 59
     130:	02 c0       	rjmp	.+4      	; 0x136 <__do_copy_data+0x14>
     132:	07 90       	elpm	r0, Z+
     134:	0d 92       	st	X+, r0
     136:	a2 34       	cpi	r26, 0x42	; 66
     138:	b1 07       	cpc	r27, r17
     13a:	d9 f7       	brne	.-10     	; 0x132 <__do_copy_data+0x10>

0000013c <__do_clear_bss>:
     13c:	23 e0       	ldi	r18, 0x03	; 3
     13e:	a2 e4       	ldi	r26, 0x42	; 66
     140:	b3 e0       	ldi	r27, 0x03	; 3
     142:	01 c0       	rjmp	.+2      	; 0x146 <.do_clear_bss_start>

00000144 <.do_clear_bss_loop>:
     144:	1d 92       	st	X+, r1

00000146 <.do_clear_bss_start>:
     146:	ae 35       	cpi	r26, 0x5E	; 94
     148:	b2 07       	cpc	r27, r18
     14a:	e1 f7       	brne	.-8      	; 0x144 <.do_clear_bss_loop>
     14c:	12 d0       	rcall	.+36     	; 0x172 <main>
     14e:	0c 94 66 0a 	jmp	0x14cc	; 0x14cc <_exit>

00000152 <__bad_interrupt>:
     152:	56 cf       	rjmp	.-340    	; 0x0 <__vectors>

00000154 <__vector_5>:
#include "pwm.h"


volatile CAN_message_t received_message;
volatile uint8_t flag = 0;
ISR (INT4_vect) {
     154:	1f 92       	push	r1
     156:	0f 92       	push	r0
     158:	0f b6       	in	r0, 0x3f	; 63
     15a:	0f 92       	push	r0
     15c:	11 24       	eor	r1, r1
     15e:	8f 93       	push	r24
	//cli();
	flag= 1;
     160:	81 e0       	ldi	r24, 0x01	; 1
     162:	80 93 42 03 	sts	0x0342, r24	; 0x800342 <__data_end>
	
	
	
	//sei();
	
}
     166:	8f 91       	pop	r24
     168:	0f 90       	pop	r0
     16a:	0f be       	out	0x3f, r0	; 63
     16c:	0f 90       	pop	r0
     16e:	1f 90       	pop	r1
     170:	18 95       	reti

00000172 <main>:



int main(void)
//p.23 for can read instructions
{
     172:	cf 93       	push	r28
     174:	df 93       	push	r29
     176:	cd b7       	in	r28, 0x3d	; 61
     178:	de b7       	in	r29, 0x3e	; 62
     17a:	2b 97       	sbiw	r28, 0x0b	; 11
     17c:	0f b6       	in	r0, 0x3f	; 63
     17e:	f8 94       	cli
     180:	de bf       	out	0x3e, r29	; 62
     182:	0f be       	out	0x3f, r0	; 63
     184:	cd bf       	out	0x3d, r28	; 61
	setupInit();
     186:	48 d2       	rcall	.+1168   	; 0x618 <setupInit>
	printf("\n\r---------------------------------------\n\n\n\n\n\n\r");
     188:	86 e0       	ldi	r24, 0x06	; 6
     18a:	92 e0       	ldi	r25, 0x02	; 2
     18c:	9f 93       	push	r25
     18e:	8f 93       	push	r24
     190:	9b d5       	rcall	.+2870   	; 0xcc8 <printf>


	//test_SRAM();
	volatile CAN_message_t message;
	message.ID = 0b10101010111;
     192:	87 e5       	ldi	r24, 0x57	; 87
     194:	95 e0       	ldi	r25, 0x05	; 5
     196:	9a 87       	std	Y+10, r25	; 0x0a
     198:	89 87       	std	Y+9, r24	; 0x09
	message.data_length = 3;
     19a:	83 e0       	ldi	r24, 0x03	; 3
     19c:	8b 87       	std	Y+11, r24	; 0x0b
	message.data[0] = 13;
     19e:	8d e0       	ldi	r24, 0x0D	; 13
     1a0:	89 83       	std	Y+1, r24	; 0x01
	message.data[1] = 22;
     1a2:	86 e1       	ldi	r24, 0x16	; 22
     1a4:	8a 83       	std	Y+2, r24	; 0x02
	message.data[2] = 33;
     1a6:	81 e2       	ldi	r24, 0x21	; 33
     1a8:	8b 83       	std	Y+3, r24	; 0x03
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1aa:	2f ef       	ldi	r18, 0xFF	; 255
     1ac:	87 ea       	ldi	r24, 0xA7	; 167
     1ae:	91 e6       	ldi	r25, 0x61	; 97
     1b0:	21 50       	subi	r18, 0x01	; 1
     1b2:	80 40       	sbci	r24, 0x00	; 0
     1b4:	90 40       	sbci	r25, 0x00	; 0
     1b6:	e1 f7       	brne	.-8      	; 0x1b0 <main+0x3e>
     1b8:	00 c0       	rjmp	.+0      	; 0x1ba <main+0x48>
	
	_delay_ms(2000);
	CAN_controller_setMode(MODE_NORMAL);
     1ba:	00 00       	nop
     1bc:	80 e0       	ldi	r24, 0x00	; 0
     1be:	92 d0       	rcall	.+292    	; 0x2e4 <CAN_controller_setMode>
	pwm_setPulseWidth(2);
     1c0:	60 e0       	ldi	r22, 0x00	; 0
     1c2:	70 e0       	ldi	r23, 0x00	; 0
     1c4:	80 e0       	ldi	r24, 0x00	; 0
     1c6:	90 e4       	ldi	r25, 0x40	; 64
     1c8:	fb d1       	rcall	.+1014   	; 0x5c0 <pwm_setPulseWidth>
     1ca:	0f 90       	pop	r0
     1cc:	0f 90       	pop	r0

		//Put microcontroller to sleep until next interrupt. 

		
		if (flag) {
			printf("Message received");
     1ce:	07 e3       	ldi	r16, 0x37	; 55
     1d0:	12 e0       	ldi	r17, 0x02	; 2
		

		//Put microcontroller to sleep until next interrupt. 

		
		if (flag) {
     1d2:	80 91 42 03 	lds	r24, 0x0342	; 0x800342 <__data_end>
     1d6:	88 23       	and	r24, r24
			printf("Message received");
     1d8:	89 f0       	breq	.+34     	; 0x1fc <main+0x8a>
     1da:	1f 93       	push	r17
			flag=0;
     1dc:	0f 93       	push	r16
     1de:	74 d5       	rcall	.+2792   	; 0xcc8 <printf>
			joystick_readPositionOverCAN();
     1e0:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <__data_end>
			joystick_printPosition();
     1e4:	08 d1       	rcall	.+528    	; 0x3f6 <joystick_readPositionOverCAN>
     1e6:	5c d1       	rcall	.+696    	; 0x4a0 <joystick_printPosition>
			joystick_setServo();
     1e8:	7d d1       	rcall	.+762    	; 0x4e4 <joystick_setServo>
			uint8_t mask = 0b11; 
			CAN_controller_bitModify(mask, CANINTF, 0b00);
     1ea:	40 e0       	ldi	r20, 0x00	; 0
     1ec:	50 e0       	ldi	r21, 0x00	; 0
     1ee:	6c e2       	ldi	r22, 0x2C	; 44
     1f0:	70 e0       	ldi	r23, 0x00	; 0
     1f2:	83 e0       	ldi	r24, 0x03	; 3
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	4e d0       	rcall	.+156    	; 0x294 <CAN_controller_bitModify>
     1f8:	0f 90       	pop	r0
     1fa:	0f 90       	pop	r0
     1fc:	8f e1       	ldi	r24, 0x1F	; 31
     1fe:	9e e4       	ldi	r25, 0x4E	; 78
     200:	01 97       	sbiw	r24, 0x01	; 1
     202:	f1 f7       	brne	.-4      	; 0x200 <main+0x8e>
     204:	00 c0       	rjmp	.+0      	; 0x206 <main+0x94>
     206:	00 00       	nop
     208:	e4 cf       	rjmp	.-56     	; 0x1d2 <main+0x60>

0000020a <CAN_receiveMessage>:
     20a:	ef 92       	push	r14
	CAN_controller_RTS(buffer_number);

	//ERROR HANDLING?	
}

void CAN_receiveMessage(CAN_message_t * received_message) {
     20c:	ff 92       	push	r15
     20e:	0f 93       	push	r16
     210:	1f 93       	push	r17
     212:	cf 93       	push	r28
     214:	7c 01       	movw	r14, r24
	
	
	uint8_t buffer = 0;
	switch (buffer) {
		case 0:
				received_message->ID = ((CAN_controller_read(MCP_RXB0SIDL) & 0b11100000) >> 5) + (CAN_controller_read(MCP_RXB0SIDH) << 3); 
     216:	82 e6       	ldi	r24, 0x62	; 98
     218:	2c d0       	rcall	.+88     	; 0x272 <CAN_controller_read>
     21a:	c8 2f       	mov	r28, r24
     21c:	81 e6       	ldi	r24, 0x61	; 97
     21e:	29 d0       	rcall	.+82     	; 0x272 <CAN_controller_read>
     220:	c2 95       	swap	r28
     222:	c6 95       	lsr	r28
     224:	c7 70       	andi	r28, 0x07	; 7
     226:	28 e0       	ldi	r18, 0x08	; 8
     228:	82 9f       	mul	r24, r18
     22a:	c0 01       	movw	r24, r0
     22c:	11 24       	eor	r1, r1
     22e:	8c 0f       	add	r24, r28
     230:	91 1d       	adc	r25, r1
     232:	f7 01       	movw	r30, r14
     234:	91 87       	std	Z+9, r25	; 0x09
     236:	80 87       	std	Z+8, r24	; 0x08
				
				//printf("Whole id: %i\n\r", received_message->ID);
				received_message->data_length = (CAN_controller_read(MCP_RXB0DLC) & 0b00001111);
     238:	85 e6       	ldi	r24, 0x65	; 101
     23a:	1b d0       	rcall	.+54     	; 0x272 <CAN_controller_read>
     23c:	8f 70       	andi	r24, 0x0F	; 15
     23e:	f7 01       	movw	r30, r14
     240:	82 87       	std	Z+10, r24	; 0x0a
     242:	82 85       	ldd	r24, Z+10	; 0x0a
				//printf("data length read: %i\n\r",(CAN_controller_read(MCP_RXB0DLC) & 0b00001111));
				for (uint8_t i = 0; i != received_message->data_length; i++) {
     244:	88 23       	and	r24, r24
     246:	79 f0       	breq	.+30     	; 0x266 <CAN_receiveMessage+0x5c>
     248:	c0 e0       	ldi	r28, 0x00	; 0
     24a:	0c 2f       	mov	r16, r28
					received_message->data[i] = CAN_controller_read(MCP_RXB0D0 + i);
     24c:	10 e0       	ldi	r17, 0x00	; 0
     24e:	86 e6       	ldi	r24, 0x66	; 102
     250:	8c 0f       	add	r24, r28
     252:	0f d0       	rcall	.+30     	; 0x272 <CAN_controller_read>
     254:	f7 01       	movw	r30, r14
     256:	e0 0f       	add	r30, r16
     258:	f1 1f       	adc	r31, r17
     25a:	80 83       	st	Z, r24
     25c:	cf 5f       	subi	r28, 0xFF	; 255
				received_message->ID = ((CAN_controller_read(MCP_RXB0SIDL) & 0b11100000) >> 5) + (CAN_controller_read(MCP_RXB0SIDH) << 3); 
				
				//printf("Whole id: %i\n\r", received_message->ID);
				received_message->data_length = (CAN_controller_read(MCP_RXB0DLC) & 0b00001111);
				//printf("data length read: %i\n\r",(CAN_controller_read(MCP_RXB0DLC) & 0b00001111));
				for (uint8_t i = 0; i != received_message->data_length; i++) {
     25e:	f7 01       	movw	r30, r14
     260:	82 85       	ldd	r24, Z+10	; 0x0a
     262:	8c 13       	cpse	r24, r28
     264:	f2 cf       	rjmp	.-28     	; 0x24a <CAN_receiveMessage+0x40>
     266:	cf 91       	pop	r28
	}
	
	
	
	
}
     268:	1f 91       	pop	r17
     26a:	0f 91       	pop	r16
     26c:	ff 90       	pop	r15
     26e:	ef 90       	pop	r14
     270:	08 95       	ret

00000272 <CAN_controller_read>:
     272:	cf 93       	push	r28
		default: 
			break;
			
	}
	SPI_setChipSelect(PB7, 1);
}
     274:	c8 2f       	mov	r28, r24
     276:	60 e0       	ldi	r22, 0x00	; 0
     278:	87 e0       	ldi	r24, 0x07	; 7
     27a:	e8 d1       	rcall	.+976    	; 0x64c <SPI_setChipSelect>
     27c:	83 e0       	ldi	r24, 0x03	; 3
     27e:	db d1       	rcall	.+950    	; 0x636 <SPI_masterWrite>
     280:	8c 2f       	mov	r24, r28
     282:	d9 d1       	rcall	.+946    	; 0x636 <SPI_masterWrite>
     284:	dd d1       	rcall	.+954    	; 0x640 <SPI_masterRead>
     286:	c8 2f       	mov	r28, r24
     288:	61 e0       	ldi	r22, 0x01	; 1
     28a:	87 e0       	ldi	r24, 0x07	; 7
     28c:	df d1       	rcall	.+958    	; 0x64c <SPI_setChipSelect>
     28e:	8c 2f       	mov	r24, r28
     290:	cf 91       	pop	r28
     292:	08 95       	ret

00000294 <CAN_controller_bitModify>:
     294:	1f 93       	push	r17
     296:	cf 93       	push	r28
     298:	df 93       	push	r29
     29a:	d8 2f       	mov	r29, r24
     29c:	16 2f       	mov	r17, r22
     29e:	c4 2f       	mov	r28, r20
     2a0:	60 e0       	ldi	r22, 0x00	; 0
     2a2:	87 e0       	ldi	r24, 0x07	; 7
     2a4:	d3 d1       	rcall	.+934    	; 0x64c <SPI_setChipSelect>
     2a6:	85 e0       	ldi	r24, 0x05	; 5
     2a8:	c6 d1       	rcall	.+908    	; 0x636 <SPI_masterWrite>
     2aa:	81 2f       	mov	r24, r17
     2ac:	c4 d1       	rcall	.+904    	; 0x636 <SPI_masterWrite>
     2ae:	8d 2f       	mov	r24, r29
     2b0:	c2 d1       	rcall	.+900    	; 0x636 <SPI_masterWrite>
     2b2:	8c 2f       	mov	r24, r28
     2b4:	c0 d1       	rcall	.+896    	; 0x636 <SPI_masterWrite>
     2b6:	61 e0       	ldi	r22, 0x01	; 1
     2b8:	87 e0       	ldi	r24, 0x07	; 7
     2ba:	c8 d1       	rcall	.+912    	; 0x64c <SPI_setChipSelect>
     2bc:	df 91       	pop	r29
     2be:	cf 91       	pop	r28
     2c0:	1f 91       	pop	r17
     2c2:	08 95       	ret

000002c4 <CAN_controller_reset>:
     2c4:	60 e0       	ldi	r22, 0x00	; 0
     2c6:	87 e0       	ldi	r24, 0x07	; 7
     2c8:	c1 d1       	rcall	.+898    	; 0x64c <SPI_setChipSelect>
     2ca:	88 e4       	ldi	r24, 0x48	; 72
     2cc:	92 e0       	ldi	r25, 0x02	; 2
     2ce:	9f 93       	push	r25
     2d0:	8f 93       	push	r24
     2d2:	fa d4       	rcall	.+2548   	; 0xcc8 <printf>
     2d4:	80 ec       	ldi	r24, 0xC0	; 192
     2d6:	af d1       	rcall	.+862    	; 0x636 <SPI_masterWrite>
     2d8:	61 e0       	ldi	r22, 0x01	; 1
     2da:	87 e0       	ldi	r24, 0x07	; 7
     2dc:	b7 d1       	rcall	.+878    	; 0x64c <SPI_setChipSelect>
     2de:	0f 90       	pop	r0
     2e0:	0f 90       	pop	r0
     2e2:	08 95       	ret

000002e4 <CAN_controller_setMode>:

void CAN_controller_setMode(uint8_t mode) {
     2e4:	cf 93       	push	r28
     2e6:	df 93       	push	r29
     2e8:	c8 2f       	mov	r28, r24
	
	
	
	CAN_controller_reset();
     2ea:	ec df       	rcall	.-40     	; 0x2c4 <CAN_controller_reset>
	uint8_t status = CAN_controller_read(MCP_CANSTAT);
     2ec:	8e e0       	ldi	r24, 0x0E	; 14
     2ee:	c1 df       	rcall	.-126    	; 0x272 <CAN_controller_read>
	uint8_t mode_bits = (status & MODE_MASK);
     2f0:	80 7e       	andi	r24, 0xE0	; 224
	
	if (mode_bits != MODE_CONFIG) {
     2f2:	80 38       	cpi	r24, 0x80	; 128
     2f4:	61 f0       	breq	.+24     	; 0x30e <CAN_controller_setMode+0x2a>
		printf("Not in config mode, \t %i\n\r", mode_bits);
     2f6:	1f 92       	push	r1
     2f8:	8f 93       	push	r24
     2fa:	84 e5       	ldi	r24, 0x54	; 84
     2fc:	92 e0       	ldi	r25, 0x02	; 2
     2fe:	9f 93       	push	r25
     300:	8f 93       	push	r24
     302:	e2 d4       	rcall	.+2500   	; 0xcc8 <printf>
		return;
     304:	0f 90       	pop	r0
     306:	0f 90       	pop	r0
     308:	0f 90       	pop	r0
     30a:	0f 90       	pop	r0
     30c:	32 c0       	rjmp	.+100    	; 0x372 <CAN_controller_setMode+0x8e>
	}
	
	
	//set in loopback mode p.60 MCP2515
	CAN_controller_bitModify(0b11101110, MCP_CANCTRL, mode | (0b1100));
     30e:	4c 2f       	mov	r20, r28
     310:	4c 60       	ori	r20, 0x0C	; 12
     312:	6f e0       	ldi	r22, 0x0F	; 15
     314:	8e ee       	ldi	r24, 0xEE	; 238
     316:	be df       	rcall	.-132    	; 0x294 <CAN_controller_bitModify>
	CAN_controller_bitModify(0b11111111, MCP_CANINTE, 0b1);
     318:	41 e0       	ldi	r20, 0x01	; 1
     31a:	6b e2       	ldi	r22, 0x2B	; 43
     31c:	8f ef       	ldi	r24, 0xFF	; 255
     31e:	ba df       	rcall	.-140    	; 0x294 <CAN_controller_bitModify>
	CAN_controller_bitModify(0b01100000, MCP_RXB0CTRL, 0b01100000); //receive any type of message, no filter p. 27
     320:	40 e6       	ldi	r20, 0x60	; 96
     322:	60 e6       	ldi	r22, 0x60	; 96
     324:	80 e6       	ldi	r24, 0x60	; 96
     326:	b6 df       	rcall	.-148    	; 0x294 <CAN_controller_bitModify>
     328:	2f ef       	ldi	r18, 0xFF	; 255
     32a:	83 ec       	ldi	r24, 0xC3	; 195
     32c:	99 e0       	ldi	r25, 0x09	; 9
     32e:	21 50       	subi	r18, 0x01	; 1
     330:	80 40       	sbci	r24, 0x00	; 0
     332:	90 40       	sbci	r25, 0x00	; 0
     334:	e1 f7       	brne	.-8      	; 0x32e <CAN_controller_setMode+0x4a>
     336:	00 c0       	rjmp	.+0      	; 0x338 <CAN_controller_setMode+0x54>
     338:	00 00       	nop

	_delay_ms(200);
	status = CAN_controller_read(MCP_CANSTAT);
     33a:	8e e0       	ldi	r24, 0x0E	; 14
     33c:	9a df       	rcall	.-204    	; 0x272 <CAN_controller_read>
     33e:	d8 2f       	mov	r29, r24
	mode_bits = (status & MODE_MASK);
     340:	d0 7e       	andi	r29, 0xE0	; 224
     342:	cd 17       	cp	r28, r29
	if (mode_bits != mode) {
     344:	59 f0       	breq	.+22     	; 0x35c <CAN_controller_setMode+0x78>
		printf("Not in correct mode: Mode: %i\n\r", mode_bits);
     346:	1f 92       	push	r1
     348:	df 93       	push	r29
     34a:	8f e6       	ldi	r24, 0x6F	; 111
     34c:	92 e0       	ldi	r25, 0x02	; 2
     34e:	9f 93       	push	r25
     350:	8f 93       	push	r24
     352:	ba d4       	rcall	.+2420   	; 0xcc8 <printf>
     354:	0f 90       	pop	r0
     356:	0f 90       	pop	r0
     358:	0f 90       	pop	r0
     35a:	0f 90       	pop	r0

	}
	printf("Mode set: %i\n\r", status & MODE_MASK);
     35c:	1f 92       	push	r1
     35e:	df 93       	push	r29
     360:	8f e8       	ldi	r24, 0x8F	; 143
     362:	92 e0       	ldi	r25, 0x02	; 2
     364:	9f 93       	push	r25
     366:	8f 93       	push	r24
     368:	af d4       	rcall	.+2398   	; 0xcc8 <printf>
     36a:	0f 90       	pop	r0
     36c:	0f 90       	pop	r0
     36e:	0f 90       	pop	r0
     370:	0f 90       	pop	r0
     372:	df 91       	pop	r29
}
     374:	cf 91       	pop	r28
     376:	08 95       	ret

00000378 <CAN_controller_init>:
     378:	8e e9       	ldi	r24, 0x9E	; 158
	SPI_masterWrite(MCP_RESET);
	SPI_setChipSelect(PB7, 1);
}
void CAN_controller_init() {
	
	printf("Can controller init \n\r");
     37a:	92 e0       	ldi	r25, 0x02	; 2
     37c:	9f 93       	push	r25
     37e:	8f 93       	push	r24
     380:	a3 d4       	rcall	.+2374   	; 0xcc8 <printf>
	SPI_masterInit();
     382:	50 d1       	rcall	.+672    	; 0x624 <SPI_masterInit>
     384:	85 eb       	ldi	r24, 0xB5	; 181
	printf("SPI master init done \n\r");
     386:	92 e0       	ldi	r25, 0x02	; 2
     388:	9f 93       	push	r25
     38a:	8f 93       	push	r24
     38c:	9d d4       	rcall	.+2362   	; 0xcc8 <printf>

	CAN_controller_setMode(MODE_LOOPBACK);
     38e:	80 e4       	ldi	r24, 0x40	; 64
     390:	a9 df       	rcall	.-174    	; 0x2e4 <CAN_controller_setMode>
     392:	8d ec       	ldi	r24, 0xCD	; 205
	printf("Modes set \n\r");
     394:	92 e0       	ldi	r25, 0x02	; 2
     396:	9f 93       	push	r25
     398:	8f 93       	push	r24
     39a:	96 d4       	rcall	.+2348   	; 0xcc8 <printf>
     39c:	78 94       	sei

	//set interrupt on 2560
	//Global interrupt enable
	sei();
     39e:	ec 9a       	sbi	0x1d, 4	; 29
	//SREG |= (1 << I);
	EIMSK |= 1 << INT4;	//interrupt on pin INT4
     3a0:	ea e6       	ldi	r30, 0x6A	; 106
	EICRB |= 1 << ISC41; //Turn on falling edge
     3a2:	f0 e0       	ldi	r31, 0x00	; 0
     3a4:	80 81       	ld	r24, Z
     3a6:	82 60       	ori	r24, 0x02	; 2
     3a8:	80 83       	st	Z, r24
     3aa:	80 81       	ld	r24, Z
	EICRB &= ~(1 << ISC40); //....
     3ac:	8e 7f       	andi	r24, 0xFE	; 254
     3ae:	80 83       	st	Z, r24
     3b0:	8d b1       	in	r24, 0x0d	; 13

//set PD2 as input
	DDRE  &= (1 << PE4); //set as input.
     3b2:	80 71       	andi	r24, 0x10	; 16
     3b4:	8d b9       	out	0x0d, r24	; 13
     3b6:	2f ef       	ldi	r18, 0xFF	; 255
     3b8:	83 ec       	ldi	r24, 0xC3	; 195
     3ba:	99 e0       	ldi	r25, 0x09	; 9
     3bc:	21 50       	subi	r18, 0x01	; 1
     3be:	80 40       	sbci	r24, 0x00	; 0
     3c0:	90 40       	sbci	r25, 0x00	; 0
     3c2:	e1 f7       	brne	.-8      	; 0x3bc <CAN_controller_init+0x44>
     3c4:	00 c0       	rjmp	.+0      	; 0x3c6 <CAN_controller_init+0x4e>
     3c6:	00 00       	nop
	
	
	
	_delay_ms(200);
	printf("after write to canctrl\n\r");
     3c8:	8a ed       	ldi	r24, 0xDA	; 218
     3ca:	92 e0       	ldi	r25, 0x02	; 2
     3cc:	9f 93       	push	r25
     3ce:	8f 93       	push	r24
     3d0:	7b d4       	rcall	.+2294   	; 0xcc8 <printf>
	
	//Check CANSTAT register
	uint8_t status = CAN_controller_read(MCP_CANSTAT);
     3d2:	8e e0       	ldi	r24, 0x0E	; 14
     3d4:	4e df       	rcall	.-356    	; 0x272 <CAN_controller_read>
	printf("Data: %i\n\r", status);
     3d6:	1f 92       	push	r1
     3d8:	8f 93       	push	r24
     3da:	83 ef       	ldi	r24, 0xF3	; 243
     3dc:	92 e0       	ldi	r25, 0x02	; 2
     3de:	9f 93       	push	r25
     3e0:	8f 93       	push	r24
     3e2:	72 d4       	rcall	.+2276   	; 0xcc8 <printf>
     3e4:	8d b7       	in	r24, 0x3d	; 61

}
     3e6:	9e b7       	in	r25, 0x3e	; 62
     3e8:	0c 96       	adiw	r24, 0x0c	; 12
     3ea:	0f b6       	in	r0, 0x3f	; 63
     3ec:	f8 94       	cli
     3ee:	9e bf       	out	0x3e, r25	; 62
     3f0:	0f be       	out	0x3f, r0	; 63
     3f2:	8d bf       	out	0x3d, r24	; 61
     3f4:	08 95       	ret

000003f6 <joystick_readPositionOverCAN>:
     3f6:	8f 92       	push	r8
#include "CAN.h"
#include "pwm.h"
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
void joystick_readPositionOverCAN() {
     3f8:	9f 92       	push	r9
     3fa:	af 92       	push	r10
     3fc:	bf 92       	push	r11
     3fe:	ff 92       	push	r15
     400:	0f 93       	push	r16
     402:	1f 93       	push	r17
     404:	cf 93       	push	r28
     406:	df 93       	push	r29
     408:	cd b7       	in	r28, 0x3d	; 61
     40a:	de b7       	in	r29, 0x3e	; 62
     40c:	2b 97       	sbiw	r28, 0x0b	; 11
     40e:	0f b6       	in	r0, 0x3f	; 63
     410:	f8 94       	cli
     412:	de bf       	out	0x3e, r29	; 62
     414:	0f be       	out	0x3f, r0	; 63
     416:	cd bf       	out	0x3d, r28	; 61
	CAN_message_t mess;
	CAN_receiveMessage(&mess);
     418:	ce 01       	movw	r24, r28
     41a:	01 96       	adiw	r24, 0x01	; 1
     41c:	f6 de       	rcall	.-532    	; 0x20a <CAN_receiveMessage>
	
	if (mess.ID = 0x01) {
     41e:	81 e0       	ldi	r24, 0x01	; 1
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	9a 87       	std	Y+10, r25	; 0x0a
     424:	89 87       	std	Y+9, r24	; 0x09
		joystick_pos.x_pos = mess.data[0];
     426:	89 81       	ldd	r24, Y+1	; 0x01
     428:	03 e4       	ldi	r16, 0x43	; 67
     42a:	13 e0       	ldi	r17, 0x03	; 3
     42c:	f8 01       	movw	r30, r16
     42e:	80 83       	st	Z, r24
		joystick_pos.y_pos = mess.data[1];
     430:	8a 81       	ldd	r24, Y+2	; 0x02
     432:	81 83       	std	Z+1, r24	; 0x01
		joystick_pos.angle = atan2(joystick_pos.y_pos, joystick_pos.x_pos)*360/2.0/3.14;
     434:	60 81       	ld	r22, Z
     436:	f1 80       	ldd	r15, Z+1	; 0x01
     438:	06 2e       	mov	r0, r22
     43a:	00 0c       	add	r0, r0
     43c:	77 0b       	sbc	r23, r23
     43e:	88 0b       	sbc	r24, r24
     440:	99 0b       	sbc	r25, r25
     442:	b2 d2       	rcall	.+1380   	; 0x9a8 <__floatsisf>
     444:	4b 01       	movw	r8, r22
     446:	5c 01       	movw	r10, r24
     448:	6f 2d       	mov	r22, r15
     44a:	ff 0c       	add	r15, r15
     44c:	77 0b       	sbc	r23, r23
     44e:	88 0b       	sbc	r24, r24
     450:	99 0b       	sbc	r25, r25
     452:	aa d2       	rcall	.+1364   	; 0x9a8 <__floatsisf>
     454:	a5 01       	movw	r20, r10
     456:	94 01       	movw	r18, r8
     458:	b5 d1       	rcall	.+874    	; 0x7c4 <atan2>
     45a:	20 e0       	ldi	r18, 0x00	; 0
     45c:	30 e0       	ldi	r19, 0x00	; 0
     45e:	44 eb       	ldi	r20, 0xB4	; 180
     460:	53 e4       	ldi	r21, 0x43	; 67
     462:	82 d3       	rcall	.+1796   	; 0xb68 <__mulsf3>
     464:	20 e0       	ldi	r18, 0x00	; 0
     466:	30 e0       	ldi	r19, 0x00	; 0
     468:	40 e0       	ldi	r20, 0x00	; 0
     46a:	5f e3       	ldi	r21, 0x3F	; 63
     46c:	7d d3       	rcall	.+1786   	; 0xb68 <__mulsf3>
     46e:	23 ec       	ldi	r18, 0xC3	; 195
     470:	35 ef       	ldi	r19, 0xF5	; 245
     472:	48 e4       	ldi	r20, 0x48	; 72
     474:	50 e4       	ldi	r21, 0x40	; 64
     476:	fd d1       	rcall	.+1018   	; 0x872 <__divsf3>
     478:	64 d2       	rcall	.+1224   	; 0x942 <__fixsfsi>
     47a:	f8 01       	movw	r30, r16
     47c:	73 83       	std	Z+3, r23	; 0x03
     47e:	62 83       	std	Z+2, r22	; 0x02
	}
}
     480:	2b 96       	adiw	r28, 0x0b	; 11
     482:	0f b6       	in	r0, 0x3f	; 63
     484:	f8 94       	cli
     486:	de bf       	out	0x3e, r29	; 62
     488:	0f be       	out	0x3f, r0	; 63
     48a:	cd bf       	out	0x3d, r28	; 61
     48c:	df 91       	pop	r29
     48e:	cf 91       	pop	r28
     490:	1f 91       	pop	r17
     492:	0f 91       	pop	r16
     494:	ff 90       	pop	r15
     496:	bf 90       	pop	r11
     498:	af 90       	pop	r10
     49a:	9f 90       	pop	r9
     49c:	8f 90       	pop	r8
     49e:	08 95       	ret

000004a0 <joystick_printPosition>:

void joystick_printPosition() {
	printf("X: %i\tY: %i\n\rAngle: %i\n\r", joystick_pos.x_pos, joystick_pos.y_pos, joystick_pos.angle);
     4a0:	e3 e4       	ldi	r30, 0x43	; 67
     4a2:	f3 e0       	ldi	r31, 0x03	; 3
     4a4:	22 81       	ldd	r18, Z+2	; 0x02
     4a6:	33 81       	ldd	r19, Z+3	; 0x03
     4a8:	91 81       	ldd	r25, Z+1	; 0x01
     4aa:	80 81       	ld	r24, Z
     4ac:	3f 93       	push	r19
     4ae:	2f 93       	push	r18
     4b0:	29 2f       	mov	r18, r25
     4b2:	09 2e       	mov	r0, r25
     4b4:	00 0c       	add	r0, r0
     4b6:	33 0b       	sbc	r19, r19
     4b8:	3f 93       	push	r19
     4ba:	9f 93       	push	r25
     4bc:	28 2f       	mov	r18, r24
     4be:	08 2e       	mov	r0, r24
     4c0:	00 0c       	add	r0, r0
     4c2:	33 0b       	sbc	r19, r19
     4c4:	3f 93       	push	r19
     4c6:	8f 93       	push	r24
     4c8:	8e ef       	ldi	r24, 0xFE	; 254
     4ca:	92 e0       	ldi	r25, 0x02	; 2
     4cc:	9f 93       	push	r25
     4ce:	8f 93       	push	r24
     4d0:	fb d3       	rcall	.+2038   	; 0xcc8 <printf>
}
     4d2:	8d b7       	in	r24, 0x3d	; 61
     4d4:	9e b7       	in	r25, 0x3e	; 62
     4d6:	08 96       	adiw	r24, 0x08	; 8
     4d8:	0f b6       	in	r0, 0x3f	; 63
     4da:	f8 94       	cli
     4dc:	9e bf       	out	0x3e, r25	; 62
     4de:	0f be       	out	0x3f, r0	; 63
     4e0:	8d bf       	out	0x3d, r24	; 61
     4e2:	08 95       	ret

000004e4 <joystick_setServo>:

void joystick_setServo() {
     4e4:	cf 93       	push	r28
     4e6:	df 93       	push	r29
		float var = ((float)joystick_pos.x_pos+100.0)/200.0*(2.1-0.9)+0.9;
     4e8:	c3 e4       	ldi	r28, 0x43	; 67
     4ea:	d3 e0       	ldi	r29, 0x03	; 3
     4ec:	68 81       	ld	r22, Y
		printf("servo value: %.6f\n\r",(var));
     4ee:	06 2e       	mov	r0, r22
     4f0:	00 0c       	add	r0, r0
     4f2:	77 0b       	sbc	r23, r23
     4f4:	88 0b       	sbc	r24, r24
     4f6:	99 0b       	sbc	r25, r25
     4f8:	57 d2       	rcall	.+1198   	; 0x9a8 <__floatsisf>
     4fa:	20 e0       	ldi	r18, 0x00	; 0
     4fc:	30 e0       	ldi	r19, 0x00	; 0
     4fe:	48 ec       	ldi	r20, 0xC8	; 200
     500:	52 e4       	ldi	r21, 0x42	; 66
     502:	ed d0       	rcall	.+474    	; 0x6de <__addsf3>
     504:	20 e0       	ldi	r18, 0x00	; 0
     506:	30 e0       	ldi	r19, 0x00	; 0
     508:	48 e4       	ldi	r20, 0x48	; 72
     50a:	53 e4       	ldi	r21, 0x43	; 67
     50c:	b2 d1       	rcall	.+868    	; 0x872 <__divsf3>
     50e:	29 e9       	ldi	r18, 0x99	; 153
     510:	39 e9       	ldi	r19, 0x99	; 153
     512:	49 e9       	ldi	r20, 0x99	; 153
     514:	5f e3       	ldi	r21, 0x3F	; 63
     516:	28 d3       	rcall	.+1616   	; 0xb68 <__mulsf3>
     518:	26 e6       	ldi	r18, 0x66	; 102
     51a:	36 e6       	ldi	r19, 0x66	; 102
     51c:	46 e6       	ldi	r20, 0x66	; 102
     51e:	5f e3       	ldi	r21, 0x3F	; 63
     520:	de d0       	rcall	.+444    	; 0x6de <__addsf3>
     522:	9f 93       	push	r25
     524:	8f 93       	push	r24
     526:	7f 93       	push	r23
     528:	6f 93       	push	r22
     52a:	87 e1       	ldi	r24, 0x17	; 23
     52c:	93 e0       	ldi	r25, 0x03	; 3
     52e:	9f 93       	push	r25
     530:	8f 93       	push	r24
     532:	ca d3       	rcall	.+1940   	; 0xcc8 <printf>
		pwm_setPulseWidth((joystick_pos.x_pos+100.0)/200.0*(2.1-0.9)+0.9);
     534:	68 81       	ld	r22, Y
     536:	06 2e       	mov	r0, r22
     538:	00 0c       	add	r0, r0
     53a:	77 0b       	sbc	r23, r23
     53c:	88 0b       	sbc	r24, r24
     53e:	99 0b       	sbc	r25, r25
     540:	33 d2       	rcall	.+1126   	; 0x9a8 <__floatsisf>
     542:	20 e0       	ldi	r18, 0x00	; 0
     544:	30 e0       	ldi	r19, 0x00	; 0
     546:	48 ec       	ldi	r20, 0xC8	; 200
     548:	52 e4       	ldi	r21, 0x42	; 66
     54a:	c9 d0       	rcall	.+402    	; 0x6de <__addsf3>
     54c:	20 e0       	ldi	r18, 0x00	; 0
     54e:	30 e0       	ldi	r19, 0x00	; 0
     550:	48 e4       	ldi	r20, 0x48	; 72
     552:	53 e4       	ldi	r21, 0x43	; 67
     554:	8e d1       	rcall	.+796    	; 0x872 <__divsf3>
     556:	29 e9       	ldi	r18, 0x99	; 153
     558:	39 e9       	ldi	r19, 0x99	; 153
     55a:	49 e9       	ldi	r20, 0x99	; 153
     55c:	5f e3       	ldi	r21, 0x3F	; 63
     55e:	04 d3       	rcall	.+1544   	; 0xb68 <__mulsf3>
     560:	26 e6       	ldi	r18, 0x66	; 102
     562:	36 e6       	ldi	r19, 0x66	; 102
     564:	46 e6       	ldi	r20, 0x66	; 102
     566:	5f e3       	ldi	r21, 0x3F	; 63
     568:	ba d0       	rcall	.+372    	; 0x6de <__addsf3>
     56a:	2a d0       	rcall	.+84     	; 0x5c0 <pwm_setPulseWidth>
	
     56c:	0f 90       	pop	r0
     56e:	0f 90       	pop	r0
     570:	0f 90       	pop	r0
     572:	0f 90       	pop	r0
     574:	0f 90       	pop	r0
     576:	0f 90       	pop	r0
     578:	df 91       	pop	r29
     57a:	cf 91       	pop	r28
     57c:	08 95       	ret

0000057e <pwm_init>:
#define PWM_PRESCALER				8
#define ICR_PERIOD					(F_CPU*PERIOD_MS)/PWM_PRESCALER/1000

void pwm_init() {
	//set output pin
	DDRB |= (1 << PB5);
     57e:	25 9a       	sbi	0x04, 5	; 4
	
	//Reset prescaler, then set to 8.
	TCCR1B &= PRESC_OFF;
     580:	e1 e8       	ldi	r30, 0x81	; 129
     582:	f0 e0       	ldi	r31, 0x00	; 0
     584:	80 81       	ld	r24, Z
     586:	88 7f       	andi	r24, 0xF8	; 248
     588:	80 83       	st	Z, r24
	TCCR1B |= PRESC_8;
     58a:	80 81       	ld	r24, Z
     58c:	82 60       	ori	r24, 0x02	; 2
     58e:	80 83       	st	Z, r24

	//set ocr0 register as something
	
	//Timer incremented until counter value matches value in OCR1A
	TCCR1A |= (1 << WGM11 & ~(1 <<WGM10));
     590:	a0 e8       	ldi	r26, 0x80	; 128
     592:	b0 e0       	ldi	r27, 0x00	; 0
     594:	8c 91       	ld	r24, X
     596:	82 60       	ori	r24, 0x02	; 2
     598:	8c 93       	st	X, r24
	TCCR1B |= (1 << WGM13 | 1 << WGM12);
     59a:	80 81       	ld	r24, Z
     59c:	88 61       	ori	r24, 0x18	; 24
     59e:	80 83       	st	Z, r24
	
	//Set compare output mode on channel A
	TCCR1A |= (1 << COM1A1 & ~(COM1A0));
     5a0:	8c 91       	ld	r24, X
     5a2:	80 68       	ori	r24, 0x80	; 128
     5a4:	8c 93       	st	X, r24
	
	
	
	//set period to 20ms
	ICR1 = ICR_PERIOD;
     5a6:	80 e4       	ldi	r24, 0x40	; 64
     5a8:	9c e9       	ldi	r25, 0x9C	; 156
     5aa:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x700087>
     5ae:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x700086>
	

	
	//Set initial pulsewidth
	OCR1A = ICR_PERIOD/(20)*(2.1+0.9)/2;
     5b2:	88 eb       	ldi	r24, 0xB8	; 184
     5b4:	9b e0       	ldi	r25, 0x0B	; 11
     5b6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     5ba:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     5be:	08 95       	ret

000005c0 <pwm_setPulseWidth>:

}

void pwm_setPulseWidth(float width_ms) {
     5c0:	cf 92       	push	r12
     5c2:	df 92       	push	r13
     5c4:	ef 92       	push	r14
     5c6:	ff 92       	push	r15
     5c8:	6b 01       	movw	r12, r22
     5ca:	7c 01       	movw	r14, r24
	
	
	if (width_ms >= 0.9 && width_ms <=2.1) {
     5cc:	26 e6       	ldi	r18, 0x66	; 102
     5ce:	36 e6       	ldi	r19, 0x66	; 102
     5d0:	46 e6       	ldi	r20, 0x66	; 102
     5d2:	5f e3       	ldi	r21, 0x3F	; 63
     5d4:	be d2       	rcall	.+1404   	; 0xb52 <__gesf2>
     5d6:	88 23       	and	r24, r24
     5d8:	d4 f0       	brlt	.+52     	; 0x60e <pwm_setPulseWidth+0x4e>
     5da:	26 e6       	ldi	r18, 0x66	; 102
     5dc:	36 e6       	ldi	r19, 0x66	; 102
     5de:	46 e0       	ldi	r20, 0x06	; 6
     5e0:	50 e4       	ldi	r21, 0x40	; 64
     5e2:	c7 01       	movw	r24, r14
     5e4:	b6 01       	movw	r22, r12
     5e6:	41 d1       	rcall	.+642    	; 0x86a <__cmpsf2>
     5e8:	18 16       	cp	r1, r24
     5ea:	8c f0       	brlt	.+34     	; 0x60e <pwm_setPulseWidth+0x4e>
		
		
		float dutyCycle = width_ms/PERIOD_MS;
		uint32_t pulse = dutyCycle*(ICR_PERIOD);
		
		OCR1A = pulse;
     5ec:	20 e0       	ldi	r18, 0x00	; 0
     5ee:	30 e0       	ldi	r19, 0x00	; 0
     5f0:	40 ea       	ldi	r20, 0xA0	; 160
     5f2:	51 e4       	ldi	r21, 0x41	; 65
     5f4:	c7 01       	movw	r24, r14
     5f6:	b6 01       	movw	r22, r12
     5f8:	3c d1       	rcall	.+632    	; 0x872 <__divsf3>
     5fa:	20 e0       	ldi	r18, 0x00	; 0
     5fc:	30 e4       	ldi	r19, 0x40	; 64
     5fe:	4c e1       	ldi	r20, 0x1C	; 28
     600:	57 e4       	ldi	r21, 0x47	; 71
     602:	b2 d2       	rcall	.+1380   	; 0xb68 <__mulsf3>
     604:	a3 d1       	rcall	.+838    	; 0x94c <__fixunssfsi>
     606:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     60a:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
		
	}
	
	
     60e:	ff 90       	pop	r15
     610:	ef 90       	pop	r14
     612:	df 90       	pop	r13
     614:	cf 90       	pop	r12
     616:	08 95       	ret

00000618 <setupInit>:
#include "setup.h"
#include "timer.h"

	void setupInit(void){
	//cli();
	USART_init(MYUBRR);
     618:	87 e6       	ldi	r24, 0x67	; 103
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	44 d0       	rcall	.+136    	; 0x6a6 <USART_init>
	CAN_controller_init();
     61e:	ac de       	rcall	.-680    	; 0x378 <CAN_controller_init>
	pwm_init();
     620:	ae cf       	rjmp	.-164    	; 0x57e <pwm_init>
     622:	08 95       	ret

00000624 <SPI_masterInit>:
     624:	84 b1       	in	r24, 0x04	; 4
	SPI_setChipSelect(PB7, 1);
}

void SPI_slaveInit(void) {
	DDRB = (1 << PB3);
	SPCR = (1 << SPE);
     626:	87 60       	ori	r24, 0x07	; 7
     628:	84 b9       	out	0x04, r24	; 4
     62a:	27 9a       	sbi	0x04, 7	; 4
     62c:	8c b5       	in	r24, 0x2c	; 44
     62e:	81 65       	ori	r24, 0x51	; 81
     630:	8c bd       	out	0x2c, r24	; 44
     632:	2f 9a       	sbi	0x05, 7	; 5
     634:	08 95       	ret

00000636 <SPI_masterWrite>:
	
}
void SPI_masterWrite(char cData)
{
	SPDR = cData;
     636:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR & (1<<SPIF)));
     638:	0d b4       	in	r0, 0x2d	; 45
     63a:	07 fe       	sbrs	r0, 7
     63c:	fd cf       	rjmp	.-6      	; 0x638 <SPI_masterWrite+0x2>

}
     63e:	08 95       	ret

00000640 <SPI_masterRead>:

uint8_t SPI_masterRead() {
	SPDR = 0;
     640:	1e bc       	out	0x2e, r1	; 46
	while (!(SPSR & (1<<SPIF)));
     642:	0d b4       	in	r0, 0x2d	; 45
     644:	07 fe       	sbrs	r0, 7
     646:	fd cf       	rjmp	.-6      	; 0x642 <SPI_masterRead+0x2>
	return SPDR;
     648:	8e b5       	in	r24, 0x2e	; 46
}
     64a:	08 95       	ret

0000064c <SPI_setChipSelect>:

void SPI_setChipSelect(uint8_t pin, uint8_t setHigh ) {
	if (setHigh) {
     64c:	66 23       	and	r22, r22
     64e:	69 f0       	breq	.+26     	; 0x66a <SPI_setChipSelect+0x1e>
		PORTB |= (1 << pin); //chip select high
     650:	45 b1       	in	r20, 0x05	; 5
     652:	21 e0       	ldi	r18, 0x01	; 1
     654:	30 e0       	ldi	r19, 0x00	; 0
     656:	b9 01       	movw	r22, r18
     658:	02 c0       	rjmp	.+4      	; 0x65e <SPI_setChipSelect+0x12>
     65a:	66 0f       	add	r22, r22
     65c:	77 1f       	adc	r23, r23
     65e:	8a 95       	dec	r24
     660:	e2 f7       	brpl	.-8      	; 0x65a <SPI_setChipSelect+0xe>
     662:	cb 01       	movw	r24, r22
     664:	84 2b       	or	r24, r20
     666:	85 b9       	out	0x05, r24	; 5
     668:	08 95       	ret
	}
	else {
		PORTB &= ~(1 << pin); //chip select low
     66a:	45 b1       	in	r20, 0x05	; 5
     66c:	21 e0       	ldi	r18, 0x01	; 1
     66e:	30 e0       	ldi	r19, 0x00	; 0
     670:	b9 01       	movw	r22, r18
     672:	02 c0       	rjmp	.+4      	; 0x678 <SPI_setChipSelect+0x2c>
     674:	66 0f       	add	r22, r22
     676:	77 1f       	adc	r23, r23
     678:	8a 95       	dec	r24
     67a:	e2 f7       	brpl	.-8      	; 0x674 <SPI_setChipSelect+0x28>
     67c:	cb 01       	movw	r24, r22
     67e:	80 95       	com	r24
     680:	84 23       	and	r24, r20
     682:	85 b9       	out	0x05, r24	; 5
     684:	08 95       	ret

00000686 <USART_transmitChar>:
	printf("uart setup finished\n\r");
}

void USART_transmitChar(unsigned char data) {
	/* wait for empty transmit buffer */
	while ( ! ( UCSR0A & (1<<UDRE0)))
     686:	e0 ec       	ldi	r30, 0xC0	; 192
     688:	f0 e0       	ldi	r31, 0x00	; 0
     68a:	90 81       	ld	r25, Z
     68c:	95 ff       	sbrs	r25, 5
     68e:	fd cf       	rjmp	.-6      	; 0x68a <USART_transmitChar+0x4>
		;
		
	/* Put data in buffer, send data */
	UDR0 = data;
     690:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     694:	08 95       	ret

00000696 <USART_receiveChar>:
}

unsigned char USART_receiveChar( void ) {
	/* wait for data to be received*/
	while ( !(UCSR0A & (1<<RXC0) ) ) 
     696:	e0 ec       	ldi	r30, 0xC0	; 192
     698:	f0 e0       	ldi	r31, 0x00	; 0
     69a:	80 81       	ld	r24, Z
     69c:	88 23       	and	r24, r24
     69e:	ec f7       	brge	.-6      	; 0x69a <USART_receiveChar+0x4>
		;
	
	return UDR0;
     6a0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     6a4:	08 95       	ret

000006a6 <USART_init>:

#include "uart.h"
FILE *uart ;
void USART_init(unsigned int ubrr) {
	
	UBRR0H = (unsigned char) (ubrr >> 8);
     6a6:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
	UBRR0L = (unsigned char) (ubrr);
     6aa:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
	
	/*Enable receiver and transmitter*/
	
	UCSR0B = (1<<RXEN0) | (1 <<TXEN0);
     6ae:	88 e1       	ldi	r24, 0x18	; 24
     6b0:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
	
	/* SET FRAME FORMAT: 8data, 2 stop bit */
	
	
	UCSR0C = (1<<USBS0) | (3<<UCSZ00);
     6b4:	8e e0       	ldi	r24, 0x0E	; 14
     6b6:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
	
	uart = fdevopen(&USART_transmitChar, &USART_receiveChar);
     6ba:	6b e4       	ldi	r22, 0x4B	; 75
     6bc:	73 e0       	ldi	r23, 0x03	; 3
     6be:	83 e4       	ldi	r24, 0x43	; 67
     6c0:	93 e0       	ldi	r25, 0x03	; 3
     6c2:	b8 d2       	rcall	.+1392   	; 0xc34 <fdevopen>
     6c4:	90 93 53 03 	sts	0x0353, r25	; 0x800353 <uart+0x1>
     6c8:	80 93 52 03 	sts	0x0352, r24	; 0x800352 <uart>
	printf("uart setup finished\n\r");
     6cc:	8b e2       	ldi	r24, 0x2B	; 43
     6ce:	93 e0       	ldi	r25, 0x03	; 3
     6d0:	9f 93       	push	r25
     6d2:	8f 93       	push	r24
     6d4:	f9 d2       	rcall	.+1522   	; 0xcc8 <printf>
}
     6d6:	0f 90       	pop	r0
     6d8:	0f 90       	pop	r0
     6da:	08 95       	ret

000006dc <__subsf3>:
     6dc:	50 58       	subi	r21, 0x80	; 128

000006de <__addsf3>:
     6de:	bb 27       	eor	r27, r27
     6e0:	aa 27       	eor	r26, r26
     6e2:	0e d0       	rcall	.+28     	; 0x700 <__addsf3x>
     6e4:	fc c1       	rjmp	.+1016   	; 0xade <__fp_round>
     6e6:	ed d1       	rcall	.+986    	; 0xac2 <__fp_pscA>
     6e8:	30 f0       	brcs	.+12     	; 0x6f6 <__addsf3+0x18>
     6ea:	f2 d1       	rcall	.+996    	; 0xad0 <__fp_pscB>
     6ec:	20 f0       	brcs	.+8      	; 0x6f6 <__addsf3+0x18>
     6ee:	31 f4       	brne	.+12     	; 0x6fc <__addsf3+0x1e>
     6f0:	9f 3f       	cpi	r25, 0xFF	; 255
     6f2:	11 f4       	brne	.+4      	; 0x6f8 <__addsf3+0x1a>
     6f4:	1e f4       	brtc	.+6      	; 0x6fc <__addsf3+0x1e>
     6f6:	bd c1       	rjmp	.+890    	; 0xa72 <__fp_nan>
     6f8:	0e f4       	brtc	.+2      	; 0x6fc <__addsf3+0x1e>
     6fa:	e0 95       	com	r30
     6fc:	e7 fb       	bst	r30, 7
     6fe:	b3 c1       	rjmp	.+870    	; 0xa66 <__fp_inf>

00000700 <__addsf3x>:
     700:	e9 2f       	mov	r30, r25
     702:	fe d1       	rcall	.+1020   	; 0xb00 <__fp_split3>
     704:	80 f3       	brcs	.-32     	; 0x6e6 <__addsf3+0x8>
     706:	ba 17       	cp	r27, r26
     708:	62 07       	cpc	r22, r18
     70a:	73 07       	cpc	r23, r19
     70c:	84 07       	cpc	r24, r20
     70e:	95 07       	cpc	r25, r21
     710:	18 f0       	brcs	.+6      	; 0x718 <__addsf3x+0x18>
     712:	71 f4       	brne	.+28     	; 0x730 <__addsf3x+0x30>
     714:	9e f5       	brtc	.+102    	; 0x77c <__addsf3x+0x7c>
     716:	16 c2       	rjmp	.+1068   	; 0xb44 <__fp_zero>
     718:	0e f4       	brtc	.+2      	; 0x71c <__addsf3x+0x1c>
     71a:	e0 95       	com	r30
     71c:	0b 2e       	mov	r0, r27
     71e:	ba 2f       	mov	r27, r26
     720:	a0 2d       	mov	r26, r0
     722:	0b 01       	movw	r0, r22
     724:	b9 01       	movw	r22, r18
     726:	90 01       	movw	r18, r0
     728:	0c 01       	movw	r0, r24
     72a:	ca 01       	movw	r24, r20
     72c:	a0 01       	movw	r20, r0
     72e:	11 24       	eor	r1, r1
     730:	ff 27       	eor	r31, r31
     732:	59 1b       	sub	r21, r25
     734:	99 f0       	breq	.+38     	; 0x75c <__addsf3x+0x5c>
     736:	59 3f       	cpi	r21, 0xF9	; 249
     738:	50 f4       	brcc	.+20     	; 0x74e <__addsf3x+0x4e>
     73a:	50 3e       	cpi	r21, 0xE0	; 224
     73c:	68 f1       	brcs	.+90     	; 0x798 <__addsf3x+0x98>
     73e:	1a 16       	cp	r1, r26
     740:	f0 40       	sbci	r31, 0x00	; 0
     742:	a2 2f       	mov	r26, r18
     744:	23 2f       	mov	r18, r19
     746:	34 2f       	mov	r19, r20
     748:	44 27       	eor	r20, r20
     74a:	58 5f       	subi	r21, 0xF8	; 248
     74c:	f3 cf       	rjmp	.-26     	; 0x734 <__addsf3x+0x34>
     74e:	46 95       	lsr	r20
     750:	37 95       	ror	r19
     752:	27 95       	ror	r18
     754:	a7 95       	ror	r26
     756:	f0 40       	sbci	r31, 0x00	; 0
     758:	53 95       	inc	r21
     75a:	c9 f7       	brne	.-14     	; 0x74e <__addsf3x+0x4e>
     75c:	7e f4       	brtc	.+30     	; 0x77c <__addsf3x+0x7c>
     75e:	1f 16       	cp	r1, r31
     760:	ba 0b       	sbc	r27, r26
     762:	62 0b       	sbc	r22, r18
     764:	73 0b       	sbc	r23, r19
     766:	84 0b       	sbc	r24, r20
     768:	ba f0       	brmi	.+46     	; 0x798 <__addsf3x+0x98>
     76a:	91 50       	subi	r25, 0x01	; 1
     76c:	a1 f0       	breq	.+40     	; 0x796 <__addsf3x+0x96>
     76e:	ff 0f       	add	r31, r31
     770:	bb 1f       	adc	r27, r27
     772:	66 1f       	adc	r22, r22
     774:	77 1f       	adc	r23, r23
     776:	88 1f       	adc	r24, r24
     778:	c2 f7       	brpl	.-16     	; 0x76a <__addsf3x+0x6a>
     77a:	0e c0       	rjmp	.+28     	; 0x798 <__addsf3x+0x98>
     77c:	ba 0f       	add	r27, r26
     77e:	62 1f       	adc	r22, r18
     780:	73 1f       	adc	r23, r19
     782:	84 1f       	adc	r24, r20
     784:	48 f4       	brcc	.+18     	; 0x798 <__addsf3x+0x98>
     786:	87 95       	ror	r24
     788:	77 95       	ror	r23
     78a:	67 95       	ror	r22
     78c:	b7 95       	ror	r27
     78e:	f7 95       	ror	r31
     790:	9e 3f       	cpi	r25, 0xFE	; 254
     792:	08 f0       	brcs	.+2      	; 0x796 <__addsf3x+0x96>
     794:	b3 cf       	rjmp	.-154    	; 0x6fc <__addsf3+0x1e>
     796:	93 95       	inc	r25
     798:	88 0f       	add	r24, r24
     79a:	08 f0       	brcs	.+2      	; 0x79e <__addsf3x+0x9e>
     79c:	99 27       	eor	r25, r25
     79e:	ee 0f       	add	r30, r30
     7a0:	97 95       	ror	r25
     7a2:	87 95       	ror	r24
     7a4:	08 95       	ret
     7a6:	8d d1       	rcall	.+794    	; 0xac2 <__fp_pscA>
     7a8:	58 f0       	brcs	.+22     	; 0x7c0 <__addsf3x+0xc0>
     7aa:	80 e8       	ldi	r24, 0x80	; 128
     7ac:	91 e0       	ldi	r25, 0x01	; 1
     7ae:	09 f4       	brne	.+2      	; 0x7b2 <__addsf3x+0xb2>
     7b0:	9e ef       	ldi	r25, 0xFE	; 254
     7b2:	8e d1       	rcall	.+796    	; 0xad0 <__fp_pscB>
     7b4:	28 f0       	brcs	.+10     	; 0x7c0 <__addsf3x+0xc0>
     7b6:	40 e8       	ldi	r20, 0x80	; 128
     7b8:	51 e0       	ldi	r21, 0x01	; 1
     7ba:	59 f4       	brne	.+22     	; 0x7d2 <atan2+0xe>
     7bc:	5e ef       	ldi	r21, 0xFE	; 254
     7be:	09 c0       	rjmp	.+18     	; 0x7d2 <atan2+0xe>
     7c0:	58 c1       	rjmp	.+688    	; 0xa72 <__fp_nan>
     7c2:	c0 c1       	rjmp	.+896    	; 0xb44 <__fp_zero>

000007c4 <atan2>:
     7c4:	e9 2f       	mov	r30, r25
     7c6:	e0 78       	andi	r30, 0x80	; 128
     7c8:	9b d1       	rcall	.+822    	; 0xb00 <__fp_split3>
     7ca:	68 f3       	brcs	.-38     	; 0x7a6 <__addsf3x+0xa6>
     7cc:	09 2e       	mov	r0, r25
     7ce:	05 2a       	or	r0, r21
     7d0:	c1 f3       	breq	.-16     	; 0x7c2 <__addsf3x+0xc2>
     7d2:	26 17       	cp	r18, r22
     7d4:	37 07       	cpc	r19, r23
     7d6:	48 07       	cpc	r20, r24
     7d8:	59 07       	cpc	r21, r25
     7da:	38 f0       	brcs	.+14     	; 0x7ea <atan2+0x26>
     7dc:	0e 2e       	mov	r0, r30
     7de:	07 f8       	bld	r0, 7
     7e0:	e0 25       	eor	r30, r0
     7e2:	69 f0       	breq	.+26     	; 0x7fe <atan2+0x3a>
     7e4:	e0 25       	eor	r30, r0
     7e6:	e0 64       	ori	r30, 0x40	; 64
     7e8:	0a c0       	rjmp	.+20     	; 0x7fe <atan2+0x3a>
     7ea:	ef 63       	ori	r30, 0x3F	; 63
     7ec:	07 f8       	bld	r0, 7
     7ee:	00 94       	com	r0
     7f0:	07 fa       	bst	r0, 7
     7f2:	db 01       	movw	r26, r22
     7f4:	b9 01       	movw	r22, r18
     7f6:	9d 01       	movw	r18, r26
     7f8:	dc 01       	movw	r26, r24
     7fa:	ca 01       	movw	r24, r20
     7fc:	ad 01       	movw	r20, r26
     7fe:	ef 93       	push	r30
     800:	47 d0       	rcall	.+142    	; 0x890 <__divsf3_pse>
     802:	6d d1       	rcall	.+730    	; 0xade <__fp_round>
     804:	0a d0       	rcall	.+20     	; 0x81a <atan>
     806:	5f 91       	pop	r21
     808:	55 23       	and	r21, r21
     80a:	31 f0       	breq	.+12     	; 0x818 <atan2+0x54>
     80c:	2b ed       	ldi	r18, 0xDB	; 219
     80e:	3f e0       	ldi	r19, 0x0F	; 15
     810:	49 e4       	ldi	r20, 0x49	; 73
     812:	50 fd       	sbrc	r21, 0
     814:	49 ec       	ldi	r20, 0xC9	; 201
     816:	63 cf       	rjmp	.-314    	; 0x6de <__addsf3>
     818:	08 95       	ret

0000081a <atan>:
     81a:	df 93       	push	r29
     81c:	dd 27       	eor	r29, r29
     81e:	b9 2f       	mov	r27, r25
     820:	bf 77       	andi	r27, 0x7F	; 127
     822:	40 e8       	ldi	r20, 0x80	; 128
     824:	5f e3       	ldi	r21, 0x3F	; 63
     826:	16 16       	cp	r1, r22
     828:	17 06       	cpc	r1, r23
     82a:	48 07       	cpc	r20, r24
     82c:	5b 07       	cpc	r21, r27
     82e:	10 f4       	brcc	.+4      	; 0x834 <atan+0x1a>
     830:	d9 2f       	mov	r29, r25
     832:	93 d1       	rcall	.+806    	; 0xb5a <inverse>
     834:	9f 93       	push	r25
     836:	8f 93       	push	r24
     838:	7f 93       	push	r23
     83a:	6f 93       	push	r22
     83c:	f8 d1       	rcall	.+1008   	; 0xc2e <square>
     83e:	e4 ee       	ldi	r30, 0xE4	; 228
     840:	f0 e0       	ldi	r31, 0x00	; 0
     842:	1a d1       	rcall	.+564    	; 0xa78 <__fp_powser>
     844:	4c d1       	rcall	.+664    	; 0xade <__fp_round>
     846:	2f 91       	pop	r18
     848:	3f 91       	pop	r19
     84a:	4f 91       	pop	r20
     84c:	5f 91       	pop	r21
     84e:	98 d1       	rcall	.+816    	; 0xb80 <__mulsf3x>
     850:	dd 23       	and	r29, r29
     852:	49 f0       	breq	.+18     	; 0x866 <atan+0x4c>
     854:	90 58       	subi	r25, 0x80	; 128
     856:	a2 ea       	ldi	r26, 0xA2	; 162
     858:	2a ed       	ldi	r18, 0xDA	; 218
     85a:	3f e0       	ldi	r19, 0x0F	; 15
     85c:	49 ec       	ldi	r20, 0xC9	; 201
     85e:	5f e3       	ldi	r21, 0x3F	; 63
     860:	d0 78       	andi	r29, 0x80	; 128
     862:	5d 27       	eor	r21, r29
     864:	4d df       	rcall	.-358    	; 0x700 <__addsf3x>
     866:	df 91       	pop	r29
     868:	3a c1       	rjmp	.+628    	; 0xade <__fp_round>

0000086a <__cmpsf2>:
     86a:	d9 d0       	rcall	.+434    	; 0xa1e <__fp_cmp>
     86c:	08 f4       	brcc	.+2      	; 0x870 <__cmpsf2+0x6>
     86e:	81 e0       	ldi	r24, 0x01	; 1
     870:	08 95       	ret

00000872 <__divsf3>:
     872:	0c d0       	rcall	.+24     	; 0x88c <__divsf3x>
     874:	34 c1       	rjmp	.+616    	; 0xade <__fp_round>
     876:	2c d1       	rcall	.+600    	; 0xad0 <__fp_pscB>
     878:	40 f0       	brcs	.+16     	; 0x88a <__divsf3+0x18>
     87a:	23 d1       	rcall	.+582    	; 0xac2 <__fp_pscA>
     87c:	30 f0       	brcs	.+12     	; 0x88a <__divsf3+0x18>
     87e:	21 f4       	brne	.+8      	; 0x888 <__divsf3+0x16>
     880:	5f 3f       	cpi	r21, 0xFF	; 255
     882:	19 f0       	breq	.+6      	; 0x88a <__divsf3+0x18>
     884:	f0 c0       	rjmp	.+480    	; 0xa66 <__fp_inf>
     886:	51 11       	cpse	r21, r1
     888:	5e c1       	rjmp	.+700    	; 0xb46 <__fp_szero>
     88a:	f3 c0       	rjmp	.+486    	; 0xa72 <__fp_nan>

0000088c <__divsf3x>:
     88c:	39 d1       	rcall	.+626    	; 0xb00 <__fp_split3>
     88e:	98 f3       	brcs	.-26     	; 0x876 <__divsf3+0x4>

00000890 <__divsf3_pse>:
     890:	99 23       	and	r25, r25
     892:	c9 f3       	breq	.-14     	; 0x886 <__divsf3+0x14>
     894:	55 23       	and	r21, r21
     896:	b1 f3       	breq	.-20     	; 0x884 <__divsf3+0x12>
     898:	95 1b       	sub	r25, r21
     89a:	55 0b       	sbc	r21, r21
     89c:	bb 27       	eor	r27, r27
     89e:	aa 27       	eor	r26, r26
     8a0:	62 17       	cp	r22, r18
     8a2:	73 07       	cpc	r23, r19
     8a4:	84 07       	cpc	r24, r20
     8a6:	38 f0       	brcs	.+14     	; 0x8b6 <__divsf3_pse+0x26>
     8a8:	9f 5f       	subi	r25, 0xFF	; 255
     8aa:	5f 4f       	sbci	r21, 0xFF	; 255
     8ac:	22 0f       	add	r18, r18
     8ae:	33 1f       	adc	r19, r19
     8b0:	44 1f       	adc	r20, r20
     8b2:	aa 1f       	adc	r26, r26
     8b4:	a9 f3       	breq	.-22     	; 0x8a0 <__divsf3_pse+0x10>
     8b6:	33 d0       	rcall	.+102    	; 0x91e <__divsf3_pse+0x8e>
     8b8:	0e 2e       	mov	r0, r30
     8ba:	3a f0       	brmi	.+14     	; 0x8ca <__divsf3_pse+0x3a>
     8bc:	e0 e8       	ldi	r30, 0x80	; 128
     8be:	30 d0       	rcall	.+96     	; 0x920 <__divsf3_pse+0x90>
     8c0:	91 50       	subi	r25, 0x01	; 1
     8c2:	50 40       	sbci	r21, 0x00	; 0
     8c4:	e6 95       	lsr	r30
     8c6:	00 1c       	adc	r0, r0
     8c8:	ca f7       	brpl	.-14     	; 0x8bc <__divsf3_pse+0x2c>
     8ca:	29 d0       	rcall	.+82     	; 0x91e <__divsf3_pse+0x8e>
     8cc:	fe 2f       	mov	r31, r30
     8ce:	27 d0       	rcall	.+78     	; 0x91e <__divsf3_pse+0x8e>
     8d0:	66 0f       	add	r22, r22
     8d2:	77 1f       	adc	r23, r23
     8d4:	88 1f       	adc	r24, r24
     8d6:	bb 1f       	adc	r27, r27
     8d8:	26 17       	cp	r18, r22
     8da:	37 07       	cpc	r19, r23
     8dc:	48 07       	cpc	r20, r24
     8de:	ab 07       	cpc	r26, r27
     8e0:	b0 e8       	ldi	r27, 0x80	; 128
     8e2:	09 f0       	breq	.+2      	; 0x8e6 <__divsf3_pse+0x56>
     8e4:	bb 0b       	sbc	r27, r27
     8e6:	80 2d       	mov	r24, r0
     8e8:	bf 01       	movw	r22, r30
     8ea:	ff 27       	eor	r31, r31
     8ec:	93 58       	subi	r25, 0x83	; 131
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	2a f0       	brmi	.+10     	; 0x8fc <__divsf3_pse+0x6c>
     8f2:	9e 3f       	cpi	r25, 0xFE	; 254
     8f4:	51 05       	cpc	r21, r1
     8f6:	68 f0       	brcs	.+26     	; 0x912 <__divsf3_pse+0x82>
     8f8:	b6 c0       	rjmp	.+364    	; 0xa66 <__fp_inf>
     8fa:	25 c1       	rjmp	.+586    	; 0xb46 <__fp_szero>
     8fc:	5f 3f       	cpi	r21, 0xFF	; 255
     8fe:	ec f3       	brlt	.-6      	; 0x8fa <__divsf3_pse+0x6a>
     900:	98 3e       	cpi	r25, 0xE8	; 232
     902:	dc f3       	brlt	.-10     	; 0x8fa <__divsf3_pse+0x6a>
     904:	86 95       	lsr	r24
     906:	77 95       	ror	r23
     908:	67 95       	ror	r22
     90a:	b7 95       	ror	r27
     90c:	f7 95       	ror	r31
     90e:	9f 5f       	subi	r25, 0xFF	; 255
     910:	c9 f7       	brne	.-14     	; 0x904 <__divsf3_pse+0x74>
     912:	88 0f       	add	r24, r24
     914:	91 1d       	adc	r25, r1
     916:	96 95       	lsr	r25
     918:	87 95       	ror	r24
     91a:	97 f9       	bld	r25, 7
     91c:	08 95       	ret
     91e:	e1 e0       	ldi	r30, 0x01	; 1
     920:	66 0f       	add	r22, r22
     922:	77 1f       	adc	r23, r23
     924:	88 1f       	adc	r24, r24
     926:	bb 1f       	adc	r27, r27
     928:	62 17       	cp	r22, r18
     92a:	73 07       	cpc	r23, r19
     92c:	84 07       	cpc	r24, r20
     92e:	ba 07       	cpc	r27, r26
     930:	20 f0       	brcs	.+8      	; 0x93a <__divsf3_pse+0xaa>
     932:	62 1b       	sub	r22, r18
     934:	73 0b       	sbc	r23, r19
     936:	84 0b       	sbc	r24, r20
     938:	ba 0b       	sbc	r27, r26
     93a:	ee 1f       	adc	r30, r30
     93c:	88 f7       	brcc	.-30     	; 0x920 <__divsf3_pse+0x90>
     93e:	e0 95       	com	r30
     940:	08 95       	ret

00000942 <__fixsfsi>:
     942:	04 d0       	rcall	.+8      	; 0x94c <__fixunssfsi>
     944:	68 94       	set
     946:	b1 11       	cpse	r27, r1
     948:	fe c0       	rjmp	.+508    	; 0xb46 <__fp_szero>
     94a:	08 95       	ret

0000094c <__fixunssfsi>:
     94c:	e1 d0       	rcall	.+450    	; 0xb10 <__fp_splitA>
     94e:	88 f0       	brcs	.+34     	; 0x972 <__fixunssfsi+0x26>
     950:	9f 57       	subi	r25, 0x7F	; 127
     952:	90 f0       	brcs	.+36     	; 0x978 <__fixunssfsi+0x2c>
     954:	b9 2f       	mov	r27, r25
     956:	99 27       	eor	r25, r25
     958:	b7 51       	subi	r27, 0x17	; 23
     95a:	a0 f0       	brcs	.+40     	; 0x984 <__fixunssfsi+0x38>
     95c:	d1 f0       	breq	.+52     	; 0x992 <__fixunssfsi+0x46>
     95e:	66 0f       	add	r22, r22
     960:	77 1f       	adc	r23, r23
     962:	88 1f       	adc	r24, r24
     964:	99 1f       	adc	r25, r25
     966:	1a f0       	brmi	.+6      	; 0x96e <__fixunssfsi+0x22>
     968:	ba 95       	dec	r27
     96a:	c9 f7       	brne	.-14     	; 0x95e <__fixunssfsi+0x12>
     96c:	12 c0       	rjmp	.+36     	; 0x992 <__fixunssfsi+0x46>
     96e:	b1 30       	cpi	r27, 0x01	; 1
     970:	81 f0       	breq	.+32     	; 0x992 <__fixunssfsi+0x46>
     972:	e8 d0       	rcall	.+464    	; 0xb44 <__fp_zero>
     974:	b1 e0       	ldi	r27, 0x01	; 1
     976:	08 95       	ret
     978:	e5 c0       	rjmp	.+458    	; 0xb44 <__fp_zero>
     97a:	67 2f       	mov	r22, r23
     97c:	78 2f       	mov	r23, r24
     97e:	88 27       	eor	r24, r24
     980:	b8 5f       	subi	r27, 0xF8	; 248
     982:	39 f0       	breq	.+14     	; 0x992 <__fixunssfsi+0x46>
     984:	b9 3f       	cpi	r27, 0xF9	; 249
     986:	cc f3       	brlt	.-14     	; 0x97a <__fixunssfsi+0x2e>
     988:	86 95       	lsr	r24
     98a:	77 95       	ror	r23
     98c:	67 95       	ror	r22
     98e:	b3 95       	inc	r27
     990:	d9 f7       	brne	.-10     	; 0x988 <__fixunssfsi+0x3c>
     992:	3e f4       	brtc	.+14     	; 0x9a2 <__fixunssfsi+0x56>
     994:	90 95       	com	r25
     996:	80 95       	com	r24
     998:	70 95       	com	r23
     99a:	61 95       	neg	r22
     99c:	7f 4f       	sbci	r23, 0xFF	; 255
     99e:	8f 4f       	sbci	r24, 0xFF	; 255
     9a0:	9f 4f       	sbci	r25, 0xFF	; 255
     9a2:	08 95       	ret

000009a4 <__floatunsisf>:
     9a4:	e8 94       	clt
     9a6:	09 c0       	rjmp	.+18     	; 0x9ba <__floatsisf+0x12>

000009a8 <__floatsisf>:
     9a8:	97 fb       	bst	r25, 7
     9aa:	3e f4       	brtc	.+14     	; 0x9ba <__floatsisf+0x12>
     9ac:	90 95       	com	r25
     9ae:	80 95       	com	r24
     9b0:	70 95       	com	r23
     9b2:	61 95       	neg	r22
     9b4:	7f 4f       	sbci	r23, 0xFF	; 255
     9b6:	8f 4f       	sbci	r24, 0xFF	; 255
     9b8:	9f 4f       	sbci	r25, 0xFF	; 255
     9ba:	99 23       	and	r25, r25
     9bc:	a9 f0       	breq	.+42     	; 0x9e8 <__floatsisf+0x40>
     9be:	f9 2f       	mov	r31, r25
     9c0:	96 e9       	ldi	r25, 0x96	; 150
     9c2:	bb 27       	eor	r27, r27
     9c4:	93 95       	inc	r25
     9c6:	f6 95       	lsr	r31
     9c8:	87 95       	ror	r24
     9ca:	77 95       	ror	r23
     9cc:	67 95       	ror	r22
     9ce:	b7 95       	ror	r27
     9d0:	f1 11       	cpse	r31, r1
     9d2:	f8 cf       	rjmp	.-16     	; 0x9c4 <__floatsisf+0x1c>
     9d4:	fa f4       	brpl	.+62     	; 0xa14 <__floatsisf+0x6c>
     9d6:	bb 0f       	add	r27, r27
     9d8:	11 f4       	brne	.+4      	; 0x9de <__floatsisf+0x36>
     9da:	60 ff       	sbrs	r22, 0
     9dc:	1b c0       	rjmp	.+54     	; 0xa14 <__floatsisf+0x6c>
     9de:	6f 5f       	subi	r22, 0xFF	; 255
     9e0:	7f 4f       	sbci	r23, 0xFF	; 255
     9e2:	8f 4f       	sbci	r24, 0xFF	; 255
     9e4:	9f 4f       	sbci	r25, 0xFF	; 255
     9e6:	16 c0       	rjmp	.+44     	; 0xa14 <__floatsisf+0x6c>
     9e8:	88 23       	and	r24, r24
     9ea:	11 f0       	breq	.+4      	; 0x9f0 <__floatsisf+0x48>
     9ec:	96 e9       	ldi	r25, 0x96	; 150
     9ee:	11 c0       	rjmp	.+34     	; 0xa12 <__floatsisf+0x6a>
     9f0:	77 23       	and	r23, r23
     9f2:	21 f0       	breq	.+8      	; 0x9fc <__floatsisf+0x54>
     9f4:	9e e8       	ldi	r25, 0x8E	; 142
     9f6:	87 2f       	mov	r24, r23
     9f8:	76 2f       	mov	r23, r22
     9fa:	05 c0       	rjmp	.+10     	; 0xa06 <__floatsisf+0x5e>
     9fc:	66 23       	and	r22, r22
     9fe:	71 f0       	breq	.+28     	; 0xa1c <__floatsisf+0x74>
     a00:	96 e8       	ldi	r25, 0x86	; 134
     a02:	86 2f       	mov	r24, r22
     a04:	70 e0       	ldi	r23, 0x00	; 0
     a06:	60 e0       	ldi	r22, 0x00	; 0
     a08:	2a f0       	brmi	.+10     	; 0xa14 <__floatsisf+0x6c>
     a0a:	9a 95       	dec	r25
     a0c:	66 0f       	add	r22, r22
     a0e:	77 1f       	adc	r23, r23
     a10:	88 1f       	adc	r24, r24
     a12:	da f7       	brpl	.-10     	; 0xa0a <__floatsisf+0x62>
     a14:	88 0f       	add	r24, r24
     a16:	96 95       	lsr	r25
     a18:	87 95       	ror	r24
     a1a:	97 f9       	bld	r25, 7
     a1c:	08 95       	ret

00000a1e <__fp_cmp>:
     a1e:	99 0f       	add	r25, r25
     a20:	00 08       	sbc	r0, r0
     a22:	55 0f       	add	r21, r21
     a24:	aa 0b       	sbc	r26, r26
     a26:	e0 e8       	ldi	r30, 0x80	; 128
     a28:	fe ef       	ldi	r31, 0xFE	; 254
     a2a:	16 16       	cp	r1, r22
     a2c:	17 06       	cpc	r1, r23
     a2e:	e8 07       	cpc	r30, r24
     a30:	f9 07       	cpc	r31, r25
     a32:	c0 f0       	brcs	.+48     	; 0xa64 <__fp_cmp+0x46>
     a34:	12 16       	cp	r1, r18
     a36:	13 06       	cpc	r1, r19
     a38:	e4 07       	cpc	r30, r20
     a3a:	f5 07       	cpc	r31, r21
     a3c:	98 f0       	brcs	.+38     	; 0xa64 <__fp_cmp+0x46>
     a3e:	62 1b       	sub	r22, r18
     a40:	73 0b       	sbc	r23, r19
     a42:	84 0b       	sbc	r24, r20
     a44:	95 0b       	sbc	r25, r21
     a46:	39 f4       	brne	.+14     	; 0xa56 <__fp_cmp+0x38>
     a48:	0a 26       	eor	r0, r26
     a4a:	61 f0       	breq	.+24     	; 0xa64 <__fp_cmp+0x46>
     a4c:	23 2b       	or	r18, r19
     a4e:	24 2b       	or	r18, r20
     a50:	25 2b       	or	r18, r21
     a52:	21 f4       	brne	.+8      	; 0xa5c <__fp_cmp+0x3e>
     a54:	08 95       	ret
     a56:	0a 26       	eor	r0, r26
     a58:	09 f4       	brne	.+2      	; 0xa5c <__fp_cmp+0x3e>
     a5a:	a1 40       	sbci	r26, 0x01	; 1
     a5c:	a6 95       	lsr	r26
     a5e:	8f ef       	ldi	r24, 0xFF	; 255
     a60:	81 1d       	adc	r24, r1
     a62:	81 1d       	adc	r24, r1
     a64:	08 95       	ret

00000a66 <__fp_inf>:
     a66:	97 f9       	bld	r25, 7
     a68:	9f 67       	ori	r25, 0x7F	; 127
     a6a:	80 e8       	ldi	r24, 0x80	; 128
     a6c:	70 e0       	ldi	r23, 0x00	; 0
     a6e:	60 e0       	ldi	r22, 0x00	; 0
     a70:	08 95       	ret

00000a72 <__fp_nan>:
     a72:	9f ef       	ldi	r25, 0xFF	; 255
     a74:	80 ec       	ldi	r24, 0xC0	; 192
     a76:	08 95       	ret

00000a78 <__fp_powser>:
     a78:	df 93       	push	r29
     a7a:	cf 93       	push	r28
     a7c:	1f 93       	push	r17
     a7e:	0f 93       	push	r16
     a80:	ff 92       	push	r15
     a82:	ef 92       	push	r14
     a84:	df 92       	push	r13
     a86:	7b 01       	movw	r14, r22
     a88:	8c 01       	movw	r16, r24
     a8a:	68 94       	set
     a8c:	05 c0       	rjmp	.+10     	; 0xa98 <__fp_powser+0x20>
     a8e:	da 2e       	mov	r13, r26
     a90:	ef 01       	movw	r28, r30
     a92:	76 d0       	rcall	.+236    	; 0xb80 <__mulsf3x>
     a94:	fe 01       	movw	r30, r28
     a96:	e8 94       	clt
     a98:	a5 91       	lpm	r26, Z+
     a9a:	25 91       	lpm	r18, Z+
     a9c:	35 91       	lpm	r19, Z+
     a9e:	45 91       	lpm	r20, Z+
     aa0:	55 91       	lpm	r21, Z+
     aa2:	ae f3       	brts	.-22     	; 0xa8e <__fp_powser+0x16>
     aa4:	ef 01       	movw	r28, r30
     aa6:	2c de       	rcall	.-936    	; 0x700 <__addsf3x>
     aa8:	fe 01       	movw	r30, r28
     aaa:	97 01       	movw	r18, r14
     aac:	a8 01       	movw	r20, r16
     aae:	da 94       	dec	r13
     ab0:	79 f7       	brne	.-34     	; 0xa90 <__fp_powser+0x18>
     ab2:	df 90       	pop	r13
     ab4:	ef 90       	pop	r14
     ab6:	ff 90       	pop	r15
     ab8:	0f 91       	pop	r16
     aba:	1f 91       	pop	r17
     abc:	cf 91       	pop	r28
     abe:	df 91       	pop	r29
     ac0:	08 95       	ret

00000ac2 <__fp_pscA>:
     ac2:	00 24       	eor	r0, r0
     ac4:	0a 94       	dec	r0
     ac6:	16 16       	cp	r1, r22
     ac8:	17 06       	cpc	r1, r23
     aca:	18 06       	cpc	r1, r24
     acc:	09 06       	cpc	r0, r25
     ace:	08 95       	ret

00000ad0 <__fp_pscB>:
     ad0:	00 24       	eor	r0, r0
     ad2:	0a 94       	dec	r0
     ad4:	12 16       	cp	r1, r18
     ad6:	13 06       	cpc	r1, r19
     ad8:	14 06       	cpc	r1, r20
     ada:	05 06       	cpc	r0, r21
     adc:	08 95       	ret

00000ade <__fp_round>:
     ade:	09 2e       	mov	r0, r25
     ae0:	03 94       	inc	r0
     ae2:	00 0c       	add	r0, r0
     ae4:	11 f4       	brne	.+4      	; 0xaea <__fp_round+0xc>
     ae6:	88 23       	and	r24, r24
     ae8:	52 f0       	brmi	.+20     	; 0xafe <__fp_round+0x20>
     aea:	bb 0f       	add	r27, r27
     aec:	40 f4       	brcc	.+16     	; 0xafe <__fp_round+0x20>
     aee:	bf 2b       	or	r27, r31
     af0:	11 f4       	brne	.+4      	; 0xaf6 <__fp_round+0x18>
     af2:	60 ff       	sbrs	r22, 0
     af4:	04 c0       	rjmp	.+8      	; 0xafe <__fp_round+0x20>
     af6:	6f 5f       	subi	r22, 0xFF	; 255
     af8:	7f 4f       	sbci	r23, 0xFF	; 255
     afa:	8f 4f       	sbci	r24, 0xFF	; 255
     afc:	9f 4f       	sbci	r25, 0xFF	; 255
     afe:	08 95       	ret

00000b00 <__fp_split3>:
     b00:	57 fd       	sbrc	r21, 7
     b02:	90 58       	subi	r25, 0x80	; 128
     b04:	44 0f       	add	r20, r20
     b06:	55 1f       	adc	r21, r21
     b08:	59 f0       	breq	.+22     	; 0xb20 <__fp_splitA+0x10>
     b0a:	5f 3f       	cpi	r21, 0xFF	; 255
     b0c:	71 f0       	breq	.+28     	; 0xb2a <__fp_splitA+0x1a>
     b0e:	47 95       	ror	r20

00000b10 <__fp_splitA>:
     b10:	88 0f       	add	r24, r24
     b12:	97 fb       	bst	r25, 7
     b14:	99 1f       	adc	r25, r25
     b16:	61 f0       	breq	.+24     	; 0xb30 <__fp_splitA+0x20>
     b18:	9f 3f       	cpi	r25, 0xFF	; 255
     b1a:	79 f0       	breq	.+30     	; 0xb3a <__fp_splitA+0x2a>
     b1c:	87 95       	ror	r24
     b1e:	08 95       	ret
     b20:	12 16       	cp	r1, r18
     b22:	13 06       	cpc	r1, r19
     b24:	14 06       	cpc	r1, r20
     b26:	55 1f       	adc	r21, r21
     b28:	f2 cf       	rjmp	.-28     	; 0xb0e <__fp_split3+0xe>
     b2a:	46 95       	lsr	r20
     b2c:	f1 df       	rcall	.-30     	; 0xb10 <__fp_splitA>
     b2e:	08 c0       	rjmp	.+16     	; 0xb40 <__fp_splitA+0x30>
     b30:	16 16       	cp	r1, r22
     b32:	17 06       	cpc	r1, r23
     b34:	18 06       	cpc	r1, r24
     b36:	99 1f       	adc	r25, r25
     b38:	f1 cf       	rjmp	.-30     	; 0xb1c <__fp_splitA+0xc>
     b3a:	86 95       	lsr	r24
     b3c:	71 05       	cpc	r23, r1
     b3e:	61 05       	cpc	r22, r1
     b40:	08 94       	sec
     b42:	08 95       	ret

00000b44 <__fp_zero>:
     b44:	e8 94       	clt

00000b46 <__fp_szero>:
     b46:	bb 27       	eor	r27, r27
     b48:	66 27       	eor	r22, r22
     b4a:	77 27       	eor	r23, r23
     b4c:	cb 01       	movw	r24, r22
     b4e:	97 f9       	bld	r25, 7
     b50:	08 95       	ret

00000b52 <__gesf2>:
     b52:	65 df       	rcall	.-310    	; 0xa1e <__fp_cmp>
     b54:	08 f4       	brcc	.+2      	; 0xb58 <__gesf2+0x6>
     b56:	8f ef       	ldi	r24, 0xFF	; 255
     b58:	08 95       	ret

00000b5a <inverse>:
     b5a:	9b 01       	movw	r18, r22
     b5c:	ac 01       	movw	r20, r24
     b5e:	60 e0       	ldi	r22, 0x00	; 0
     b60:	70 e0       	ldi	r23, 0x00	; 0
     b62:	80 e8       	ldi	r24, 0x80	; 128
     b64:	9f e3       	ldi	r25, 0x3F	; 63
     b66:	85 ce       	rjmp	.-758    	; 0x872 <__divsf3>

00000b68 <__mulsf3>:
     b68:	0b d0       	rcall	.+22     	; 0xb80 <__mulsf3x>
     b6a:	b9 cf       	rjmp	.-142    	; 0xade <__fp_round>
     b6c:	aa df       	rcall	.-172    	; 0xac2 <__fp_pscA>
     b6e:	28 f0       	brcs	.+10     	; 0xb7a <__mulsf3+0x12>
     b70:	af df       	rcall	.-162    	; 0xad0 <__fp_pscB>
     b72:	18 f0       	brcs	.+6      	; 0xb7a <__mulsf3+0x12>
     b74:	95 23       	and	r25, r21
     b76:	09 f0       	breq	.+2      	; 0xb7a <__mulsf3+0x12>
     b78:	76 cf       	rjmp	.-276    	; 0xa66 <__fp_inf>
     b7a:	7b cf       	rjmp	.-266    	; 0xa72 <__fp_nan>
     b7c:	11 24       	eor	r1, r1
     b7e:	e3 cf       	rjmp	.-58     	; 0xb46 <__fp_szero>

00000b80 <__mulsf3x>:
     b80:	bf df       	rcall	.-130    	; 0xb00 <__fp_split3>
     b82:	a0 f3       	brcs	.-24     	; 0xb6c <__mulsf3+0x4>

00000b84 <__mulsf3_pse>:
     b84:	95 9f       	mul	r25, r21
     b86:	d1 f3       	breq	.-12     	; 0xb7c <__mulsf3+0x14>
     b88:	95 0f       	add	r25, r21
     b8a:	50 e0       	ldi	r21, 0x00	; 0
     b8c:	55 1f       	adc	r21, r21
     b8e:	62 9f       	mul	r22, r18
     b90:	f0 01       	movw	r30, r0
     b92:	72 9f       	mul	r23, r18
     b94:	bb 27       	eor	r27, r27
     b96:	f0 0d       	add	r31, r0
     b98:	b1 1d       	adc	r27, r1
     b9a:	63 9f       	mul	r22, r19
     b9c:	aa 27       	eor	r26, r26
     b9e:	f0 0d       	add	r31, r0
     ba0:	b1 1d       	adc	r27, r1
     ba2:	aa 1f       	adc	r26, r26
     ba4:	64 9f       	mul	r22, r20
     ba6:	66 27       	eor	r22, r22
     ba8:	b0 0d       	add	r27, r0
     baa:	a1 1d       	adc	r26, r1
     bac:	66 1f       	adc	r22, r22
     bae:	82 9f       	mul	r24, r18
     bb0:	22 27       	eor	r18, r18
     bb2:	b0 0d       	add	r27, r0
     bb4:	a1 1d       	adc	r26, r1
     bb6:	62 1f       	adc	r22, r18
     bb8:	73 9f       	mul	r23, r19
     bba:	b0 0d       	add	r27, r0
     bbc:	a1 1d       	adc	r26, r1
     bbe:	62 1f       	adc	r22, r18
     bc0:	83 9f       	mul	r24, r19
     bc2:	a0 0d       	add	r26, r0
     bc4:	61 1d       	adc	r22, r1
     bc6:	22 1f       	adc	r18, r18
     bc8:	74 9f       	mul	r23, r20
     bca:	33 27       	eor	r19, r19
     bcc:	a0 0d       	add	r26, r0
     bce:	61 1d       	adc	r22, r1
     bd0:	23 1f       	adc	r18, r19
     bd2:	84 9f       	mul	r24, r20
     bd4:	60 0d       	add	r22, r0
     bd6:	21 1d       	adc	r18, r1
     bd8:	82 2f       	mov	r24, r18
     bda:	76 2f       	mov	r23, r22
     bdc:	6a 2f       	mov	r22, r26
     bde:	11 24       	eor	r1, r1
     be0:	9f 57       	subi	r25, 0x7F	; 127
     be2:	50 40       	sbci	r21, 0x00	; 0
     be4:	8a f0       	brmi	.+34     	; 0xc08 <__mulsf3_pse+0x84>
     be6:	e1 f0       	breq	.+56     	; 0xc20 <__mulsf3_pse+0x9c>
     be8:	88 23       	and	r24, r24
     bea:	4a f0       	brmi	.+18     	; 0xbfe <__mulsf3_pse+0x7a>
     bec:	ee 0f       	add	r30, r30
     bee:	ff 1f       	adc	r31, r31
     bf0:	bb 1f       	adc	r27, r27
     bf2:	66 1f       	adc	r22, r22
     bf4:	77 1f       	adc	r23, r23
     bf6:	88 1f       	adc	r24, r24
     bf8:	91 50       	subi	r25, 0x01	; 1
     bfa:	50 40       	sbci	r21, 0x00	; 0
     bfc:	a9 f7       	brne	.-22     	; 0xbe8 <__mulsf3_pse+0x64>
     bfe:	9e 3f       	cpi	r25, 0xFE	; 254
     c00:	51 05       	cpc	r21, r1
     c02:	70 f0       	brcs	.+28     	; 0xc20 <__mulsf3_pse+0x9c>
     c04:	30 cf       	rjmp	.-416    	; 0xa66 <__fp_inf>
     c06:	9f cf       	rjmp	.-194    	; 0xb46 <__fp_szero>
     c08:	5f 3f       	cpi	r21, 0xFF	; 255
     c0a:	ec f3       	brlt	.-6      	; 0xc06 <__mulsf3_pse+0x82>
     c0c:	98 3e       	cpi	r25, 0xE8	; 232
     c0e:	dc f3       	brlt	.-10     	; 0xc06 <__mulsf3_pse+0x82>
     c10:	86 95       	lsr	r24
     c12:	77 95       	ror	r23
     c14:	67 95       	ror	r22
     c16:	b7 95       	ror	r27
     c18:	f7 95       	ror	r31
     c1a:	e7 95       	ror	r30
     c1c:	9f 5f       	subi	r25, 0xFF	; 255
     c1e:	c1 f7       	brne	.-16     	; 0xc10 <__mulsf3_pse+0x8c>
     c20:	fe 2b       	or	r31, r30
     c22:	88 0f       	add	r24, r24
     c24:	91 1d       	adc	r25, r1
     c26:	96 95       	lsr	r25
     c28:	87 95       	ror	r24
     c2a:	97 f9       	bld	r25, 7
     c2c:	08 95       	ret

00000c2e <square>:
     c2e:	9b 01       	movw	r18, r22
     c30:	ac 01       	movw	r20, r24
     c32:	9a cf       	rjmp	.-204    	; 0xb68 <__mulsf3>

00000c34 <fdevopen>:
     c34:	0f 93       	push	r16
     c36:	1f 93       	push	r17
     c38:	cf 93       	push	r28
     c3a:	df 93       	push	r29
     c3c:	00 97       	sbiw	r24, 0x00	; 0
     c3e:	31 f4       	brne	.+12     	; 0xc4c <fdevopen+0x18>
     c40:	61 15       	cp	r22, r1
     c42:	71 05       	cpc	r23, r1
     c44:	19 f4       	brne	.+6      	; 0xc4c <fdevopen+0x18>
     c46:	80 e0       	ldi	r24, 0x00	; 0
     c48:	90 e0       	ldi	r25, 0x00	; 0
     c4a:	39 c0       	rjmp	.+114    	; 0xcbe <fdevopen+0x8a>
     c4c:	8b 01       	movw	r16, r22
     c4e:	ec 01       	movw	r28, r24
     c50:	6e e0       	ldi	r22, 0x0E	; 14
     c52:	70 e0       	ldi	r23, 0x00	; 0
     c54:	81 e0       	ldi	r24, 0x01	; 1
     c56:	90 e0       	ldi	r25, 0x00	; 0
     c58:	47 d2       	rcall	.+1166   	; 0x10e8 <calloc>
     c5a:	fc 01       	movw	r30, r24
     c5c:	89 2b       	or	r24, r25
     c5e:	99 f3       	breq	.-26     	; 0xc46 <fdevopen+0x12>
     c60:	80 e8       	ldi	r24, 0x80	; 128
     c62:	83 83       	std	Z+3, r24	; 0x03
     c64:	01 15       	cp	r16, r1
     c66:	11 05       	cpc	r17, r1
     c68:	71 f0       	breq	.+28     	; 0xc86 <fdevopen+0x52>
     c6a:	13 87       	std	Z+11, r17	; 0x0b
     c6c:	02 87       	std	Z+10, r16	; 0x0a
     c6e:	81 e8       	ldi	r24, 0x81	; 129
     c70:	83 83       	std	Z+3, r24	; 0x03
     c72:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <__iob>
     c76:	90 91 55 03 	lds	r25, 0x0355	; 0x800355 <__iob+0x1>
     c7a:	89 2b       	or	r24, r25
     c7c:	21 f4       	brne	.+8      	; 0xc86 <fdevopen+0x52>
     c7e:	f0 93 55 03 	sts	0x0355, r31	; 0x800355 <__iob+0x1>
     c82:	e0 93 54 03 	sts	0x0354, r30	; 0x800354 <__iob>
     c86:	20 97       	sbiw	r28, 0x00	; 0
     c88:	c9 f0       	breq	.+50     	; 0xcbc <fdevopen+0x88>
     c8a:	d1 87       	std	Z+9, r29	; 0x09
     c8c:	c0 87       	std	Z+8, r28	; 0x08
     c8e:	83 81       	ldd	r24, Z+3	; 0x03
     c90:	82 60       	ori	r24, 0x02	; 2
     c92:	83 83       	std	Z+3, r24	; 0x03
     c94:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <__iob+0x2>
     c98:	90 91 57 03 	lds	r25, 0x0357	; 0x800357 <__iob+0x3>
     c9c:	89 2b       	or	r24, r25
     c9e:	71 f4       	brne	.+28     	; 0xcbc <fdevopen+0x88>
     ca0:	f0 93 57 03 	sts	0x0357, r31	; 0x800357 <__iob+0x3>
     ca4:	e0 93 56 03 	sts	0x0356, r30	; 0x800356 <__iob+0x2>
     ca8:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <__iob+0x4>
     cac:	90 91 59 03 	lds	r25, 0x0359	; 0x800359 <__iob+0x5>
     cb0:	89 2b       	or	r24, r25
     cb2:	21 f4       	brne	.+8      	; 0xcbc <fdevopen+0x88>
     cb4:	f0 93 59 03 	sts	0x0359, r31	; 0x800359 <__iob+0x5>
     cb8:	e0 93 58 03 	sts	0x0358, r30	; 0x800358 <__iob+0x4>
     cbc:	cf 01       	movw	r24, r30
     cbe:	df 91       	pop	r29
     cc0:	cf 91       	pop	r28
     cc2:	1f 91       	pop	r17
     cc4:	0f 91       	pop	r16
     cc6:	08 95       	ret

00000cc8 <printf>:
     cc8:	cf 93       	push	r28
     cca:	df 93       	push	r29
     ccc:	cd b7       	in	r28, 0x3d	; 61
     cce:	de b7       	in	r29, 0x3e	; 62
     cd0:	ae 01       	movw	r20, r28
     cd2:	4a 5f       	subi	r20, 0xFA	; 250
     cd4:	5f 4f       	sbci	r21, 0xFF	; 255
     cd6:	fa 01       	movw	r30, r20
     cd8:	61 91       	ld	r22, Z+
     cda:	71 91       	ld	r23, Z+
     cdc:	af 01       	movw	r20, r30
     cde:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <__iob+0x2>
     ce2:	90 91 57 03 	lds	r25, 0x0357	; 0x800357 <__iob+0x3>
     ce6:	03 d0       	rcall	.+6      	; 0xcee <vfprintf>
     ce8:	df 91       	pop	r29
     cea:	cf 91       	pop	r28
     cec:	08 95       	ret

00000cee <vfprintf>:
     cee:	2f 92       	push	r2
     cf0:	3f 92       	push	r3
     cf2:	4f 92       	push	r4
     cf4:	5f 92       	push	r5
     cf6:	6f 92       	push	r6
     cf8:	7f 92       	push	r7
     cfa:	8f 92       	push	r8
     cfc:	9f 92       	push	r9
     cfe:	af 92       	push	r10
     d00:	bf 92       	push	r11
     d02:	cf 92       	push	r12
     d04:	df 92       	push	r13
     d06:	ef 92       	push	r14
     d08:	ff 92       	push	r15
     d0a:	0f 93       	push	r16
     d0c:	1f 93       	push	r17
     d0e:	cf 93       	push	r28
     d10:	df 93       	push	r29
     d12:	cd b7       	in	r28, 0x3d	; 61
     d14:	de b7       	in	r29, 0x3e	; 62
     d16:	2b 97       	sbiw	r28, 0x0b	; 11
     d18:	0f b6       	in	r0, 0x3f	; 63
     d1a:	f8 94       	cli
     d1c:	de bf       	out	0x3e, r29	; 62
     d1e:	0f be       	out	0x3f, r0	; 63
     d20:	cd bf       	out	0x3d, r28	; 61
     d22:	6c 01       	movw	r12, r24
     d24:	7b 01       	movw	r14, r22
     d26:	8a 01       	movw	r16, r20
     d28:	fc 01       	movw	r30, r24
     d2a:	17 82       	std	Z+7, r1	; 0x07
     d2c:	16 82       	std	Z+6, r1	; 0x06
     d2e:	83 81       	ldd	r24, Z+3	; 0x03
     d30:	81 ff       	sbrs	r24, 1
     d32:	bf c1       	rjmp	.+894    	; 0x10b2 <vfprintf+0x3c4>
     d34:	ce 01       	movw	r24, r28
     d36:	01 96       	adiw	r24, 0x01	; 1
     d38:	3c 01       	movw	r6, r24
     d3a:	f6 01       	movw	r30, r12
     d3c:	93 81       	ldd	r25, Z+3	; 0x03
     d3e:	f7 01       	movw	r30, r14
     d40:	93 fd       	sbrc	r25, 3
     d42:	85 91       	lpm	r24, Z+
     d44:	93 ff       	sbrs	r25, 3
     d46:	81 91       	ld	r24, Z+
     d48:	7f 01       	movw	r14, r30
     d4a:	88 23       	and	r24, r24
     d4c:	09 f4       	brne	.+2      	; 0xd50 <vfprintf+0x62>
     d4e:	ad c1       	rjmp	.+858    	; 0x10aa <vfprintf+0x3bc>
     d50:	85 32       	cpi	r24, 0x25	; 37
     d52:	39 f4       	brne	.+14     	; 0xd62 <vfprintf+0x74>
     d54:	93 fd       	sbrc	r25, 3
     d56:	85 91       	lpm	r24, Z+
     d58:	93 ff       	sbrs	r25, 3
     d5a:	81 91       	ld	r24, Z+
     d5c:	7f 01       	movw	r14, r30
     d5e:	85 32       	cpi	r24, 0x25	; 37
     d60:	21 f4       	brne	.+8      	; 0xd6a <vfprintf+0x7c>
     d62:	b6 01       	movw	r22, r12
     d64:	90 e0       	ldi	r25, 0x00	; 0
     d66:	18 d3       	rcall	.+1584   	; 0x1398 <fputc>
     d68:	e8 cf       	rjmp	.-48     	; 0xd3a <vfprintf+0x4c>
     d6a:	91 2c       	mov	r9, r1
     d6c:	21 2c       	mov	r2, r1
     d6e:	31 2c       	mov	r3, r1
     d70:	ff e1       	ldi	r31, 0x1F	; 31
     d72:	f3 15       	cp	r31, r3
     d74:	d8 f0       	brcs	.+54     	; 0xdac <vfprintf+0xbe>
     d76:	8b 32       	cpi	r24, 0x2B	; 43
     d78:	79 f0       	breq	.+30     	; 0xd98 <vfprintf+0xaa>
     d7a:	38 f4       	brcc	.+14     	; 0xd8a <vfprintf+0x9c>
     d7c:	80 32       	cpi	r24, 0x20	; 32
     d7e:	79 f0       	breq	.+30     	; 0xd9e <vfprintf+0xb0>
     d80:	83 32       	cpi	r24, 0x23	; 35
     d82:	a1 f4       	brne	.+40     	; 0xdac <vfprintf+0xbe>
     d84:	23 2d       	mov	r18, r3
     d86:	20 61       	ori	r18, 0x10	; 16
     d88:	1d c0       	rjmp	.+58     	; 0xdc4 <vfprintf+0xd6>
     d8a:	8d 32       	cpi	r24, 0x2D	; 45
     d8c:	61 f0       	breq	.+24     	; 0xda6 <vfprintf+0xb8>
     d8e:	80 33       	cpi	r24, 0x30	; 48
     d90:	69 f4       	brne	.+26     	; 0xdac <vfprintf+0xbe>
     d92:	23 2d       	mov	r18, r3
     d94:	21 60       	ori	r18, 0x01	; 1
     d96:	16 c0       	rjmp	.+44     	; 0xdc4 <vfprintf+0xd6>
     d98:	83 2d       	mov	r24, r3
     d9a:	82 60       	ori	r24, 0x02	; 2
     d9c:	38 2e       	mov	r3, r24
     d9e:	e3 2d       	mov	r30, r3
     da0:	e4 60       	ori	r30, 0x04	; 4
     da2:	3e 2e       	mov	r3, r30
     da4:	2a c0       	rjmp	.+84     	; 0xdfa <vfprintf+0x10c>
     da6:	f3 2d       	mov	r31, r3
     da8:	f8 60       	ori	r31, 0x08	; 8
     daa:	1d c0       	rjmp	.+58     	; 0xde6 <vfprintf+0xf8>
     dac:	37 fc       	sbrc	r3, 7
     dae:	2d c0       	rjmp	.+90     	; 0xe0a <vfprintf+0x11c>
     db0:	20 ed       	ldi	r18, 0xD0	; 208
     db2:	28 0f       	add	r18, r24
     db4:	2a 30       	cpi	r18, 0x0A	; 10
     db6:	40 f0       	brcs	.+16     	; 0xdc8 <vfprintf+0xda>
     db8:	8e 32       	cpi	r24, 0x2E	; 46
     dba:	b9 f4       	brne	.+46     	; 0xdea <vfprintf+0xfc>
     dbc:	36 fc       	sbrc	r3, 6
     dbe:	75 c1       	rjmp	.+746    	; 0x10aa <vfprintf+0x3bc>
     dc0:	23 2d       	mov	r18, r3
     dc2:	20 64       	ori	r18, 0x40	; 64
     dc4:	32 2e       	mov	r3, r18
     dc6:	19 c0       	rjmp	.+50     	; 0xdfa <vfprintf+0x10c>
     dc8:	36 fe       	sbrs	r3, 6
     dca:	06 c0       	rjmp	.+12     	; 0xdd8 <vfprintf+0xea>
     dcc:	8a e0       	ldi	r24, 0x0A	; 10
     dce:	98 9e       	mul	r9, r24
     dd0:	20 0d       	add	r18, r0
     dd2:	11 24       	eor	r1, r1
     dd4:	92 2e       	mov	r9, r18
     dd6:	11 c0       	rjmp	.+34     	; 0xdfa <vfprintf+0x10c>
     dd8:	ea e0       	ldi	r30, 0x0A	; 10
     dda:	2e 9e       	mul	r2, r30
     ddc:	20 0d       	add	r18, r0
     dde:	11 24       	eor	r1, r1
     de0:	22 2e       	mov	r2, r18
     de2:	f3 2d       	mov	r31, r3
     de4:	f0 62       	ori	r31, 0x20	; 32
     de6:	3f 2e       	mov	r3, r31
     de8:	08 c0       	rjmp	.+16     	; 0xdfa <vfprintf+0x10c>
     dea:	8c 36       	cpi	r24, 0x6C	; 108
     dec:	21 f4       	brne	.+8      	; 0xdf6 <vfprintf+0x108>
     dee:	83 2d       	mov	r24, r3
     df0:	80 68       	ori	r24, 0x80	; 128
     df2:	38 2e       	mov	r3, r24
     df4:	02 c0       	rjmp	.+4      	; 0xdfa <vfprintf+0x10c>
     df6:	88 36       	cpi	r24, 0x68	; 104
     df8:	41 f4       	brne	.+16     	; 0xe0a <vfprintf+0x11c>
     dfa:	f7 01       	movw	r30, r14
     dfc:	93 fd       	sbrc	r25, 3
     dfe:	85 91       	lpm	r24, Z+
     e00:	93 ff       	sbrs	r25, 3
     e02:	81 91       	ld	r24, Z+
     e04:	7f 01       	movw	r14, r30
     e06:	81 11       	cpse	r24, r1
     e08:	b3 cf       	rjmp	.-154    	; 0xd70 <vfprintf+0x82>
     e0a:	98 2f       	mov	r25, r24
     e0c:	9f 7d       	andi	r25, 0xDF	; 223
     e0e:	95 54       	subi	r25, 0x45	; 69
     e10:	93 30       	cpi	r25, 0x03	; 3
     e12:	28 f4       	brcc	.+10     	; 0xe1e <vfprintf+0x130>
     e14:	0c 5f       	subi	r16, 0xFC	; 252
     e16:	1f 4f       	sbci	r17, 0xFF	; 255
     e18:	9f e3       	ldi	r25, 0x3F	; 63
     e1a:	99 83       	std	Y+1, r25	; 0x01
     e1c:	0d c0       	rjmp	.+26     	; 0xe38 <vfprintf+0x14a>
     e1e:	83 36       	cpi	r24, 0x63	; 99
     e20:	31 f0       	breq	.+12     	; 0xe2e <vfprintf+0x140>
     e22:	83 37       	cpi	r24, 0x73	; 115
     e24:	71 f0       	breq	.+28     	; 0xe42 <vfprintf+0x154>
     e26:	83 35       	cpi	r24, 0x53	; 83
     e28:	09 f0       	breq	.+2      	; 0xe2c <vfprintf+0x13e>
     e2a:	55 c0       	rjmp	.+170    	; 0xed6 <vfprintf+0x1e8>
     e2c:	20 c0       	rjmp	.+64     	; 0xe6e <vfprintf+0x180>
     e2e:	f8 01       	movw	r30, r16
     e30:	80 81       	ld	r24, Z
     e32:	89 83       	std	Y+1, r24	; 0x01
     e34:	0e 5f       	subi	r16, 0xFE	; 254
     e36:	1f 4f       	sbci	r17, 0xFF	; 255
     e38:	88 24       	eor	r8, r8
     e3a:	83 94       	inc	r8
     e3c:	91 2c       	mov	r9, r1
     e3e:	53 01       	movw	r10, r6
     e40:	12 c0       	rjmp	.+36     	; 0xe66 <vfprintf+0x178>
     e42:	28 01       	movw	r4, r16
     e44:	f2 e0       	ldi	r31, 0x02	; 2
     e46:	4f 0e       	add	r4, r31
     e48:	51 1c       	adc	r5, r1
     e4a:	f8 01       	movw	r30, r16
     e4c:	a0 80       	ld	r10, Z
     e4e:	b1 80       	ldd	r11, Z+1	; 0x01
     e50:	36 fe       	sbrs	r3, 6
     e52:	03 c0       	rjmp	.+6      	; 0xe5a <vfprintf+0x16c>
     e54:	69 2d       	mov	r22, r9
     e56:	70 e0       	ldi	r23, 0x00	; 0
     e58:	02 c0       	rjmp	.+4      	; 0xe5e <vfprintf+0x170>
     e5a:	6f ef       	ldi	r22, 0xFF	; 255
     e5c:	7f ef       	ldi	r23, 0xFF	; 255
     e5e:	c5 01       	movw	r24, r10
     e60:	90 d2       	rcall	.+1312   	; 0x1382 <strnlen>
     e62:	4c 01       	movw	r8, r24
     e64:	82 01       	movw	r16, r4
     e66:	f3 2d       	mov	r31, r3
     e68:	ff 77       	andi	r31, 0x7F	; 127
     e6a:	3f 2e       	mov	r3, r31
     e6c:	15 c0       	rjmp	.+42     	; 0xe98 <vfprintf+0x1aa>
     e6e:	28 01       	movw	r4, r16
     e70:	22 e0       	ldi	r18, 0x02	; 2
     e72:	42 0e       	add	r4, r18
     e74:	51 1c       	adc	r5, r1
     e76:	f8 01       	movw	r30, r16
     e78:	a0 80       	ld	r10, Z
     e7a:	b1 80       	ldd	r11, Z+1	; 0x01
     e7c:	36 fe       	sbrs	r3, 6
     e7e:	03 c0       	rjmp	.+6      	; 0xe86 <vfprintf+0x198>
     e80:	69 2d       	mov	r22, r9
     e82:	70 e0       	ldi	r23, 0x00	; 0
     e84:	02 c0       	rjmp	.+4      	; 0xe8a <vfprintf+0x19c>
     e86:	6f ef       	ldi	r22, 0xFF	; 255
     e88:	7f ef       	ldi	r23, 0xFF	; 255
     e8a:	c5 01       	movw	r24, r10
     e8c:	68 d2       	rcall	.+1232   	; 0x135e <strnlen_P>
     e8e:	4c 01       	movw	r8, r24
     e90:	f3 2d       	mov	r31, r3
     e92:	f0 68       	ori	r31, 0x80	; 128
     e94:	3f 2e       	mov	r3, r31
     e96:	82 01       	movw	r16, r4
     e98:	33 fc       	sbrc	r3, 3
     e9a:	19 c0       	rjmp	.+50     	; 0xece <vfprintf+0x1e0>
     e9c:	82 2d       	mov	r24, r2
     e9e:	90 e0       	ldi	r25, 0x00	; 0
     ea0:	88 16       	cp	r8, r24
     ea2:	99 06       	cpc	r9, r25
     ea4:	a0 f4       	brcc	.+40     	; 0xece <vfprintf+0x1e0>
     ea6:	b6 01       	movw	r22, r12
     ea8:	80 e2       	ldi	r24, 0x20	; 32
     eaa:	90 e0       	ldi	r25, 0x00	; 0
     eac:	75 d2       	rcall	.+1258   	; 0x1398 <fputc>
     eae:	2a 94       	dec	r2
     eb0:	f5 cf       	rjmp	.-22     	; 0xe9c <vfprintf+0x1ae>
     eb2:	f5 01       	movw	r30, r10
     eb4:	37 fc       	sbrc	r3, 7
     eb6:	85 91       	lpm	r24, Z+
     eb8:	37 fe       	sbrs	r3, 7
     eba:	81 91       	ld	r24, Z+
     ebc:	5f 01       	movw	r10, r30
     ebe:	b6 01       	movw	r22, r12
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	6a d2       	rcall	.+1236   	; 0x1398 <fputc>
     ec4:	21 10       	cpse	r2, r1
     ec6:	2a 94       	dec	r2
     ec8:	21 e0       	ldi	r18, 0x01	; 1
     eca:	82 1a       	sub	r8, r18
     ecc:	91 08       	sbc	r9, r1
     ece:	81 14       	cp	r8, r1
     ed0:	91 04       	cpc	r9, r1
     ed2:	79 f7       	brne	.-34     	; 0xeb2 <vfprintf+0x1c4>
     ed4:	e1 c0       	rjmp	.+450    	; 0x1098 <vfprintf+0x3aa>
     ed6:	84 36       	cpi	r24, 0x64	; 100
     ed8:	11 f0       	breq	.+4      	; 0xede <vfprintf+0x1f0>
     eda:	89 36       	cpi	r24, 0x69	; 105
     edc:	39 f5       	brne	.+78     	; 0xf2c <vfprintf+0x23e>
     ede:	f8 01       	movw	r30, r16
     ee0:	37 fe       	sbrs	r3, 7
     ee2:	07 c0       	rjmp	.+14     	; 0xef2 <vfprintf+0x204>
     ee4:	60 81       	ld	r22, Z
     ee6:	71 81       	ldd	r23, Z+1	; 0x01
     ee8:	82 81       	ldd	r24, Z+2	; 0x02
     eea:	93 81       	ldd	r25, Z+3	; 0x03
     eec:	0c 5f       	subi	r16, 0xFC	; 252
     eee:	1f 4f       	sbci	r17, 0xFF	; 255
     ef0:	08 c0       	rjmp	.+16     	; 0xf02 <vfprintf+0x214>
     ef2:	60 81       	ld	r22, Z
     ef4:	71 81       	ldd	r23, Z+1	; 0x01
     ef6:	07 2e       	mov	r0, r23
     ef8:	00 0c       	add	r0, r0
     efa:	88 0b       	sbc	r24, r24
     efc:	99 0b       	sbc	r25, r25
     efe:	0e 5f       	subi	r16, 0xFE	; 254
     f00:	1f 4f       	sbci	r17, 0xFF	; 255
     f02:	f3 2d       	mov	r31, r3
     f04:	ff 76       	andi	r31, 0x6F	; 111
     f06:	3f 2e       	mov	r3, r31
     f08:	97 ff       	sbrs	r25, 7
     f0a:	09 c0       	rjmp	.+18     	; 0xf1e <vfprintf+0x230>
     f0c:	90 95       	com	r25
     f0e:	80 95       	com	r24
     f10:	70 95       	com	r23
     f12:	61 95       	neg	r22
     f14:	7f 4f       	sbci	r23, 0xFF	; 255
     f16:	8f 4f       	sbci	r24, 0xFF	; 255
     f18:	9f 4f       	sbci	r25, 0xFF	; 255
     f1a:	f0 68       	ori	r31, 0x80	; 128
     f1c:	3f 2e       	mov	r3, r31
     f1e:	2a e0       	ldi	r18, 0x0A	; 10
     f20:	30 e0       	ldi	r19, 0x00	; 0
     f22:	a3 01       	movw	r20, r6
     f24:	75 d2       	rcall	.+1258   	; 0x1410 <__ultoa_invert>
     f26:	88 2e       	mov	r8, r24
     f28:	86 18       	sub	r8, r6
     f2a:	44 c0       	rjmp	.+136    	; 0xfb4 <vfprintf+0x2c6>
     f2c:	85 37       	cpi	r24, 0x75	; 117
     f2e:	31 f4       	brne	.+12     	; 0xf3c <vfprintf+0x24e>
     f30:	23 2d       	mov	r18, r3
     f32:	2f 7e       	andi	r18, 0xEF	; 239
     f34:	b2 2e       	mov	r11, r18
     f36:	2a e0       	ldi	r18, 0x0A	; 10
     f38:	30 e0       	ldi	r19, 0x00	; 0
     f3a:	25 c0       	rjmp	.+74     	; 0xf86 <vfprintf+0x298>
     f3c:	93 2d       	mov	r25, r3
     f3e:	99 7f       	andi	r25, 0xF9	; 249
     f40:	b9 2e       	mov	r11, r25
     f42:	8f 36       	cpi	r24, 0x6F	; 111
     f44:	c1 f0       	breq	.+48     	; 0xf76 <vfprintf+0x288>
     f46:	18 f4       	brcc	.+6      	; 0xf4e <vfprintf+0x260>
     f48:	88 35       	cpi	r24, 0x58	; 88
     f4a:	79 f0       	breq	.+30     	; 0xf6a <vfprintf+0x27c>
     f4c:	ae c0       	rjmp	.+348    	; 0x10aa <vfprintf+0x3bc>
     f4e:	80 37       	cpi	r24, 0x70	; 112
     f50:	19 f0       	breq	.+6      	; 0xf58 <vfprintf+0x26a>
     f52:	88 37       	cpi	r24, 0x78	; 120
     f54:	21 f0       	breq	.+8      	; 0xf5e <vfprintf+0x270>
     f56:	a9 c0       	rjmp	.+338    	; 0x10aa <vfprintf+0x3bc>
     f58:	e9 2f       	mov	r30, r25
     f5a:	e0 61       	ori	r30, 0x10	; 16
     f5c:	be 2e       	mov	r11, r30
     f5e:	b4 fe       	sbrs	r11, 4
     f60:	0d c0       	rjmp	.+26     	; 0xf7c <vfprintf+0x28e>
     f62:	fb 2d       	mov	r31, r11
     f64:	f4 60       	ori	r31, 0x04	; 4
     f66:	bf 2e       	mov	r11, r31
     f68:	09 c0       	rjmp	.+18     	; 0xf7c <vfprintf+0x28e>
     f6a:	34 fe       	sbrs	r3, 4
     f6c:	0a c0       	rjmp	.+20     	; 0xf82 <vfprintf+0x294>
     f6e:	29 2f       	mov	r18, r25
     f70:	26 60       	ori	r18, 0x06	; 6
     f72:	b2 2e       	mov	r11, r18
     f74:	06 c0       	rjmp	.+12     	; 0xf82 <vfprintf+0x294>
     f76:	28 e0       	ldi	r18, 0x08	; 8
     f78:	30 e0       	ldi	r19, 0x00	; 0
     f7a:	05 c0       	rjmp	.+10     	; 0xf86 <vfprintf+0x298>
     f7c:	20 e1       	ldi	r18, 0x10	; 16
     f7e:	30 e0       	ldi	r19, 0x00	; 0
     f80:	02 c0       	rjmp	.+4      	; 0xf86 <vfprintf+0x298>
     f82:	20 e1       	ldi	r18, 0x10	; 16
     f84:	32 e0       	ldi	r19, 0x02	; 2
     f86:	f8 01       	movw	r30, r16
     f88:	b7 fe       	sbrs	r11, 7
     f8a:	07 c0       	rjmp	.+14     	; 0xf9a <vfprintf+0x2ac>
     f8c:	60 81       	ld	r22, Z
     f8e:	71 81       	ldd	r23, Z+1	; 0x01
     f90:	82 81       	ldd	r24, Z+2	; 0x02
     f92:	93 81       	ldd	r25, Z+3	; 0x03
     f94:	0c 5f       	subi	r16, 0xFC	; 252
     f96:	1f 4f       	sbci	r17, 0xFF	; 255
     f98:	06 c0       	rjmp	.+12     	; 0xfa6 <vfprintf+0x2b8>
     f9a:	60 81       	ld	r22, Z
     f9c:	71 81       	ldd	r23, Z+1	; 0x01
     f9e:	80 e0       	ldi	r24, 0x00	; 0
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	0e 5f       	subi	r16, 0xFE	; 254
     fa4:	1f 4f       	sbci	r17, 0xFF	; 255
     fa6:	a3 01       	movw	r20, r6
     fa8:	33 d2       	rcall	.+1126   	; 0x1410 <__ultoa_invert>
     faa:	88 2e       	mov	r8, r24
     fac:	86 18       	sub	r8, r6
     fae:	fb 2d       	mov	r31, r11
     fb0:	ff 77       	andi	r31, 0x7F	; 127
     fb2:	3f 2e       	mov	r3, r31
     fb4:	36 fe       	sbrs	r3, 6
     fb6:	0d c0       	rjmp	.+26     	; 0xfd2 <vfprintf+0x2e4>
     fb8:	23 2d       	mov	r18, r3
     fba:	2e 7f       	andi	r18, 0xFE	; 254
     fbc:	a2 2e       	mov	r10, r18
     fbe:	89 14       	cp	r8, r9
     fc0:	58 f4       	brcc	.+22     	; 0xfd8 <vfprintf+0x2ea>
     fc2:	34 fe       	sbrs	r3, 4
     fc4:	0b c0       	rjmp	.+22     	; 0xfdc <vfprintf+0x2ee>
     fc6:	32 fc       	sbrc	r3, 2
     fc8:	09 c0       	rjmp	.+18     	; 0xfdc <vfprintf+0x2ee>
     fca:	83 2d       	mov	r24, r3
     fcc:	8e 7e       	andi	r24, 0xEE	; 238
     fce:	a8 2e       	mov	r10, r24
     fd0:	05 c0       	rjmp	.+10     	; 0xfdc <vfprintf+0x2ee>
     fd2:	b8 2c       	mov	r11, r8
     fd4:	a3 2c       	mov	r10, r3
     fd6:	03 c0       	rjmp	.+6      	; 0xfde <vfprintf+0x2f0>
     fd8:	b8 2c       	mov	r11, r8
     fda:	01 c0       	rjmp	.+2      	; 0xfde <vfprintf+0x2f0>
     fdc:	b9 2c       	mov	r11, r9
     fde:	a4 fe       	sbrs	r10, 4
     fe0:	0f c0       	rjmp	.+30     	; 0x1000 <vfprintf+0x312>
     fe2:	fe 01       	movw	r30, r28
     fe4:	e8 0d       	add	r30, r8
     fe6:	f1 1d       	adc	r31, r1
     fe8:	80 81       	ld	r24, Z
     fea:	80 33       	cpi	r24, 0x30	; 48
     fec:	21 f4       	brne	.+8      	; 0xff6 <vfprintf+0x308>
     fee:	9a 2d       	mov	r25, r10
     ff0:	99 7e       	andi	r25, 0xE9	; 233
     ff2:	a9 2e       	mov	r10, r25
     ff4:	09 c0       	rjmp	.+18     	; 0x1008 <vfprintf+0x31a>
     ff6:	a2 fe       	sbrs	r10, 2
     ff8:	06 c0       	rjmp	.+12     	; 0x1006 <vfprintf+0x318>
     ffa:	b3 94       	inc	r11
     ffc:	b3 94       	inc	r11
     ffe:	04 c0       	rjmp	.+8      	; 0x1008 <vfprintf+0x31a>
    1000:	8a 2d       	mov	r24, r10
    1002:	86 78       	andi	r24, 0x86	; 134
    1004:	09 f0       	breq	.+2      	; 0x1008 <vfprintf+0x31a>
    1006:	b3 94       	inc	r11
    1008:	a3 fc       	sbrc	r10, 3
    100a:	10 c0       	rjmp	.+32     	; 0x102c <vfprintf+0x33e>
    100c:	a0 fe       	sbrs	r10, 0
    100e:	06 c0       	rjmp	.+12     	; 0x101c <vfprintf+0x32e>
    1010:	b2 14       	cp	r11, r2
    1012:	80 f4       	brcc	.+32     	; 0x1034 <vfprintf+0x346>
    1014:	28 0c       	add	r2, r8
    1016:	92 2c       	mov	r9, r2
    1018:	9b 18       	sub	r9, r11
    101a:	0d c0       	rjmp	.+26     	; 0x1036 <vfprintf+0x348>
    101c:	b2 14       	cp	r11, r2
    101e:	58 f4       	brcc	.+22     	; 0x1036 <vfprintf+0x348>
    1020:	b6 01       	movw	r22, r12
    1022:	80 e2       	ldi	r24, 0x20	; 32
    1024:	90 e0       	ldi	r25, 0x00	; 0
    1026:	b8 d1       	rcall	.+880    	; 0x1398 <fputc>
    1028:	b3 94       	inc	r11
    102a:	f8 cf       	rjmp	.-16     	; 0x101c <vfprintf+0x32e>
    102c:	b2 14       	cp	r11, r2
    102e:	18 f4       	brcc	.+6      	; 0x1036 <vfprintf+0x348>
    1030:	2b 18       	sub	r2, r11
    1032:	02 c0       	rjmp	.+4      	; 0x1038 <vfprintf+0x34a>
    1034:	98 2c       	mov	r9, r8
    1036:	21 2c       	mov	r2, r1
    1038:	a4 fe       	sbrs	r10, 4
    103a:	0f c0       	rjmp	.+30     	; 0x105a <vfprintf+0x36c>
    103c:	b6 01       	movw	r22, r12
    103e:	80 e3       	ldi	r24, 0x30	; 48
    1040:	90 e0       	ldi	r25, 0x00	; 0
    1042:	aa d1       	rcall	.+852    	; 0x1398 <fputc>
    1044:	a2 fe       	sbrs	r10, 2
    1046:	16 c0       	rjmp	.+44     	; 0x1074 <vfprintf+0x386>
    1048:	a1 fc       	sbrc	r10, 1
    104a:	03 c0       	rjmp	.+6      	; 0x1052 <vfprintf+0x364>
    104c:	88 e7       	ldi	r24, 0x78	; 120
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	02 c0       	rjmp	.+4      	; 0x1056 <vfprintf+0x368>
    1052:	88 e5       	ldi	r24, 0x58	; 88
    1054:	90 e0       	ldi	r25, 0x00	; 0
    1056:	b6 01       	movw	r22, r12
    1058:	0c c0       	rjmp	.+24     	; 0x1072 <vfprintf+0x384>
    105a:	8a 2d       	mov	r24, r10
    105c:	86 78       	andi	r24, 0x86	; 134
    105e:	51 f0       	breq	.+20     	; 0x1074 <vfprintf+0x386>
    1060:	a1 fe       	sbrs	r10, 1
    1062:	02 c0       	rjmp	.+4      	; 0x1068 <vfprintf+0x37a>
    1064:	8b e2       	ldi	r24, 0x2B	; 43
    1066:	01 c0       	rjmp	.+2      	; 0x106a <vfprintf+0x37c>
    1068:	80 e2       	ldi	r24, 0x20	; 32
    106a:	a7 fc       	sbrc	r10, 7
    106c:	8d e2       	ldi	r24, 0x2D	; 45
    106e:	b6 01       	movw	r22, r12
    1070:	90 e0       	ldi	r25, 0x00	; 0
    1072:	92 d1       	rcall	.+804    	; 0x1398 <fputc>
    1074:	89 14       	cp	r8, r9
    1076:	30 f4       	brcc	.+12     	; 0x1084 <vfprintf+0x396>
    1078:	b6 01       	movw	r22, r12
    107a:	80 e3       	ldi	r24, 0x30	; 48
    107c:	90 e0       	ldi	r25, 0x00	; 0
    107e:	8c d1       	rcall	.+792    	; 0x1398 <fputc>
    1080:	9a 94       	dec	r9
    1082:	f8 cf       	rjmp	.-16     	; 0x1074 <vfprintf+0x386>
    1084:	8a 94       	dec	r8
    1086:	f3 01       	movw	r30, r6
    1088:	e8 0d       	add	r30, r8
    108a:	f1 1d       	adc	r31, r1
    108c:	80 81       	ld	r24, Z
    108e:	b6 01       	movw	r22, r12
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	82 d1       	rcall	.+772    	; 0x1398 <fputc>
    1094:	81 10       	cpse	r8, r1
    1096:	f6 cf       	rjmp	.-20     	; 0x1084 <vfprintf+0x396>
    1098:	22 20       	and	r2, r2
    109a:	09 f4       	brne	.+2      	; 0x109e <vfprintf+0x3b0>
    109c:	4e ce       	rjmp	.-868    	; 0xd3a <vfprintf+0x4c>
    109e:	b6 01       	movw	r22, r12
    10a0:	80 e2       	ldi	r24, 0x20	; 32
    10a2:	90 e0       	ldi	r25, 0x00	; 0
    10a4:	79 d1       	rcall	.+754    	; 0x1398 <fputc>
    10a6:	2a 94       	dec	r2
    10a8:	f7 cf       	rjmp	.-18     	; 0x1098 <vfprintf+0x3aa>
    10aa:	f6 01       	movw	r30, r12
    10ac:	86 81       	ldd	r24, Z+6	; 0x06
    10ae:	97 81       	ldd	r25, Z+7	; 0x07
    10b0:	02 c0       	rjmp	.+4      	; 0x10b6 <vfprintf+0x3c8>
    10b2:	8f ef       	ldi	r24, 0xFF	; 255
    10b4:	9f ef       	ldi	r25, 0xFF	; 255
    10b6:	2b 96       	adiw	r28, 0x0b	; 11
    10b8:	0f b6       	in	r0, 0x3f	; 63
    10ba:	f8 94       	cli
    10bc:	de bf       	out	0x3e, r29	; 62
    10be:	0f be       	out	0x3f, r0	; 63
    10c0:	cd bf       	out	0x3d, r28	; 61
    10c2:	df 91       	pop	r29
    10c4:	cf 91       	pop	r28
    10c6:	1f 91       	pop	r17
    10c8:	0f 91       	pop	r16
    10ca:	ff 90       	pop	r15
    10cc:	ef 90       	pop	r14
    10ce:	df 90       	pop	r13
    10d0:	cf 90       	pop	r12
    10d2:	bf 90       	pop	r11
    10d4:	af 90       	pop	r10
    10d6:	9f 90       	pop	r9
    10d8:	8f 90       	pop	r8
    10da:	7f 90       	pop	r7
    10dc:	6f 90       	pop	r6
    10de:	5f 90       	pop	r5
    10e0:	4f 90       	pop	r4
    10e2:	3f 90       	pop	r3
    10e4:	2f 90       	pop	r2
    10e6:	08 95       	ret

000010e8 <calloc>:
    10e8:	0f 93       	push	r16
    10ea:	1f 93       	push	r17
    10ec:	cf 93       	push	r28
    10ee:	df 93       	push	r29
    10f0:	86 9f       	mul	r24, r22
    10f2:	80 01       	movw	r16, r0
    10f4:	87 9f       	mul	r24, r23
    10f6:	10 0d       	add	r17, r0
    10f8:	96 9f       	mul	r25, r22
    10fa:	10 0d       	add	r17, r0
    10fc:	11 24       	eor	r1, r1
    10fe:	c8 01       	movw	r24, r16
    1100:	0d d0       	rcall	.+26     	; 0x111c <malloc>
    1102:	ec 01       	movw	r28, r24
    1104:	00 97       	sbiw	r24, 0x00	; 0
    1106:	21 f0       	breq	.+8      	; 0x1110 <calloc+0x28>
    1108:	a8 01       	movw	r20, r16
    110a:	60 e0       	ldi	r22, 0x00	; 0
    110c:	70 e0       	ldi	r23, 0x00	; 0
    110e:	32 d1       	rcall	.+612    	; 0x1374 <memset>
    1110:	ce 01       	movw	r24, r28
    1112:	df 91       	pop	r29
    1114:	cf 91       	pop	r28
    1116:	1f 91       	pop	r17
    1118:	0f 91       	pop	r16
    111a:	08 95       	ret

0000111c <malloc>:
    111c:	0f 93       	push	r16
    111e:	1f 93       	push	r17
    1120:	cf 93       	push	r28
    1122:	df 93       	push	r29
    1124:	82 30       	cpi	r24, 0x02	; 2
    1126:	91 05       	cpc	r25, r1
    1128:	10 f4       	brcc	.+4      	; 0x112e <malloc+0x12>
    112a:	82 e0       	ldi	r24, 0x02	; 2
    112c:	90 e0       	ldi	r25, 0x00	; 0
    112e:	e0 91 5c 03 	lds	r30, 0x035C	; 0x80035c <__flp>
    1132:	f0 91 5d 03 	lds	r31, 0x035D	; 0x80035d <__flp+0x1>
    1136:	20 e0       	ldi	r18, 0x00	; 0
    1138:	30 e0       	ldi	r19, 0x00	; 0
    113a:	a0 e0       	ldi	r26, 0x00	; 0
    113c:	b0 e0       	ldi	r27, 0x00	; 0
    113e:	30 97       	sbiw	r30, 0x00	; 0
    1140:	19 f1       	breq	.+70     	; 0x1188 <malloc+0x6c>
    1142:	40 81       	ld	r20, Z
    1144:	51 81       	ldd	r21, Z+1	; 0x01
    1146:	02 81       	ldd	r16, Z+2	; 0x02
    1148:	13 81       	ldd	r17, Z+3	; 0x03
    114a:	48 17       	cp	r20, r24
    114c:	59 07       	cpc	r21, r25
    114e:	c8 f0       	brcs	.+50     	; 0x1182 <malloc+0x66>
    1150:	84 17       	cp	r24, r20
    1152:	95 07       	cpc	r25, r21
    1154:	69 f4       	brne	.+26     	; 0x1170 <malloc+0x54>
    1156:	10 97       	sbiw	r26, 0x00	; 0
    1158:	31 f0       	breq	.+12     	; 0x1166 <malloc+0x4a>
    115a:	12 96       	adiw	r26, 0x02	; 2
    115c:	0c 93       	st	X, r16
    115e:	12 97       	sbiw	r26, 0x02	; 2
    1160:	13 96       	adiw	r26, 0x03	; 3
    1162:	1c 93       	st	X, r17
    1164:	27 c0       	rjmp	.+78     	; 0x11b4 <malloc+0x98>
    1166:	00 93 5c 03 	sts	0x035C, r16	; 0x80035c <__flp>
    116a:	10 93 5d 03 	sts	0x035D, r17	; 0x80035d <__flp+0x1>
    116e:	22 c0       	rjmp	.+68     	; 0x11b4 <malloc+0x98>
    1170:	21 15       	cp	r18, r1
    1172:	31 05       	cpc	r19, r1
    1174:	19 f0       	breq	.+6      	; 0x117c <malloc+0x60>
    1176:	42 17       	cp	r20, r18
    1178:	53 07       	cpc	r21, r19
    117a:	18 f4       	brcc	.+6      	; 0x1182 <malloc+0x66>
    117c:	9a 01       	movw	r18, r20
    117e:	bd 01       	movw	r22, r26
    1180:	ef 01       	movw	r28, r30
    1182:	df 01       	movw	r26, r30
    1184:	f8 01       	movw	r30, r16
    1186:	db cf       	rjmp	.-74     	; 0x113e <malloc+0x22>
    1188:	21 15       	cp	r18, r1
    118a:	31 05       	cpc	r19, r1
    118c:	f9 f0       	breq	.+62     	; 0x11cc <malloc+0xb0>
    118e:	28 1b       	sub	r18, r24
    1190:	39 0b       	sbc	r19, r25
    1192:	24 30       	cpi	r18, 0x04	; 4
    1194:	31 05       	cpc	r19, r1
    1196:	80 f4       	brcc	.+32     	; 0x11b8 <malloc+0x9c>
    1198:	8a 81       	ldd	r24, Y+2	; 0x02
    119a:	9b 81       	ldd	r25, Y+3	; 0x03
    119c:	61 15       	cp	r22, r1
    119e:	71 05       	cpc	r23, r1
    11a0:	21 f0       	breq	.+8      	; 0x11aa <malloc+0x8e>
    11a2:	fb 01       	movw	r30, r22
    11a4:	93 83       	std	Z+3, r25	; 0x03
    11a6:	82 83       	std	Z+2, r24	; 0x02
    11a8:	04 c0       	rjmp	.+8      	; 0x11b2 <malloc+0x96>
    11aa:	90 93 5d 03 	sts	0x035D, r25	; 0x80035d <__flp+0x1>
    11ae:	80 93 5c 03 	sts	0x035C, r24	; 0x80035c <__flp>
    11b2:	fe 01       	movw	r30, r28
    11b4:	32 96       	adiw	r30, 0x02	; 2
    11b6:	44 c0       	rjmp	.+136    	; 0x1240 <malloc+0x124>
    11b8:	fe 01       	movw	r30, r28
    11ba:	e2 0f       	add	r30, r18
    11bc:	f3 1f       	adc	r31, r19
    11be:	81 93       	st	Z+, r24
    11c0:	91 93       	st	Z+, r25
    11c2:	22 50       	subi	r18, 0x02	; 2
    11c4:	31 09       	sbc	r19, r1
    11c6:	39 83       	std	Y+1, r19	; 0x01
    11c8:	28 83       	st	Y, r18
    11ca:	3a c0       	rjmp	.+116    	; 0x1240 <malloc+0x124>
    11cc:	20 91 5a 03 	lds	r18, 0x035A	; 0x80035a <__brkval>
    11d0:	30 91 5b 03 	lds	r19, 0x035B	; 0x80035b <__brkval+0x1>
    11d4:	23 2b       	or	r18, r19
    11d6:	41 f4       	brne	.+16     	; 0x11e8 <malloc+0xcc>
    11d8:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    11dc:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    11e0:	30 93 5b 03 	sts	0x035B, r19	; 0x80035b <__brkval+0x1>
    11e4:	20 93 5a 03 	sts	0x035A, r18	; 0x80035a <__brkval>
    11e8:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    11ec:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    11f0:	21 15       	cp	r18, r1
    11f2:	31 05       	cpc	r19, r1
    11f4:	41 f4       	brne	.+16     	; 0x1206 <malloc+0xea>
    11f6:	2d b7       	in	r18, 0x3d	; 61
    11f8:	3e b7       	in	r19, 0x3e	; 62
    11fa:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    11fe:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    1202:	24 1b       	sub	r18, r20
    1204:	35 0b       	sbc	r19, r21
    1206:	e0 91 5a 03 	lds	r30, 0x035A	; 0x80035a <__brkval>
    120a:	f0 91 5b 03 	lds	r31, 0x035B	; 0x80035b <__brkval+0x1>
    120e:	e2 17       	cp	r30, r18
    1210:	f3 07       	cpc	r31, r19
    1212:	a0 f4       	brcc	.+40     	; 0x123c <malloc+0x120>
    1214:	2e 1b       	sub	r18, r30
    1216:	3f 0b       	sbc	r19, r31
    1218:	28 17       	cp	r18, r24
    121a:	39 07       	cpc	r19, r25
    121c:	78 f0       	brcs	.+30     	; 0x123c <malloc+0x120>
    121e:	ac 01       	movw	r20, r24
    1220:	4e 5f       	subi	r20, 0xFE	; 254
    1222:	5f 4f       	sbci	r21, 0xFF	; 255
    1224:	24 17       	cp	r18, r20
    1226:	35 07       	cpc	r19, r21
    1228:	48 f0       	brcs	.+18     	; 0x123c <malloc+0x120>
    122a:	4e 0f       	add	r20, r30
    122c:	5f 1f       	adc	r21, r31
    122e:	50 93 5b 03 	sts	0x035B, r21	; 0x80035b <__brkval+0x1>
    1232:	40 93 5a 03 	sts	0x035A, r20	; 0x80035a <__brkval>
    1236:	81 93       	st	Z+, r24
    1238:	91 93       	st	Z+, r25
    123a:	02 c0       	rjmp	.+4      	; 0x1240 <malloc+0x124>
    123c:	e0 e0       	ldi	r30, 0x00	; 0
    123e:	f0 e0       	ldi	r31, 0x00	; 0
    1240:	cf 01       	movw	r24, r30
    1242:	df 91       	pop	r29
    1244:	cf 91       	pop	r28
    1246:	1f 91       	pop	r17
    1248:	0f 91       	pop	r16
    124a:	08 95       	ret

0000124c <free>:
    124c:	cf 93       	push	r28
    124e:	df 93       	push	r29
    1250:	00 97       	sbiw	r24, 0x00	; 0
    1252:	09 f4       	brne	.+2      	; 0x1256 <free+0xa>
    1254:	81 c0       	rjmp	.+258    	; 0x1358 <free+0x10c>
    1256:	fc 01       	movw	r30, r24
    1258:	32 97       	sbiw	r30, 0x02	; 2
    125a:	13 82       	std	Z+3, r1	; 0x03
    125c:	12 82       	std	Z+2, r1	; 0x02
    125e:	a0 91 5c 03 	lds	r26, 0x035C	; 0x80035c <__flp>
    1262:	b0 91 5d 03 	lds	r27, 0x035D	; 0x80035d <__flp+0x1>
    1266:	10 97       	sbiw	r26, 0x00	; 0
    1268:	81 f4       	brne	.+32     	; 0x128a <free+0x3e>
    126a:	20 81       	ld	r18, Z
    126c:	31 81       	ldd	r19, Z+1	; 0x01
    126e:	82 0f       	add	r24, r18
    1270:	93 1f       	adc	r25, r19
    1272:	20 91 5a 03 	lds	r18, 0x035A	; 0x80035a <__brkval>
    1276:	30 91 5b 03 	lds	r19, 0x035B	; 0x80035b <__brkval+0x1>
    127a:	28 17       	cp	r18, r24
    127c:	39 07       	cpc	r19, r25
    127e:	51 f5       	brne	.+84     	; 0x12d4 <free+0x88>
    1280:	f0 93 5b 03 	sts	0x035B, r31	; 0x80035b <__brkval+0x1>
    1284:	e0 93 5a 03 	sts	0x035A, r30	; 0x80035a <__brkval>
    1288:	67 c0       	rjmp	.+206    	; 0x1358 <free+0x10c>
    128a:	ed 01       	movw	r28, r26
    128c:	20 e0       	ldi	r18, 0x00	; 0
    128e:	30 e0       	ldi	r19, 0x00	; 0
    1290:	ce 17       	cp	r28, r30
    1292:	df 07       	cpc	r29, r31
    1294:	40 f4       	brcc	.+16     	; 0x12a6 <free+0x5a>
    1296:	4a 81       	ldd	r20, Y+2	; 0x02
    1298:	5b 81       	ldd	r21, Y+3	; 0x03
    129a:	9e 01       	movw	r18, r28
    129c:	41 15       	cp	r20, r1
    129e:	51 05       	cpc	r21, r1
    12a0:	f1 f0       	breq	.+60     	; 0x12de <free+0x92>
    12a2:	ea 01       	movw	r28, r20
    12a4:	f5 cf       	rjmp	.-22     	; 0x1290 <free+0x44>
    12a6:	d3 83       	std	Z+3, r29	; 0x03
    12a8:	c2 83       	std	Z+2, r28	; 0x02
    12aa:	40 81       	ld	r20, Z
    12ac:	51 81       	ldd	r21, Z+1	; 0x01
    12ae:	84 0f       	add	r24, r20
    12b0:	95 1f       	adc	r25, r21
    12b2:	c8 17       	cp	r28, r24
    12b4:	d9 07       	cpc	r29, r25
    12b6:	59 f4       	brne	.+22     	; 0x12ce <free+0x82>
    12b8:	88 81       	ld	r24, Y
    12ba:	99 81       	ldd	r25, Y+1	; 0x01
    12bc:	84 0f       	add	r24, r20
    12be:	95 1f       	adc	r25, r21
    12c0:	02 96       	adiw	r24, 0x02	; 2
    12c2:	91 83       	std	Z+1, r25	; 0x01
    12c4:	80 83       	st	Z, r24
    12c6:	8a 81       	ldd	r24, Y+2	; 0x02
    12c8:	9b 81       	ldd	r25, Y+3	; 0x03
    12ca:	93 83       	std	Z+3, r25	; 0x03
    12cc:	82 83       	std	Z+2, r24	; 0x02
    12ce:	21 15       	cp	r18, r1
    12d0:	31 05       	cpc	r19, r1
    12d2:	29 f4       	brne	.+10     	; 0x12de <free+0x92>
    12d4:	f0 93 5d 03 	sts	0x035D, r31	; 0x80035d <__flp+0x1>
    12d8:	e0 93 5c 03 	sts	0x035C, r30	; 0x80035c <__flp>
    12dc:	3d c0       	rjmp	.+122    	; 0x1358 <free+0x10c>
    12de:	e9 01       	movw	r28, r18
    12e0:	fb 83       	std	Y+3, r31	; 0x03
    12e2:	ea 83       	std	Y+2, r30	; 0x02
    12e4:	49 91       	ld	r20, Y+
    12e6:	59 91       	ld	r21, Y+
    12e8:	c4 0f       	add	r28, r20
    12ea:	d5 1f       	adc	r29, r21
    12ec:	ec 17       	cp	r30, r28
    12ee:	fd 07       	cpc	r31, r29
    12f0:	61 f4       	brne	.+24     	; 0x130a <free+0xbe>
    12f2:	80 81       	ld	r24, Z
    12f4:	91 81       	ldd	r25, Z+1	; 0x01
    12f6:	84 0f       	add	r24, r20
    12f8:	95 1f       	adc	r25, r21
    12fa:	02 96       	adiw	r24, 0x02	; 2
    12fc:	e9 01       	movw	r28, r18
    12fe:	99 83       	std	Y+1, r25	; 0x01
    1300:	88 83       	st	Y, r24
    1302:	82 81       	ldd	r24, Z+2	; 0x02
    1304:	93 81       	ldd	r25, Z+3	; 0x03
    1306:	9b 83       	std	Y+3, r25	; 0x03
    1308:	8a 83       	std	Y+2, r24	; 0x02
    130a:	e0 e0       	ldi	r30, 0x00	; 0
    130c:	f0 e0       	ldi	r31, 0x00	; 0
    130e:	12 96       	adiw	r26, 0x02	; 2
    1310:	8d 91       	ld	r24, X+
    1312:	9c 91       	ld	r25, X
    1314:	13 97       	sbiw	r26, 0x03	; 3
    1316:	00 97       	sbiw	r24, 0x00	; 0
    1318:	19 f0       	breq	.+6      	; 0x1320 <free+0xd4>
    131a:	fd 01       	movw	r30, r26
    131c:	dc 01       	movw	r26, r24
    131e:	f7 cf       	rjmp	.-18     	; 0x130e <free+0xc2>
    1320:	8d 91       	ld	r24, X+
    1322:	9c 91       	ld	r25, X
    1324:	11 97       	sbiw	r26, 0x01	; 1
    1326:	9d 01       	movw	r18, r26
    1328:	2e 5f       	subi	r18, 0xFE	; 254
    132a:	3f 4f       	sbci	r19, 0xFF	; 255
    132c:	82 0f       	add	r24, r18
    132e:	93 1f       	adc	r25, r19
    1330:	20 91 5a 03 	lds	r18, 0x035A	; 0x80035a <__brkval>
    1334:	30 91 5b 03 	lds	r19, 0x035B	; 0x80035b <__brkval+0x1>
    1338:	28 17       	cp	r18, r24
    133a:	39 07       	cpc	r19, r25
    133c:	69 f4       	brne	.+26     	; 0x1358 <free+0x10c>
    133e:	30 97       	sbiw	r30, 0x00	; 0
    1340:	29 f4       	brne	.+10     	; 0x134c <free+0x100>
    1342:	10 92 5d 03 	sts	0x035D, r1	; 0x80035d <__flp+0x1>
    1346:	10 92 5c 03 	sts	0x035C, r1	; 0x80035c <__flp>
    134a:	02 c0       	rjmp	.+4      	; 0x1350 <free+0x104>
    134c:	13 82       	std	Z+3, r1	; 0x03
    134e:	12 82       	std	Z+2, r1	; 0x02
    1350:	b0 93 5b 03 	sts	0x035B, r27	; 0x80035b <__brkval+0x1>
    1354:	a0 93 5a 03 	sts	0x035A, r26	; 0x80035a <__brkval>
    1358:	df 91       	pop	r29
    135a:	cf 91       	pop	r28
    135c:	08 95       	ret

0000135e <strnlen_P>:
    135e:	fc 01       	movw	r30, r24
    1360:	05 90       	lpm	r0, Z+
    1362:	61 50       	subi	r22, 0x01	; 1
    1364:	70 40       	sbci	r23, 0x00	; 0
    1366:	01 10       	cpse	r0, r1
    1368:	d8 f7       	brcc	.-10     	; 0x1360 <strnlen_P+0x2>
    136a:	80 95       	com	r24
    136c:	90 95       	com	r25
    136e:	8e 0f       	add	r24, r30
    1370:	9f 1f       	adc	r25, r31
    1372:	08 95       	ret

00001374 <memset>:
    1374:	dc 01       	movw	r26, r24
    1376:	01 c0       	rjmp	.+2      	; 0x137a <memset+0x6>
    1378:	6d 93       	st	X+, r22
    137a:	41 50       	subi	r20, 0x01	; 1
    137c:	50 40       	sbci	r21, 0x00	; 0
    137e:	e0 f7       	brcc	.-8      	; 0x1378 <memset+0x4>
    1380:	08 95       	ret

00001382 <strnlen>:
    1382:	fc 01       	movw	r30, r24
    1384:	61 50       	subi	r22, 0x01	; 1
    1386:	70 40       	sbci	r23, 0x00	; 0
    1388:	01 90       	ld	r0, Z+
    138a:	01 10       	cpse	r0, r1
    138c:	d8 f7       	brcc	.-10     	; 0x1384 <strnlen+0x2>
    138e:	80 95       	com	r24
    1390:	90 95       	com	r25
    1392:	8e 0f       	add	r24, r30
    1394:	9f 1f       	adc	r25, r31
    1396:	08 95       	ret

00001398 <fputc>:
    1398:	0f 93       	push	r16
    139a:	1f 93       	push	r17
    139c:	cf 93       	push	r28
    139e:	df 93       	push	r29
    13a0:	fb 01       	movw	r30, r22
    13a2:	23 81       	ldd	r18, Z+3	; 0x03
    13a4:	21 fd       	sbrc	r18, 1
    13a6:	03 c0       	rjmp	.+6      	; 0x13ae <fputc+0x16>
    13a8:	8f ef       	ldi	r24, 0xFF	; 255
    13aa:	9f ef       	ldi	r25, 0xFF	; 255
    13ac:	2c c0       	rjmp	.+88     	; 0x1406 <fputc+0x6e>
    13ae:	22 ff       	sbrs	r18, 2
    13b0:	16 c0       	rjmp	.+44     	; 0x13de <fputc+0x46>
    13b2:	46 81       	ldd	r20, Z+6	; 0x06
    13b4:	57 81       	ldd	r21, Z+7	; 0x07
    13b6:	24 81       	ldd	r18, Z+4	; 0x04
    13b8:	35 81       	ldd	r19, Z+5	; 0x05
    13ba:	42 17       	cp	r20, r18
    13bc:	53 07       	cpc	r21, r19
    13be:	44 f4       	brge	.+16     	; 0x13d0 <fputc+0x38>
    13c0:	a0 81       	ld	r26, Z
    13c2:	b1 81       	ldd	r27, Z+1	; 0x01
    13c4:	9d 01       	movw	r18, r26
    13c6:	2f 5f       	subi	r18, 0xFF	; 255
    13c8:	3f 4f       	sbci	r19, 0xFF	; 255
    13ca:	31 83       	std	Z+1, r19	; 0x01
    13cc:	20 83       	st	Z, r18
    13ce:	8c 93       	st	X, r24
    13d0:	26 81       	ldd	r18, Z+6	; 0x06
    13d2:	37 81       	ldd	r19, Z+7	; 0x07
    13d4:	2f 5f       	subi	r18, 0xFF	; 255
    13d6:	3f 4f       	sbci	r19, 0xFF	; 255
    13d8:	37 83       	std	Z+7, r19	; 0x07
    13da:	26 83       	std	Z+6, r18	; 0x06
    13dc:	14 c0       	rjmp	.+40     	; 0x1406 <fputc+0x6e>
    13de:	8b 01       	movw	r16, r22
    13e0:	ec 01       	movw	r28, r24
    13e2:	fb 01       	movw	r30, r22
    13e4:	00 84       	ldd	r0, Z+8	; 0x08
    13e6:	f1 85       	ldd	r31, Z+9	; 0x09
    13e8:	e0 2d       	mov	r30, r0
    13ea:	19 95       	eicall
    13ec:	89 2b       	or	r24, r25
    13ee:	e1 f6       	brne	.-72     	; 0x13a8 <fputc+0x10>
    13f0:	d8 01       	movw	r26, r16
    13f2:	16 96       	adiw	r26, 0x06	; 6
    13f4:	8d 91       	ld	r24, X+
    13f6:	9c 91       	ld	r25, X
    13f8:	17 97       	sbiw	r26, 0x07	; 7
    13fa:	01 96       	adiw	r24, 0x01	; 1
    13fc:	17 96       	adiw	r26, 0x07	; 7
    13fe:	9c 93       	st	X, r25
    1400:	8e 93       	st	-X, r24
    1402:	16 97       	sbiw	r26, 0x06	; 6
    1404:	ce 01       	movw	r24, r28
    1406:	df 91       	pop	r29
    1408:	cf 91       	pop	r28
    140a:	1f 91       	pop	r17
    140c:	0f 91       	pop	r16
    140e:	08 95       	ret

00001410 <__ultoa_invert>:
    1410:	fa 01       	movw	r30, r20
    1412:	aa 27       	eor	r26, r26
    1414:	28 30       	cpi	r18, 0x08	; 8
    1416:	51 f1       	breq	.+84     	; 0x146c <__ultoa_invert+0x5c>
    1418:	20 31       	cpi	r18, 0x10	; 16
    141a:	81 f1       	breq	.+96     	; 0x147c <__ultoa_invert+0x6c>
    141c:	e8 94       	clt
    141e:	6f 93       	push	r22
    1420:	6e 7f       	andi	r22, 0xFE	; 254
    1422:	6e 5f       	subi	r22, 0xFE	; 254
    1424:	7f 4f       	sbci	r23, 0xFF	; 255
    1426:	8f 4f       	sbci	r24, 0xFF	; 255
    1428:	9f 4f       	sbci	r25, 0xFF	; 255
    142a:	af 4f       	sbci	r26, 0xFF	; 255
    142c:	b1 e0       	ldi	r27, 0x01	; 1
    142e:	3e d0       	rcall	.+124    	; 0x14ac <__ultoa_invert+0x9c>
    1430:	b4 e0       	ldi	r27, 0x04	; 4
    1432:	3c d0       	rcall	.+120    	; 0x14ac <__ultoa_invert+0x9c>
    1434:	67 0f       	add	r22, r23
    1436:	78 1f       	adc	r23, r24
    1438:	89 1f       	adc	r24, r25
    143a:	9a 1f       	adc	r25, r26
    143c:	a1 1d       	adc	r26, r1
    143e:	68 0f       	add	r22, r24
    1440:	79 1f       	adc	r23, r25
    1442:	8a 1f       	adc	r24, r26
    1444:	91 1d       	adc	r25, r1
    1446:	a1 1d       	adc	r26, r1
    1448:	6a 0f       	add	r22, r26
    144a:	71 1d       	adc	r23, r1
    144c:	81 1d       	adc	r24, r1
    144e:	91 1d       	adc	r25, r1
    1450:	a1 1d       	adc	r26, r1
    1452:	20 d0       	rcall	.+64     	; 0x1494 <__ultoa_invert+0x84>
    1454:	09 f4       	brne	.+2      	; 0x1458 <__ultoa_invert+0x48>
    1456:	68 94       	set
    1458:	3f 91       	pop	r19
    145a:	2a e0       	ldi	r18, 0x0A	; 10
    145c:	26 9f       	mul	r18, r22
    145e:	11 24       	eor	r1, r1
    1460:	30 19       	sub	r19, r0
    1462:	30 5d       	subi	r19, 0xD0	; 208
    1464:	31 93       	st	Z+, r19
    1466:	de f6       	brtc	.-74     	; 0x141e <__ultoa_invert+0xe>
    1468:	cf 01       	movw	r24, r30
    146a:	08 95       	ret
    146c:	46 2f       	mov	r20, r22
    146e:	47 70       	andi	r20, 0x07	; 7
    1470:	40 5d       	subi	r20, 0xD0	; 208
    1472:	41 93       	st	Z+, r20
    1474:	b3 e0       	ldi	r27, 0x03	; 3
    1476:	0f d0       	rcall	.+30     	; 0x1496 <__ultoa_invert+0x86>
    1478:	c9 f7       	brne	.-14     	; 0x146c <__ultoa_invert+0x5c>
    147a:	f6 cf       	rjmp	.-20     	; 0x1468 <__ultoa_invert+0x58>
    147c:	46 2f       	mov	r20, r22
    147e:	4f 70       	andi	r20, 0x0F	; 15
    1480:	40 5d       	subi	r20, 0xD0	; 208
    1482:	4a 33       	cpi	r20, 0x3A	; 58
    1484:	18 f0       	brcs	.+6      	; 0x148c <__ultoa_invert+0x7c>
    1486:	49 5d       	subi	r20, 0xD9	; 217
    1488:	31 fd       	sbrc	r19, 1
    148a:	40 52       	subi	r20, 0x20	; 32
    148c:	41 93       	st	Z+, r20
    148e:	02 d0       	rcall	.+4      	; 0x1494 <__ultoa_invert+0x84>
    1490:	a9 f7       	brne	.-22     	; 0x147c <__ultoa_invert+0x6c>
    1492:	ea cf       	rjmp	.-44     	; 0x1468 <__ultoa_invert+0x58>
    1494:	b4 e0       	ldi	r27, 0x04	; 4
    1496:	a6 95       	lsr	r26
    1498:	97 95       	ror	r25
    149a:	87 95       	ror	r24
    149c:	77 95       	ror	r23
    149e:	67 95       	ror	r22
    14a0:	ba 95       	dec	r27
    14a2:	c9 f7       	brne	.-14     	; 0x1496 <__ultoa_invert+0x86>
    14a4:	00 97       	sbiw	r24, 0x00	; 0
    14a6:	61 05       	cpc	r22, r1
    14a8:	71 05       	cpc	r23, r1
    14aa:	08 95       	ret
    14ac:	9b 01       	movw	r18, r22
    14ae:	ac 01       	movw	r20, r24
    14b0:	0a 2e       	mov	r0, r26
    14b2:	06 94       	lsr	r0
    14b4:	57 95       	ror	r21
    14b6:	47 95       	ror	r20
    14b8:	37 95       	ror	r19
    14ba:	27 95       	ror	r18
    14bc:	ba 95       	dec	r27
    14be:	c9 f7       	brne	.-14     	; 0x14b2 <__ultoa_invert+0xa2>
    14c0:	62 0f       	add	r22, r18
    14c2:	73 1f       	adc	r23, r19
    14c4:	84 1f       	adc	r24, r20
    14c6:	95 1f       	adc	r25, r21
    14c8:	a0 1d       	adc	r26, r0
    14ca:	08 95       	ret

000014cc <_exit>:
    14cc:	f8 94       	cli

000014ce <__stop_program>:
    14ce:	ff cf       	rjmp	.-2      	; 0x14ce <__stop_program>
