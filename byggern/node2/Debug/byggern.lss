
byggern.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000138  00800200  0000146c  00001500  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000146c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001c  00800338  00800338  00001638  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001638  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001694  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000188  00000000  00000000  000016d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000212e  00000000  00000000  0000185c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000014a5  00000000  00000000  0000398a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d8a  00000000  00000000  00004e2f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003d0  00000000  00000000  00005bbc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008ca  00000000  00000000  00005f8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ba6  00000000  00000000  00006856  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000120  00000000  00000000  000073fc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	88 c0       	rjmp	.+272    	; 0x112 <__ctors_end>
       2:	00 00       	nop
       4:	a6 c0       	rjmp	.+332    	; 0x152 <__bad_interrupt>
       6:	00 00       	nop
       8:	a4 c0       	rjmp	.+328    	; 0x152 <__bad_interrupt>
       a:	00 00       	nop
       c:	a2 c0       	rjmp	.+324    	; 0x152 <__bad_interrupt>
       e:	00 00       	nop
      10:	a0 c0       	rjmp	.+320    	; 0x152 <__bad_interrupt>
      12:	00 00       	nop
      14:	9f c0       	rjmp	.+318    	; 0x154 <__vector_5>
      16:	00 00       	nop
      18:	9c c0       	rjmp	.+312    	; 0x152 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	9a c0       	rjmp	.+308    	; 0x152 <__bad_interrupt>
      1e:	00 00       	nop
      20:	98 c0       	rjmp	.+304    	; 0x152 <__bad_interrupt>
      22:	00 00       	nop
      24:	96 c0       	rjmp	.+300    	; 0x152 <__bad_interrupt>
      26:	00 00       	nop
      28:	94 c0       	rjmp	.+296    	; 0x152 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	92 c0       	rjmp	.+292    	; 0x152 <__bad_interrupt>
      2e:	00 00       	nop
      30:	90 c0       	rjmp	.+288    	; 0x152 <__bad_interrupt>
      32:	00 00       	nop
      34:	8e c0       	rjmp	.+284    	; 0x152 <__bad_interrupt>
      36:	00 00       	nop
      38:	8c c0       	rjmp	.+280    	; 0x152 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	8a c0       	rjmp	.+276    	; 0x152 <__bad_interrupt>
      3e:	00 00       	nop
      40:	88 c0       	rjmp	.+272    	; 0x152 <__bad_interrupt>
      42:	00 00       	nop
      44:	86 c0       	rjmp	.+268    	; 0x152 <__bad_interrupt>
      46:	00 00       	nop
      48:	84 c0       	rjmp	.+264    	; 0x152 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	82 c0       	rjmp	.+260    	; 0x152 <__bad_interrupt>
      4e:	00 00       	nop
      50:	80 c0       	rjmp	.+256    	; 0x152 <__bad_interrupt>
      52:	00 00       	nop
      54:	7e c0       	rjmp	.+252    	; 0x152 <__bad_interrupt>
      56:	00 00       	nop
      58:	7c c0       	rjmp	.+248    	; 0x152 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	7a c0       	rjmp	.+244    	; 0x152 <__bad_interrupt>
      5e:	00 00       	nop
      60:	78 c0       	rjmp	.+240    	; 0x152 <__bad_interrupt>
      62:	00 00       	nop
      64:	76 c0       	rjmp	.+236    	; 0x152 <__bad_interrupt>
      66:	00 00       	nop
      68:	74 c0       	rjmp	.+232    	; 0x152 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	72 c0       	rjmp	.+228    	; 0x152 <__bad_interrupt>
      6e:	00 00       	nop
      70:	70 c0       	rjmp	.+224    	; 0x152 <__bad_interrupt>
      72:	00 00       	nop
      74:	6e c0       	rjmp	.+220    	; 0x152 <__bad_interrupt>
      76:	00 00       	nop
      78:	6c c0       	rjmp	.+216    	; 0x152 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	6a c0       	rjmp	.+212    	; 0x152 <__bad_interrupt>
      7e:	00 00       	nop
      80:	68 c0       	rjmp	.+208    	; 0x152 <__bad_interrupt>
      82:	00 00       	nop
      84:	66 c0       	rjmp	.+204    	; 0x152 <__bad_interrupt>
      86:	00 00       	nop
      88:	64 c0       	rjmp	.+200    	; 0x152 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	62 c0       	rjmp	.+196    	; 0x152 <__bad_interrupt>
      8e:	00 00       	nop
      90:	60 c0       	rjmp	.+192    	; 0x152 <__bad_interrupt>
      92:	00 00       	nop
      94:	5e c0       	rjmp	.+188    	; 0x152 <__bad_interrupt>
      96:	00 00       	nop
      98:	5c c0       	rjmp	.+184    	; 0x152 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	5a c0       	rjmp	.+180    	; 0x152 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	58 c0       	rjmp	.+176    	; 0x152 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	56 c0       	rjmp	.+172    	; 0x152 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	54 c0       	rjmp	.+168    	; 0x152 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	52 c0       	rjmp	.+164    	; 0x152 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	50 c0       	rjmp	.+160    	; 0x152 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	4e c0       	rjmp	.+156    	; 0x152 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	4c c0       	rjmp	.+152    	; 0x152 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	4a c0       	rjmp	.+148    	; 0x152 <__bad_interrupt>
      be:	00 00       	nop
      c0:	48 c0       	rjmp	.+144    	; 0x152 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	46 c0       	rjmp	.+140    	; 0x152 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	44 c0       	rjmp	.+136    	; 0x152 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	42 c0       	rjmp	.+132    	; 0x152 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	40 c0       	rjmp	.+128    	; 0x152 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	3e c0       	rjmp	.+124    	; 0x152 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	3c c0       	rjmp	.+120    	; 0x152 <__bad_interrupt>
      da:	00 00       	nop
      dc:	3a c0       	rjmp	.+116    	; 0x152 <__bad_interrupt>
      de:	00 00       	nop
      e0:	38 c0       	rjmp	.+112    	; 0x152 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	08 4a       	sbci	r16, 0xA8	; 168
      e6:	d7 3b       	cpi	r29, 0xB7	; 183
      e8:	3b ce       	rjmp	.-906    	; 0xfffffd60 <__eeprom_end+0xff7efd60>
      ea:	01 6e       	ori	r16, 0xE1	; 225
      ec:	84 bc       	out	0x24, r8	; 36
      ee:	bf fd       	.word	0xfdbf	; ????
      f0:	c1 2f       	mov	r28, r17
      f2:	3d 6c       	ori	r19, 0xCD	; 205
      f4:	74 31       	cpi	r23, 0x14	; 20
      f6:	9a bd       	out	0x2a, r25	; 42
      f8:	56 83       	std	Z+6, r21	; 0x06
      fa:	3d da       	rcall	.-2950   	; 0xfffff576 <__eeprom_end+0xff7ef576>
      fc:	3d 00       	.word	0x003d	; ????
      fe:	c7 7f       	andi	r28, 0xF7	; 247
     100:	11 be       	out	0x31, r1	; 49
     102:	d9 e4       	ldi	r29, 0x49	; 73
     104:	bb 4c       	sbci	r27, 0xCB	; 203
     106:	3e 91       	ld	r19, -X
     108:	6b aa       	std	Y+51, r6	; 0x33
     10a:	aa be       	out	0x3a, r10	; 58
     10c:	00 00       	nop
     10e:	00 80       	ld	r0, Z
     110:	3f 00       	.word	0x003f	; ????

00000112 <__ctors_end>:
     112:	11 24       	eor	r1, r1
     114:	1f be       	out	0x3f, r1	; 63
     116:	cf ef       	ldi	r28, 0xFF	; 255
     118:	d1 e2       	ldi	r29, 0x21	; 33
     11a:	de bf       	out	0x3e, r29	; 62
     11c:	cd bf       	out	0x3d, r28	; 61
     11e:	00 e0       	ldi	r16, 0x00	; 0
     120:	0c bf       	out	0x3c, r16	; 60

00000122 <__do_copy_data>:
     122:	13 e0       	ldi	r17, 0x03	; 3
     124:	a0 e0       	ldi	r26, 0x00	; 0
     126:	b2 e0       	ldi	r27, 0x02	; 2
     128:	ec e6       	ldi	r30, 0x6C	; 108
     12a:	f4 e1       	ldi	r31, 0x14	; 20
     12c:	00 e0       	ldi	r16, 0x00	; 0
     12e:	0b bf       	out	0x3b, r16	; 59
     130:	02 c0       	rjmp	.+4      	; 0x136 <__do_copy_data+0x14>
     132:	07 90       	elpm	r0, Z+
     134:	0d 92       	st	X+, r0
     136:	a8 33       	cpi	r26, 0x38	; 56
     138:	b1 07       	cpc	r27, r17
     13a:	d9 f7       	brne	.-10     	; 0x132 <__do_copy_data+0x10>

0000013c <__do_clear_bss>:
     13c:	23 e0       	ldi	r18, 0x03	; 3
     13e:	a8 e3       	ldi	r26, 0x38	; 56
     140:	b3 e0       	ldi	r27, 0x03	; 3
     142:	01 c0       	rjmp	.+2      	; 0x146 <.do_clear_bss_start>

00000144 <.do_clear_bss_loop>:
     144:	1d 92       	st	X+, r1

00000146 <.do_clear_bss_start>:
     146:	a4 35       	cpi	r26, 0x54	; 84
     148:	b2 07       	cpc	r27, r18
     14a:	e1 f7       	brne	.-8      	; 0x144 <.do_clear_bss_loop>
     14c:	12 d0       	rcall	.+36     	; 0x172 <main>
     14e:	0c 94 34 0a 	jmp	0x1468	; 0x1468 <_exit>

00000152 <__bad_interrupt>:
     152:	56 cf       	rjmp	.-340    	; 0x0 <__vectors>

00000154 <__vector_5>:
#include "pwm.h"


volatile CAN_message_t received_message;
volatile uint8_t flag = 0;
ISR (INT4_vect) {
     154:	1f 92       	push	r1
     156:	0f 92       	push	r0
     158:	0f b6       	in	r0, 0x3f	; 63
     15a:	0f 92       	push	r0
     15c:	11 24       	eor	r1, r1
     15e:	8f 93       	push	r24
	//cli();
	flag= 1;
     160:	81 e0       	ldi	r24, 0x01	; 1
     162:	80 93 38 03 	sts	0x0338, r24	; 0x800338 <__data_end>
	
	
	
	//sei();
	
}
     166:	8f 91       	pop	r24
     168:	0f 90       	pop	r0
     16a:	0f be       	out	0x3f, r0	; 63
     16c:	0f 90       	pop	r0
     16e:	1f 90       	pop	r1
     170:	18 95       	reti

00000172 <main>:

#define PERIOD_MS					20
#define PWM_PRESCALER				8
int main(void)
//p.23 for can read instructions
{
     172:	cf 93       	push	r28
     174:	df 93       	push	r29
     176:	cd b7       	in	r28, 0x3d	; 61
     178:	de b7       	in	r29, 0x3e	; 62
     17a:	2b 97       	sbiw	r28, 0x0b	; 11
     17c:	0f b6       	in	r0, 0x3f	; 63
     17e:	f8 94       	cli
     180:	de bf       	out	0x3e, r29	; 62
     182:	0f be       	out	0x3f, r0	; 63
     184:	cd bf       	out	0x3d, r28	; 61
	setupInit();
     186:	16 d2       	rcall	.+1068   	; 0x5b4 <setupInit>
	printf("\n\r---------------------------------------\n\n\n\n\n\n\r");
     188:	86 e0       	ldi	r24, 0x06	; 6
     18a:	92 e0       	ldi	r25, 0x02	; 2
     18c:	9f 93       	push	r25
     18e:	8f 93       	push	r24
     190:	69 d5       	rcall	.+2770   	; 0xc64 <printf>
	printf("her: %i\n\r", F_CPU);
     192:	1f 92       	push	r1
     194:	84 ef       	ldi	r24, 0xF4	; 244
     196:	8f 93       	push	r24
     198:	84 e2       	ldi	r24, 0x24	; 36
     19a:	8f 93       	push	r24
     19c:	1f 92       	push	r1
     19e:	87 e3       	ldi	r24, 0x37	; 55
     1a0:	92 e0       	ldi	r25, 0x02	; 2
     1a2:	9f 93       	push	r25
     1a4:	8f 93       	push	r24
     1a6:	5e d5       	rcall	.+2748   	; 0xc64 <printf>

	//test_SRAM();
	volatile CAN_message_t message;
	message.ID = 0b10101010111;
     1a8:	87 e5       	ldi	r24, 0x57	; 87
     1aa:	95 e0       	ldi	r25, 0x05	; 5
     1ac:	9a 87       	std	Y+10, r25	; 0x0a
     1ae:	89 87       	std	Y+9, r24	; 0x09
	message.data_length = 3;
     1b0:	83 e0       	ldi	r24, 0x03	; 3
     1b2:	8b 87       	std	Y+11, r24	; 0x0b
	message.data[0] = 13;
     1b4:	8d e0       	ldi	r24, 0x0D	; 13
     1b6:	89 83       	std	Y+1, r24	; 0x01
	message.data[1] = 22;
     1b8:	86 e1       	ldi	r24, 0x16	; 22
     1ba:	8a 83       	std	Y+2, r24	; 0x02
	message.data[2] = 33;
     1bc:	81 e2       	ldi	r24, 0x21	; 33
     1be:	8b 83       	std	Y+3, r24	; 0x03
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1c0:	2f ef       	ldi	r18, 0xFF	; 255
     1c2:	87 ea       	ldi	r24, 0xA7	; 167
     1c4:	91 e6       	ldi	r25, 0x61	; 97
     1c6:	21 50       	subi	r18, 0x01	; 1
     1c8:	80 40       	sbci	r24, 0x00	; 0
     1ca:	90 40       	sbci	r25, 0x00	; 0
     1cc:	e1 f7       	brne	.-8      	; 0x1c6 <main+0x54>
     1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <main+0x5e>
	
	_delay_ms(2000);
	CAN_controller_setMode(MODE_NORMAL);
     1d0:	00 00       	nop
     1d2:	80 e0       	ldi	r24, 0x00	; 0
     1d4:	a0 d0       	rcall	.+320    	; 0x316 <CAN_controller_setMode>
	pwm_setPulseWidth(2.1);
     1d6:	66 e6       	ldi	r22, 0x66	; 102
     1d8:	76 e6       	ldi	r23, 0x66	; 102
     1da:	86 e0       	ldi	r24, 0x06	; 6
     1dc:	90 e4       	ldi	r25, 0x40	; 64
     1de:	be d1       	rcall	.+892    	; 0x55c <pwm_setPulseWidth>
     1e0:	0f b6       	in	r0, 0x3f	; 63
     1e2:	f8 94       	cli
     1e4:	de bf       	out	0x3e, r29	; 62
     1e6:	0f be       	out	0x3f, r0	; 63
     1e8:	cd bf       	out	0x3d, r28	; 61
		_delay_ms(50);
		//Put microcontroller to sleep until next interrupt. 

		
		if (flag) {
			printf("Message received");
     1ea:	01 e4       	ldi	r16, 0x41	; 65
     1ec:	12 e0       	ldi	r17, 0x02	; 2
     1ee:	9f ef       	ldi	r25, 0xFF	; 255
     1f0:	20 e7       	ldi	r18, 0x70	; 112
     1f2:	82 e0       	ldi	r24, 0x02	; 2
     1f4:	91 50       	subi	r25, 0x01	; 1
     1f6:	20 40       	sbci	r18, 0x00	; 0
     1f8:	80 40       	sbci	r24, 0x00	; 0
     1fa:	e1 f7       	brne	.-8      	; 0x1f4 <main+0x82>
     1fc:	00 c0       	rjmp	.+0      	; 0x1fe <main+0x8c>
     1fe:	00 00       	nop
		
		_delay_ms(50);
		//Put microcontroller to sleep until next interrupt. 

		
		if (flag) {
     200:	80 91 38 03 	lds	r24, 0x0338	; 0x800338 <__data_end>
     204:	88 23       	and	r24, r24
			printf("Message received");
     206:	81 f0       	breq	.+32     	; 0x228 <main+0xb6>
     208:	1f 93       	push	r17
			flag=0;
     20a:	0f 93       	push	r16
     20c:	2b d5       	rcall	.+2646   	; 0xc64 <printf>
			joystick_readPositionOverCAN();
     20e:	10 92 38 03 	sts	0x0338, r1	; 0x800338 <__data_end>
			joystick_printPosition();
     212:	0a d1       	rcall	.+532    	; 0x428 <joystick_readPositionOverCAN>
			uint8_t mask = 0b11; 
			CAN_controller_bitModify(mask, CANINTF, 0b00);
     214:	60 d1       	rcall	.+704    	; 0x4d6 <joystick_printPosition>
     216:	40 e0       	ldi	r20, 0x00	; 0
     218:	50 e0       	ldi	r21, 0x00	; 0
     21a:	6c e2       	ldi	r22, 0x2C	; 44
     21c:	70 e0       	ldi	r23, 0x00	; 0
     21e:	83 e0       	ldi	r24, 0x03	; 3
     220:	90 e0       	ldi	r25, 0x00	; 0
     222:	51 d0       	rcall	.+162    	; 0x2c6 <CAN_controller_bitModify>
     224:	0f 90       	pop	r0
     226:	0f 90       	pop	r0
     228:	9f ef       	ldi	r25, 0xFF	; 255
     22a:	20 e7       	ldi	r18, 0x70	; 112
     22c:	82 e0       	ldi	r24, 0x02	; 2
     22e:	91 50       	subi	r25, 0x01	; 1
     230:	20 40       	sbci	r18, 0x00	; 0
     232:	80 40       	sbci	r24, 0x00	; 0
     234:	e1 f7       	brne	.-8      	; 0x22e <main+0xbc>
     236:	00 c0       	rjmp	.+0      	; 0x238 <main+0xc6>
     238:	00 00       	nop
     23a:	d9 cf       	rjmp	.-78     	; 0x1ee <main+0x7c>

0000023c <CAN_receiveMessage>:
	CAN_controller_RTS(buffer_number);

	//ERROR HANDLING?	
}

void CAN_receiveMessage(CAN_message_t * received_message) {
     23c:	ef 92       	push	r14
     23e:	ff 92       	push	r15
     240:	0f 93       	push	r16
     242:	1f 93       	push	r17
     244:	cf 93       	push	r28
     246:	7c 01       	movw	r14, r24
	
	
	uint8_t buffer = 0;
	switch (buffer) {
		case 0:
				received_message->ID = ((CAN_controller_read(MCP_RXB0SIDL) & 0b11100000) >> 5) + (CAN_controller_read(MCP_RXB0SIDH) << 3); 
     248:	82 e6       	ldi	r24, 0x62	; 98
     24a:	2c d0       	rcall	.+88     	; 0x2a4 <CAN_controller_read>
     24c:	c8 2f       	mov	r28, r24
     24e:	81 e6       	ldi	r24, 0x61	; 97
     250:	29 d0       	rcall	.+82     	; 0x2a4 <CAN_controller_read>
     252:	c2 95       	swap	r28
     254:	c6 95       	lsr	r28
     256:	c7 70       	andi	r28, 0x07	; 7
     258:	28 e0       	ldi	r18, 0x08	; 8
     25a:	82 9f       	mul	r24, r18
     25c:	c0 01       	movw	r24, r0
     25e:	11 24       	eor	r1, r1
     260:	8c 0f       	add	r24, r28
     262:	91 1d       	adc	r25, r1
     264:	f7 01       	movw	r30, r14
     266:	91 87       	std	Z+9, r25	; 0x09
     268:	80 87       	std	Z+8, r24	; 0x08
				
				//printf("Whole id: %i\n\r", received_message->ID);
				received_message->data_length = (CAN_controller_read(MCP_RXB0DLC) & 0b00001111);
     26a:	85 e6       	ldi	r24, 0x65	; 101
     26c:	1b d0       	rcall	.+54     	; 0x2a4 <CAN_controller_read>
     26e:	8f 70       	andi	r24, 0x0F	; 15
     270:	f7 01       	movw	r30, r14
     272:	82 87       	std	Z+10, r24	; 0x0a
     274:	82 85       	ldd	r24, Z+10	; 0x0a
				//printf("data length read: %i\n\r",(CAN_controller_read(MCP_RXB0DLC) & 0b00001111));
				for (uint8_t i = 0; i != received_message->data_length; i++) {
     276:	88 23       	and	r24, r24
     278:	79 f0       	breq	.+30     	; 0x298 <CAN_receiveMessage+0x5c>
     27a:	c0 e0       	ldi	r28, 0x00	; 0
     27c:	0c 2f       	mov	r16, r28
					received_message->data[i] = CAN_controller_read(MCP_RXB0D0 + i);
     27e:	10 e0       	ldi	r17, 0x00	; 0
     280:	86 e6       	ldi	r24, 0x66	; 102
     282:	8c 0f       	add	r24, r28
     284:	0f d0       	rcall	.+30     	; 0x2a4 <CAN_controller_read>
     286:	f7 01       	movw	r30, r14
     288:	e0 0f       	add	r30, r16
     28a:	f1 1f       	adc	r31, r17
     28c:	80 83       	st	Z, r24
     28e:	cf 5f       	subi	r28, 0xFF	; 255
				received_message->ID = ((CAN_controller_read(MCP_RXB0SIDL) & 0b11100000) >> 5) + (CAN_controller_read(MCP_RXB0SIDH) << 3); 
				
				//printf("Whole id: %i\n\r", received_message->ID);
				received_message->data_length = (CAN_controller_read(MCP_RXB0DLC) & 0b00001111);
				//printf("data length read: %i\n\r",(CAN_controller_read(MCP_RXB0DLC) & 0b00001111));
				for (uint8_t i = 0; i != received_message->data_length; i++) {
     290:	f7 01       	movw	r30, r14
     292:	82 85       	ldd	r24, Z+10	; 0x0a
     294:	8c 13       	cpse	r24, r28
     296:	f2 cf       	rjmp	.-28     	; 0x27c <CAN_receiveMessage+0x40>
     298:	cf 91       	pop	r28
	}
	
	
	
	
}
     29a:	1f 91       	pop	r17
     29c:	0f 91       	pop	r16
     29e:	ff 90       	pop	r15
     2a0:	ef 90       	pop	r14
     2a2:	08 95       	ret

000002a4 <CAN_controller_read>:
     2a4:	cf 93       	push	r28
		default: 
			break;
			
	}
	SPI_setChipSelect(PB7, 1);
}
     2a6:	c8 2f       	mov	r28, r24
     2a8:	60 e0       	ldi	r22, 0x00	; 0
     2aa:	87 e0       	ldi	r24, 0x07	; 7
     2ac:	9d d1       	rcall	.+826    	; 0x5e8 <SPI_setChipSelect>
     2ae:	83 e0       	ldi	r24, 0x03	; 3
     2b0:	90 d1       	rcall	.+800    	; 0x5d2 <SPI_masterWrite>
     2b2:	8c 2f       	mov	r24, r28
     2b4:	8e d1       	rcall	.+796    	; 0x5d2 <SPI_masterWrite>
     2b6:	92 d1       	rcall	.+804    	; 0x5dc <SPI_masterRead>
     2b8:	c8 2f       	mov	r28, r24
     2ba:	61 e0       	ldi	r22, 0x01	; 1
     2bc:	87 e0       	ldi	r24, 0x07	; 7
     2be:	94 d1       	rcall	.+808    	; 0x5e8 <SPI_setChipSelect>
     2c0:	8c 2f       	mov	r24, r28
     2c2:	cf 91       	pop	r28
     2c4:	08 95       	ret

000002c6 <CAN_controller_bitModify>:
     2c6:	1f 93       	push	r17
     2c8:	cf 93       	push	r28
     2ca:	df 93       	push	r29
     2cc:	d8 2f       	mov	r29, r24
     2ce:	16 2f       	mov	r17, r22
     2d0:	c4 2f       	mov	r28, r20
     2d2:	60 e0       	ldi	r22, 0x00	; 0
     2d4:	87 e0       	ldi	r24, 0x07	; 7
     2d6:	88 d1       	rcall	.+784    	; 0x5e8 <SPI_setChipSelect>
     2d8:	85 e0       	ldi	r24, 0x05	; 5
     2da:	7b d1       	rcall	.+758    	; 0x5d2 <SPI_masterWrite>
     2dc:	81 2f       	mov	r24, r17
     2de:	79 d1       	rcall	.+754    	; 0x5d2 <SPI_masterWrite>
     2e0:	8d 2f       	mov	r24, r29
     2e2:	77 d1       	rcall	.+750    	; 0x5d2 <SPI_masterWrite>
     2e4:	8c 2f       	mov	r24, r28
     2e6:	75 d1       	rcall	.+746    	; 0x5d2 <SPI_masterWrite>
     2e8:	61 e0       	ldi	r22, 0x01	; 1
     2ea:	87 e0       	ldi	r24, 0x07	; 7
     2ec:	7d d1       	rcall	.+762    	; 0x5e8 <SPI_setChipSelect>
     2ee:	df 91       	pop	r29
     2f0:	cf 91       	pop	r28
     2f2:	1f 91       	pop	r17
     2f4:	08 95       	ret

000002f6 <CAN_controller_reset>:
     2f6:	60 e0       	ldi	r22, 0x00	; 0
     2f8:	87 e0       	ldi	r24, 0x07	; 7
     2fa:	76 d1       	rcall	.+748    	; 0x5e8 <SPI_setChipSelect>
     2fc:	82 e5       	ldi	r24, 0x52	; 82
     2fe:	92 e0       	ldi	r25, 0x02	; 2
     300:	9f 93       	push	r25
     302:	8f 93       	push	r24
     304:	af d4       	rcall	.+2398   	; 0xc64 <printf>
     306:	80 ec       	ldi	r24, 0xC0	; 192
     308:	64 d1       	rcall	.+712    	; 0x5d2 <SPI_masterWrite>
     30a:	61 e0       	ldi	r22, 0x01	; 1
     30c:	87 e0       	ldi	r24, 0x07	; 7
     30e:	6c d1       	rcall	.+728    	; 0x5e8 <SPI_setChipSelect>
     310:	0f 90       	pop	r0
     312:	0f 90       	pop	r0
     314:	08 95       	ret

00000316 <CAN_controller_setMode>:

void CAN_controller_setMode(uint8_t mode) {
     316:	cf 93       	push	r28
     318:	df 93       	push	r29
     31a:	c8 2f       	mov	r28, r24
	
	
	
	CAN_controller_reset();
     31c:	ec df       	rcall	.-40     	; 0x2f6 <CAN_controller_reset>
	uint8_t status = CAN_controller_read(MCP_CANSTAT);
     31e:	8e e0       	ldi	r24, 0x0E	; 14
     320:	c1 df       	rcall	.-126    	; 0x2a4 <CAN_controller_read>
	uint8_t mode_bits = (status & MODE_MASK);
     322:	80 7e       	andi	r24, 0xE0	; 224
	
	if (mode_bits != MODE_CONFIG) {
     324:	80 38       	cpi	r24, 0x80	; 128
     326:	61 f0       	breq	.+24     	; 0x340 <CAN_controller_setMode+0x2a>
		printf("Not in config mode, \t %i\n\r", mode_bits);
     328:	1f 92       	push	r1
     32a:	8f 93       	push	r24
     32c:	8e e5       	ldi	r24, 0x5E	; 94
     32e:	92 e0       	ldi	r25, 0x02	; 2
     330:	9f 93       	push	r25
     332:	8f 93       	push	r24
     334:	97 d4       	rcall	.+2350   	; 0xc64 <printf>
		return;
     336:	0f 90       	pop	r0
     338:	0f 90       	pop	r0
     33a:	0f 90       	pop	r0
     33c:	0f 90       	pop	r0
     33e:	32 c0       	rjmp	.+100    	; 0x3a4 <CAN_controller_setMode+0x8e>
	}
	
	
	//set in loopback mode p.60 MCP2515
	CAN_controller_bitModify(0b11101110, MCP_CANCTRL, mode | (0b1100));
     340:	4c 2f       	mov	r20, r28
     342:	4c 60       	ori	r20, 0x0C	; 12
     344:	6f e0       	ldi	r22, 0x0F	; 15
     346:	8e ee       	ldi	r24, 0xEE	; 238
     348:	be df       	rcall	.-132    	; 0x2c6 <CAN_controller_bitModify>
	CAN_controller_bitModify(0b11111111, MCP_CANINTE, 0b1);
     34a:	41 e0       	ldi	r20, 0x01	; 1
     34c:	6b e2       	ldi	r22, 0x2B	; 43
     34e:	8f ef       	ldi	r24, 0xFF	; 255
     350:	ba df       	rcall	.-140    	; 0x2c6 <CAN_controller_bitModify>
	CAN_controller_bitModify(0b01100000, MCP_RXB0CTRL, 0b01100000); //receive any type of message, no filter p. 27
     352:	40 e6       	ldi	r20, 0x60	; 96
     354:	60 e6       	ldi	r22, 0x60	; 96
     356:	80 e6       	ldi	r24, 0x60	; 96
     358:	b6 df       	rcall	.-148    	; 0x2c6 <CAN_controller_bitModify>
     35a:	2f ef       	ldi	r18, 0xFF	; 255
     35c:	83 ec       	ldi	r24, 0xC3	; 195
     35e:	99 e0       	ldi	r25, 0x09	; 9
     360:	21 50       	subi	r18, 0x01	; 1
     362:	80 40       	sbci	r24, 0x00	; 0
     364:	90 40       	sbci	r25, 0x00	; 0
     366:	e1 f7       	brne	.-8      	; 0x360 <CAN_controller_setMode+0x4a>
     368:	00 c0       	rjmp	.+0      	; 0x36a <CAN_controller_setMode+0x54>
     36a:	00 00       	nop

	_delay_ms(200);
	status = CAN_controller_read(MCP_CANSTAT);
     36c:	8e e0       	ldi	r24, 0x0E	; 14
     36e:	9a df       	rcall	.-204    	; 0x2a4 <CAN_controller_read>
     370:	d8 2f       	mov	r29, r24
	mode_bits = (status & MODE_MASK);
     372:	d0 7e       	andi	r29, 0xE0	; 224
     374:	cd 17       	cp	r28, r29
	if (mode_bits != mode) {
     376:	59 f0       	breq	.+22     	; 0x38e <CAN_controller_setMode+0x78>
		printf("Not in correct mode: Mode: %i\n\r", mode_bits);
     378:	1f 92       	push	r1
     37a:	df 93       	push	r29
     37c:	89 e7       	ldi	r24, 0x79	; 121
     37e:	92 e0       	ldi	r25, 0x02	; 2
     380:	9f 93       	push	r25
     382:	8f 93       	push	r24
     384:	6f d4       	rcall	.+2270   	; 0xc64 <printf>
     386:	0f 90       	pop	r0
     388:	0f 90       	pop	r0
     38a:	0f 90       	pop	r0
     38c:	0f 90       	pop	r0

	}
	printf("Mode set: %i\n\r", status & MODE_MASK);
     38e:	1f 92       	push	r1
     390:	df 93       	push	r29
     392:	89 e9       	ldi	r24, 0x99	; 153
     394:	92 e0       	ldi	r25, 0x02	; 2
     396:	9f 93       	push	r25
     398:	8f 93       	push	r24
     39a:	64 d4       	rcall	.+2248   	; 0xc64 <printf>
     39c:	0f 90       	pop	r0
     39e:	0f 90       	pop	r0
     3a0:	0f 90       	pop	r0
     3a2:	0f 90       	pop	r0
     3a4:	df 91       	pop	r29
}
     3a6:	cf 91       	pop	r28
     3a8:	08 95       	ret

000003aa <CAN_controller_init>:
     3aa:	88 ea       	ldi	r24, 0xA8	; 168
	SPI_masterWrite(MCP_RESET);
	SPI_setChipSelect(PB7, 1);
}
void CAN_controller_init() {
	
	printf("Can controller init \n\r");
     3ac:	92 e0       	ldi	r25, 0x02	; 2
     3ae:	9f 93       	push	r25
     3b0:	8f 93       	push	r24
     3b2:	58 d4       	rcall	.+2224   	; 0xc64 <printf>
	SPI_masterInit();
     3b4:	05 d1       	rcall	.+522    	; 0x5c0 <SPI_masterInit>
     3b6:	8f eb       	ldi	r24, 0xBF	; 191
	printf("SPI master init done \n\r");
     3b8:	92 e0       	ldi	r25, 0x02	; 2
     3ba:	9f 93       	push	r25
     3bc:	8f 93       	push	r24
     3be:	52 d4       	rcall	.+2212   	; 0xc64 <printf>

	CAN_controller_setMode(MODE_LOOPBACK);
     3c0:	80 e4       	ldi	r24, 0x40	; 64
     3c2:	a9 df       	rcall	.-174    	; 0x316 <CAN_controller_setMode>
     3c4:	87 ed       	ldi	r24, 0xD7	; 215
	printf("Modes set \n\r");
     3c6:	92 e0       	ldi	r25, 0x02	; 2
     3c8:	9f 93       	push	r25
     3ca:	8f 93       	push	r24
     3cc:	4b d4       	rcall	.+2198   	; 0xc64 <printf>
     3ce:	78 94       	sei

	//set interrupt on 2560
	//Global interrupt enable
	sei();
     3d0:	ec 9a       	sbi	0x1d, 4	; 29
	//SREG |= (1 << I);
	EIMSK |= 1 << INT4;	//interrupt on pin INT4
     3d2:	ea e6       	ldi	r30, 0x6A	; 106
	EICRB |= 1 << ISC41; //Turn on falling edge
     3d4:	f0 e0       	ldi	r31, 0x00	; 0
     3d6:	80 81       	ld	r24, Z
     3d8:	82 60       	ori	r24, 0x02	; 2
     3da:	80 83       	st	Z, r24
     3dc:	80 81       	ld	r24, Z
	EICRB &= ~(1 << ISC40); //....
     3de:	8e 7f       	andi	r24, 0xFE	; 254
     3e0:	80 83       	st	Z, r24
     3e2:	8d b1       	in	r24, 0x0d	; 13

//set PD2 as input
	DDRE  &= (1 << PE4); //set as input.
     3e4:	80 71       	andi	r24, 0x10	; 16
     3e6:	8d b9       	out	0x0d, r24	; 13
     3e8:	2f ef       	ldi	r18, 0xFF	; 255
     3ea:	83 ec       	ldi	r24, 0xC3	; 195
     3ec:	99 e0       	ldi	r25, 0x09	; 9
     3ee:	21 50       	subi	r18, 0x01	; 1
     3f0:	80 40       	sbci	r24, 0x00	; 0
     3f2:	90 40       	sbci	r25, 0x00	; 0
     3f4:	e1 f7       	brne	.-8      	; 0x3ee <CAN_controller_init+0x44>
     3f6:	00 c0       	rjmp	.+0      	; 0x3f8 <CAN_controller_init+0x4e>
     3f8:	00 00       	nop
	
	
	
	_delay_ms(200);
	printf("after write to canctrl\n\r");
     3fa:	84 ee       	ldi	r24, 0xE4	; 228
     3fc:	92 e0       	ldi	r25, 0x02	; 2
     3fe:	9f 93       	push	r25
     400:	8f 93       	push	r24
     402:	30 d4       	rcall	.+2144   	; 0xc64 <printf>
	
	//Check CANSTAT register
	uint8_t status = CAN_controller_read(MCP_CANSTAT);
     404:	8e e0       	ldi	r24, 0x0E	; 14
     406:	4e df       	rcall	.-356    	; 0x2a4 <CAN_controller_read>
	printf("Data: %i\n\r", status);
     408:	1f 92       	push	r1
     40a:	8f 93       	push	r24
     40c:	8d ef       	ldi	r24, 0xFD	; 253
     40e:	92 e0       	ldi	r25, 0x02	; 2
     410:	9f 93       	push	r25
     412:	8f 93       	push	r24
     414:	27 d4       	rcall	.+2126   	; 0xc64 <printf>
     416:	8d b7       	in	r24, 0x3d	; 61

}
     418:	9e b7       	in	r25, 0x3e	; 62
     41a:	0c 96       	adiw	r24, 0x0c	; 12
     41c:	0f b6       	in	r0, 0x3f	; 63
     41e:	f8 94       	cli
     420:	9e bf       	out	0x3e, r25	; 62
     422:	0f be       	out	0x3f, r0	; 63
     424:	8d bf       	out	0x3d, r24	; 61
     426:	08 95       	ret

00000428 <joystick_readPositionOverCAN>:
     428:	8f 92       	push	r8
 *  Author: torsteoe
 */ 
#include "joystick.h"
#include "CAN.h"

void joystick_readPositionOverCAN() {
     42a:	9f 92       	push	r9
     42c:	af 92       	push	r10
     42e:	bf 92       	push	r11
     430:	ef 92       	push	r14
     432:	ff 92       	push	r15
     434:	1f 93       	push	r17
     436:	cf 93       	push	r28
     438:	df 93       	push	r29
     43a:	cd b7       	in	r28, 0x3d	; 61
     43c:	de b7       	in	r29, 0x3e	; 62
     43e:	2b 97       	sbiw	r28, 0x0b	; 11
     440:	0f b6       	in	r0, 0x3f	; 63
     442:	f8 94       	cli
     444:	de bf       	out	0x3e, r29	; 62
     446:	0f be       	out	0x3f, r0	; 63
     448:	cd bf       	out	0x3d, r28	; 61
	CAN_message_t mess;
	CAN_receiveMessage(&mess);
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	f6 de       	rcall	.-532    	; 0x23c <CAN_receiveMessage>
	
	if (mess.ID = 0x01) {
     450:	81 e0       	ldi	r24, 0x01	; 1
     452:	90 e0       	ldi	r25, 0x00	; 0
     454:	9a 87       	std	Y+10, r25	; 0x0a
     456:	89 87       	std	Y+9, r24	; 0x09
		joystick_pos.x_pos = mess.data[0];
     458:	69 81       	ldd	r22, Y+1	; 0x01
     45a:	0f 2e       	mov	r0, r31
     45c:	f9 e3       	ldi	r31, 0x39	; 57
     45e:	ef 2e       	mov	r14, r31
     460:	f3 e0       	ldi	r31, 0x03	; 3
     462:	ff 2e       	mov	r15, r31
     464:	f0 2d       	mov	r31, r0
     466:	f7 01       	movw	r30, r14
     468:	60 83       	st	Z, r22
		joystick_pos.y_pos = mess.data[1];
     46a:	1a 81       	ldd	r17, Y+2	; 0x02
     46c:	11 83       	std	Z+1, r17	; 0x01
		joystick_pos.angle = atan2(joystick_pos.y_pos, joystick_pos.x_pos)*360/2.0/3.14;
     46e:	06 2e       	mov	r0, r22
     470:	00 0c       	add	r0, r0
     472:	77 0b       	sbc	r23, r23
     474:	88 0b       	sbc	r24, r24
     476:	99 0b       	sbc	r25, r25
     478:	00 d2       	rcall	.+1024   	; 0x87a <__floatsisf>
     47a:	4b 01       	movw	r8, r22
     47c:	5c 01       	movw	r10, r24
     47e:	61 2f       	mov	r22, r17
     480:	11 0f       	add	r17, r17
     482:	77 0b       	sbc	r23, r23
     484:	88 0b       	sbc	r24, r24
     486:	99 0b       	sbc	r25, r25
     488:	f8 d1       	rcall	.+1008   	; 0x87a <__floatsisf>
     48a:	a5 01       	movw	r20, r10
     48c:	94 01       	movw	r18, r8
     48e:	03 d1       	rcall	.+518    	; 0x696 <atan2>
     490:	20 e0       	ldi	r18, 0x00	; 0
     492:	30 e0       	ldi	r19, 0x00	; 0
     494:	44 eb       	ldi	r20, 0xB4	; 180
     496:	53 e4       	ldi	r21, 0x43	; 67
     498:	d0 d2       	rcall	.+1440   	; 0xa3a <__mulsf3>
     49a:	20 e0       	ldi	r18, 0x00	; 0
     49c:	30 e0       	ldi	r19, 0x00	; 0
     49e:	40 e0       	ldi	r20, 0x00	; 0
     4a0:	5f e3       	ldi	r21, 0x3F	; 63
     4a2:	cb d2       	rcall	.+1430   	; 0xa3a <__mulsf3>
     4a4:	23 ec       	ldi	r18, 0xC3	; 195
     4a6:	35 ef       	ldi	r19, 0xF5	; 245
     4a8:	48 e4       	ldi	r20, 0x48	; 72
     4aa:	50 e4       	ldi	r21, 0x40	; 64
     4ac:	4b d1       	rcall	.+662    	; 0x744 <__divsf3>
     4ae:	b2 d1       	rcall	.+868    	; 0x814 <__fixsfsi>
     4b0:	f7 01       	movw	r30, r14
     4b2:	73 83       	std	Z+3, r23	; 0x03
     4b4:	62 83       	std	Z+2, r22	; 0x02
	}
}
     4b6:	2b 96       	adiw	r28, 0x0b	; 11
     4b8:	0f b6       	in	r0, 0x3f	; 63
     4ba:	f8 94       	cli
     4bc:	de bf       	out	0x3e, r29	; 62
     4be:	0f be       	out	0x3f, r0	; 63
     4c0:	cd bf       	out	0x3d, r28	; 61
     4c2:	df 91       	pop	r29
     4c4:	cf 91       	pop	r28
     4c6:	1f 91       	pop	r17
     4c8:	ff 90       	pop	r15
     4ca:	ef 90       	pop	r14
     4cc:	bf 90       	pop	r11
     4ce:	af 90       	pop	r10
     4d0:	9f 90       	pop	r9
     4d2:	8f 90       	pop	r8
     4d4:	08 95       	ret

000004d6 <joystick_printPosition>:

void joystick_printPosition() {
	printf("X: %i\tY: %i\n\rAngle: %i\n\r", joystick_pos.x_pos, joystick_pos.y_pos, joystick_pos.angle);
     4d6:	e9 e3       	ldi	r30, 0x39	; 57
     4d8:	f3 e0       	ldi	r31, 0x03	; 3
     4da:	83 81       	ldd	r24, Z+3	; 0x03
     4dc:	8f 93       	push	r24
     4de:	82 81       	ldd	r24, Z+2	; 0x02
     4e0:	8f 93       	push	r24
     4e2:	81 81       	ldd	r24, Z+1	; 0x01
     4e4:	28 2f       	mov	r18, r24
     4e6:	08 2e       	mov	r0, r24
     4e8:	00 0c       	add	r0, r0
     4ea:	33 0b       	sbc	r19, r19
     4ec:	3f 93       	push	r19
     4ee:	8f 93       	push	r24
     4f0:	80 81       	ld	r24, Z
     4f2:	28 2f       	mov	r18, r24
     4f4:	08 2e       	mov	r0, r24
     4f6:	00 0c       	add	r0, r0
     4f8:	33 0b       	sbc	r19, r19
     4fa:	3f 93       	push	r19
     4fc:	8f 93       	push	r24
     4fe:	88 e0       	ldi	r24, 0x08	; 8
     500:	93 e0       	ldi	r25, 0x03	; 3
     502:	9f 93       	push	r25
     504:	8f 93       	push	r24
     506:	ae d3       	rcall	.+1884   	; 0xc64 <printf>
     508:	8d b7       	in	r24, 0x3d	; 61
     50a:	9e b7       	in	r25, 0x3e	; 62
     50c:	08 96       	adiw	r24, 0x08	; 8
     50e:	0f b6       	in	r0, 0x3f	; 63
     510:	f8 94       	cli
     512:	9e bf       	out	0x3e, r25	; 62
     514:	0f be       	out	0x3f, r0	; 63
     516:	8d bf       	out	0x3d, r24	; 61
     518:	08 95       	ret

0000051a <pwm_init>:
#define PWM_PRESCALER				8
#define ICR_PERIOD					40000 //F_CPU/PWM_PRESCALER*(PERIOD_MS/1000)

void pwm_init() {
	//set output pin
	DDRB |= (1 << PB5);
     51a:	25 9a       	sbi	0x04, 5	; 4
	
	//Reset prescaler, then set to 8.
	TCCR1B &= PRESC_OFF;
     51c:	e1 e8       	ldi	r30, 0x81	; 129
     51e:	f0 e0       	ldi	r31, 0x00	; 0
     520:	80 81       	ld	r24, Z
     522:	88 7f       	andi	r24, 0xF8	; 248
     524:	80 83       	st	Z, r24
	TCCR1B |= PRESC_8;
     526:	80 81       	ld	r24, Z
     528:	82 60       	ori	r24, 0x02	; 2
     52a:	80 83       	st	Z, r24

	//set ocr0 register as something
	
	//Timer incremented until counter value matches value in OCR1A
	TCCR1A |= (1 << WGM11 & ~(1 <<WGM10));
     52c:	a0 e8       	ldi	r26, 0x80	; 128
     52e:	b0 e0       	ldi	r27, 0x00	; 0
     530:	8c 91       	ld	r24, X
     532:	82 60       	ori	r24, 0x02	; 2
     534:	8c 93       	st	X, r24
	TCCR1B |= (1 << WGM13 | 1 << WGM12);
     536:	80 81       	ld	r24, Z
     538:	88 61       	ori	r24, 0x18	; 24
     53a:	80 83       	st	Z, r24
	
	//Set compare output mode on channel A
	TCCR1A |= (1 << COM1A1 & ~(COM1A0));
     53c:	8c 91       	ld	r24, X
     53e:	80 68       	ori	r24, 0x80	; 128
     540:	8c 93       	st	X, r24
	
	
	
	//set period to 20ms
	ICR1 = ICR_PERIOD;
     542:	80 e4       	ldi	r24, 0x40	; 64
     544:	9c e9       	ldi	r25, 0x9C	; 156
     546:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x700087>
     54a:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x700086>
	

	
	//Set initial pulsewidth
	OCR1A = ICR_PERIOD/(20)*(2.1+0.9)/2;
     54e:	88 eb       	ldi	r24, 0xB8	; 184
     550:	9b e0       	ldi	r25, 0x0B	; 11
     552:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     556:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     55a:	08 95       	ret

0000055c <pwm_setPulseWidth>:

}

void pwm_setPulseWidth(float width_ms) {
     55c:	cf 92       	push	r12
     55e:	df 92       	push	r13
     560:	ef 92       	push	r14
     562:	ff 92       	push	r15
     564:	6b 01       	movw	r12, r22
     566:	7c 01       	movw	r14, r24
	
	
	if (width_ms >= 0.9 && width_ms <=2.1) {
     568:	26 e6       	ldi	r18, 0x66	; 102
     56a:	36 e6       	ldi	r19, 0x66	; 102
     56c:	46 e6       	ldi	r20, 0x66	; 102
     56e:	5f e3       	ldi	r21, 0x3F	; 63
     570:	59 d2       	rcall	.+1202   	; 0xa24 <__gesf2>
     572:	88 23       	and	r24, r24
     574:	d4 f0       	brlt	.+52     	; 0x5aa <pwm_setPulseWidth+0x4e>
     576:	26 e6       	ldi	r18, 0x66	; 102
     578:	36 e6       	ldi	r19, 0x66	; 102
     57a:	46 e0       	ldi	r20, 0x06	; 6
     57c:	50 e4       	ldi	r21, 0x40	; 64
     57e:	c7 01       	movw	r24, r14
     580:	b6 01       	movw	r22, r12
     582:	dc d0       	rcall	.+440    	; 0x73c <__cmpsf2>
     584:	18 16       	cp	r1, r24
     586:	8c f0       	brlt	.+34     	; 0x5aa <pwm_setPulseWidth+0x4e>
		
		
		float dutyCycle = width_ms/PERIOD_MS;
		uint32_t pulse = dutyCycle*(ICR_PERIOD);
		
		OCR1A = pulse;
     588:	20 e0       	ldi	r18, 0x00	; 0
     58a:	30 e0       	ldi	r19, 0x00	; 0
     58c:	40 ea       	ldi	r20, 0xA0	; 160
     58e:	51 e4       	ldi	r21, 0x41	; 65
     590:	c7 01       	movw	r24, r14
     592:	b6 01       	movw	r22, r12
     594:	d7 d0       	rcall	.+430    	; 0x744 <__divsf3>
     596:	20 e0       	ldi	r18, 0x00	; 0
     598:	30 e4       	ldi	r19, 0x40	; 64
     59a:	4c e1       	ldi	r20, 0x1C	; 28
     59c:	57 e4       	ldi	r21, 0x47	; 71
     59e:	4d d2       	rcall	.+1178   	; 0xa3a <__mulsf3>
     5a0:	3e d1       	rcall	.+636    	; 0x81e <__fixunssfsi>
     5a2:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     5a6:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
		
	}
	
	
     5aa:	ff 90       	pop	r15
     5ac:	ef 90       	pop	r14
     5ae:	df 90       	pop	r13
     5b0:	cf 90       	pop	r12
     5b2:	08 95       	ret

000005b4 <setupInit>:
#include "setup.h"
#include "timer.h"

	void setupInit(void){
	//cli();
	USART_init(MYUBRR);
     5b4:	87 e6       	ldi	r24, 0x67	; 103
     5b6:	90 e0       	ldi	r25, 0x00	; 0
     5b8:	44 d0       	rcall	.+136    	; 0x642 <USART_init>
	CAN_controller_init();
     5ba:	f7 de       	rcall	.-530    	; 0x3aa <CAN_controller_init>
	pwm_init();
     5bc:	ae cf       	rjmp	.-164    	; 0x51a <pwm_init>
     5be:	08 95       	ret

000005c0 <SPI_masterInit>:
     5c0:	84 b1       	in	r24, 0x04	; 4
	SPI_setChipSelect(PB7, 1);
}

void SPI_slaveInit(void) {
	DDRB = (1 << PB3);
	SPCR = (1 << SPE);
     5c2:	87 60       	ori	r24, 0x07	; 7
     5c4:	84 b9       	out	0x04, r24	; 4
     5c6:	27 9a       	sbi	0x04, 7	; 4
     5c8:	8c b5       	in	r24, 0x2c	; 44
     5ca:	81 65       	ori	r24, 0x51	; 81
     5cc:	8c bd       	out	0x2c, r24	; 44
     5ce:	2f 9a       	sbi	0x05, 7	; 5
     5d0:	08 95       	ret

000005d2 <SPI_masterWrite>:
	
}
void SPI_masterWrite(char cData)
{
	SPDR = cData;
     5d2:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR & (1<<SPIF)));
     5d4:	0d b4       	in	r0, 0x2d	; 45
     5d6:	07 fe       	sbrs	r0, 7
     5d8:	fd cf       	rjmp	.-6      	; 0x5d4 <SPI_masterWrite+0x2>

}
     5da:	08 95       	ret

000005dc <SPI_masterRead>:

uint8_t SPI_masterRead() {
	SPDR = 0;
     5dc:	1e bc       	out	0x2e, r1	; 46
	while (!(SPSR & (1<<SPIF)));
     5de:	0d b4       	in	r0, 0x2d	; 45
     5e0:	07 fe       	sbrs	r0, 7
     5e2:	fd cf       	rjmp	.-6      	; 0x5de <SPI_masterRead+0x2>
	return SPDR;
     5e4:	8e b5       	in	r24, 0x2e	; 46
}
     5e6:	08 95       	ret

000005e8 <SPI_setChipSelect>:

void SPI_setChipSelect(uint8_t pin, uint8_t setHigh ) {
	if (setHigh) {
     5e8:	66 23       	and	r22, r22
     5ea:	69 f0       	breq	.+26     	; 0x606 <SPI_setChipSelect+0x1e>
		PORTB |= (1 << pin); //chip select high
     5ec:	45 b1       	in	r20, 0x05	; 5
     5ee:	21 e0       	ldi	r18, 0x01	; 1
     5f0:	30 e0       	ldi	r19, 0x00	; 0
     5f2:	b9 01       	movw	r22, r18
     5f4:	02 c0       	rjmp	.+4      	; 0x5fa <SPI_setChipSelect+0x12>
     5f6:	66 0f       	add	r22, r22
     5f8:	77 1f       	adc	r23, r23
     5fa:	8a 95       	dec	r24
     5fc:	e2 f7       	brpl	.-8      	; 0x5f6 <SPI_setChipSelect+0xe>
     5fe:	cb 01       	movw	r24, r22
     600:	84 2b       	or	r24, r20
     602:	85 b9       	out	0x05, r24	; 5
     604:	08 95       	ret
	}
	else {
		PORTB &= ~(1 << pin); //chip select low
     606:	45 b1       	in	r20, 0x05	; 5
     608:	21 e0       	ldi	r18, 0x01	; 1
     60a:	30 e0       	ldi	r19, 0x00	; 0
     60c:	b9 01       	movw	r22, r18
     60e:	02 c0       	rjmp	.+4      	; 0x614 <SPI_setChipSelect+0x2c>
     610:	66 0f       	add	r22, r22
     612:	77 1f       	adc	r23, r23
     614:	8a 95       	dec	r24
     616:	e2 f7       	brpl	.-8      	; 0x610 <SPI_setChipSelect+0x28>
     618:	cb 01       	movw	r24, r22
     61a:	80 95       	com	r24
     61c:	84 23       	and	r24, r20
     61e:	85 b9       	out	0x05, r24	; 5
     620:	08 95       	ret

00000622 <USART_transmitChar>:
	printf("uart setup finished\n\r");
}

void USART_transmitChar(unsigned char data) {
	/* wait for empty transmit buffer */
	while ( ! ( UCSR0A & (1<<UDRE0)))
     622:	e0 ec       	ldi	r30, 0xC0	; 192
     624:	f0 e0       	ldi	r31, 0x00	; 0
     626:	90 81       	ld	r25, Z
     628:	95 ff       	sbrs	r25, 5
     62a:	fd cf       	rjmp	.-6      	; 0x626 <USART_transmitChar+0x4>
		;
		
	/* Put data in buffer, send data */
	UDR0 = data;
     62c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     630:	08 95       	ret

00000632 <USART_receiveChar>:
}

unsigned char USART_receiveChar( void ) {
	/* wait for data to be received*/
	while ( !(UCSR0A & (1<<RXC0) ) ) 
     632:	e0 ec       	ldi	r30, 0xC0	; 192
     634:	f0 e0       	ldi	r31, 0x00	; 0
     636:	80 81       	ld	r24, Z
     638:	88 23       	and	r24, r24
     63a:	ec f7       	brge	.-6      	; 0x636 <USART_receiveChar+0x4>
		;
	
	return UDR0;
     63c:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     640:	08 95       	ret

00000642 <USART_init>:

#include "uart.h"
FILE *uart ;
void USART_init(unsigned int ubrr) {
	
	UBRR0H = (unsigned char) (ubrr >> 8);
     642:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
	UBRR0L = (unsigned char) (ubrr);
     646:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
	
	/*Enable receiver and transmitter*/
	
	UCSR0B = (1<<RXEN0) | (1 <<TXEN0);
     64a:	88 e1       	ldi	r24, 0x18	; 24
     64c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
	
	/* SET FRAME FORMAT: 8data, 2 stop bit */
	
	
	UCSR0C = (1<<USBS0) | (3<<UCSZ00);
     650:	8e e0       	ldi	r24, 0x0E	; 14
     652:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
	
	uart = fdevopen(&USART_transmitChar, &USART_receiveChar);
     656:	69 e1       	ldi	r22, 0x19	; 25
     658:	73 e0       	ldi	r23, 0x03	; 3
     65a:	81 e1       	ldi	r24, 0x11	; 17
     65c:	93 e0       	ldi	r25, 0x03	; 3
     65e:	b8 d2       	rcall	.+1392   	; 0xbd0 <fdevopen>
     660:	90 93 49 03 	sts	0x0349, r25	; 0x800349 <uart+0x1>
     664:	80 93 48 03 	sts	0x0348, r24	; 0x800348 <uart>
	printf("uart setup finished\n\r");
     668:	81 e2       	ldi	r24, 0x21	; 33
     66a:	93 e0       	ldi	r25, 0x03	; 3
     66c:	9f 93       	push	r25
     66e:	8f 93       	push	r24
     670:	f9 d2       	rcall	.+1522   	; 0xc64 <printf>
}
     672:	0f 90       	pop	r0
     674:	0f 90       	pop	r0
     676:	08 95       	ret
     678:	8d d1       	rcall	.+794    	; 0x994 <__fp_pscA>
     67a:	58 f0       	brcs	.+22     	; 0x692 <USART_init+0x50>
     67c:	80 e8       	ldi	r24, 0x80	; 128
     67e:	91 e0       	ldi	r25, 0x01	; 1
     680:	09 f4       	brne	.+2      	; 0x684 <USART_init+0x42>
     682:	9e ef       	ldi	r25, 0xFE	; 254
     684:	8e d1       	rcall	.+796    	; 0x9a2 <__fp_pscB>
     686:	28 f0       	brcs	.+10     	; 0x692 <USART_init+0x50>
     688:	40 e8       	ldi	r20, 0x80	; 128
     68a:	51 e0       	ldi	r21, 0x01	; 1
     68c:	59 f4       	brne	.+22     	; 0x6a4 <atan2+0xe>
     68e:	5e ef       	ldi	r21, 0xFE	; 254
     690:	09 c0       	rjmp	.+18     	; 0x6a4 <atan2+0xe>
     692:	58 c1       	rjmp	.+688    	; 0x944 <__fp_nan>
     694:	c0 c1       	rjmp	.+896    	; 0xa16 <__fp_zero>

00000696 <atan2>:
     696:	e9 2f       	mov	r30, r25
     698:	e0 78       	andi	r30, 0x80	; 128
     69a:	9b d1       	rcall	.+822    	; 0x9d2 <__fp_split3>
     69c:	68 f3       	brcs	.-38     	; 0x678 <USART_init+0x36>
     69e:	09 2e       	mov	r0, r25
     6a0:	05 2a       	or	r0, r21
     6a2:	c1 f3       	breq	.-16     	; 0x694 <USART_init+0x52>
     6a4:	26 17       	cp	r18, r22
     6a6:	37 07       	cpc	r19, r23
     6a8:	48 07       	cpc	r20, r24
     6aa:	59 07       	cpc	r21, r25
     6ac:	38 f0       	brcs	.+14     	; 0x6bc <atan2+0x26>
     6ae:	0e 2e       	mov	r0, r30
     6b0:	07 f8       	bld	r0, 7
     6b2:	e0 25       	eor	r30, r0
     6b4:	69 f0       	breq	.+26     	; 0x6d0 <atan2+0x3a>
     6b6:	e0 25       	eor	r30, r0
     6b8:	e0 64       	ori	r30, 0x40	; 64
     6ba:	0a c0       	rjmp	.+20     	; 0x6d0 <atan2+0x3a>
     6bc:	ef 63       	ori	r30, 0x3F	; 63
     6be:	07 f8       	bld	r0, 7
     6c0:	00 94       	com	r0
     6c2:	07 fa       	bst	r0, 7
     6c4:	db 01       	movw	r26, r22
     6c6:	b9 01       	movw	r22, r18
     6c8:	9d 01       	movw	r18, r26
     6ca:	dc 01       	movw	r26, r24
     6cc:	ca 01       	movw	r24, r20
     6ce:	ad 01       	movw	r20, r26
     6d0:	ef 93       	push	r30
     6d2:	47 d0       	rcall	.+142    	; 0x762 <__divsf3_pse>
     6d4:	6d d1       	rcall	.+730    	; 0x9b0 <__fp_round>
     6d6:	0a d0       	rcall	.+20     	; 0x6ec <atan>
     6d8:	5f 91       	pop	r21
     6da:	55 23       	and	r21, r21
     6dc:	31 f0       	breq	.+12     	; 0x6ea <atan2+0x54>
     6de:	2b ed       	ldi	r18, 0xDB	; 219
     6e0:	3f e0       	ldi	r19, 0x0F	; 15
     6e2:	49 e4       	ldi	r20, 0x49	; 73
     6e4:	50 fd       	sbrc	r21, 0
     6e6:	49 ec       	ldi	r20, 0xC9	; 201
     6e8:	0f c2       	rjmp	.+1054   	; 0xb08 <__addsf3>
     6ea:	08 95       	ret

000006ec <atan>:
     6ec:	df 93       	push	r29
     6ee:	dd 27       	eor	r29, r29
     6f0:	b9 2f       	mov	r27, r25
     6f2:	bf 77       	andi	r27, 0x7F	; 127
     6f4:	40 e8       	ldi	r20, 0x80	; 128
     6f6:	5f e3       	ldi	r21, 0x3F	; 63
     6f8:	16 16       	cp	r1, r22
     6fa:	17 06       	cpc	r1, r23
     6fc:	48 07       	cpc	r20, r24
     6fe:	5b 07       	cpc	r21, r27
     700:	10 f4       	brcc	.+4      	; 0x706 <atan+0x1a>
     702:	d9 2f       	mov	r29, r25
     704:	93 d1       	rcall	.+806    	; 0xa2c <inverse>
     706:	9f 93       	push	r25
     708:	8f 93       	push	r24
     70a:	7f 93       	push	r23
     70c:	6f 93       	push	r22
     70e:	f8 d1       	rcall	.+1008   	; 0xb00 <square>
     710:	e4 ee       	ldi	r30, 0xE4	; 228
     712:	f0 e0       	ldi	r31, 0x00	; 0
     714:	1a d1       	rcall	.+564    	; 0x94a <__fp_powser>
     716:	4c d1       	rcall	.+664    	; 0x9b0 <__fp_round>
     718:	2f 91       	pop	r18
     71a:	3f 91       	pop	r19
     71c:	4f 91       	pop	r20
     71e:	5f 91       	pop	r21
     720:	98 d1       	rcall	.+816    	; 0xa52 <__mulsf3x>
     722:	dd 23       	and	r29, r29
     724:	49 f0       	breq	.+18     	; 0x738 <atan+0x4c>
     726:	90 58       	subi	r25, 0x80	; 128
     728:	a2 ea       	ldi	r26, 0xA2	; 162
     72a:	2a ed       	ldi	r18, 0xDA	; 218
     72c:	3f e0       	ldi	r19, 0x0F	; 15
     72e:	49 ec       	ldi	r20, 0xC9	; 201
     730:	5f e3       	ldi	r21, 0x3F	; 63
     732:	d0 78       	andi	r29, 0x80	; 128
     734:	5d 27       	eor	r21, r29
     736:	f9 d1       	rcall	.+1010   	; 0xb2a <__addsf3x>
     738:	df 91       	pop	r29
     73a:	3a c1       	rjmp	.+628    	; 0x9b0 <__fp_round>

0000073c <__cmpsf2>:
     73c:	d9 d0       	rcall	.+434    	; 0x8f0 <__fp_cmp>
     73e:	08 f4       	brcc	.+2      	; 0x742 <__cmpsf2+0x6>
     740:	81 e0       	ldi	r24, 0x01	; 1
     742:	08 95       	ret

00000744 <__divsf3>:
     744:	0c d0       	rcall	.+24     	; 0x75e <__divsf3x>
     746:	34 c1       	rjmp	.+616    	; 0x9b0 <__fp_round>
     748:	2c d1       	rcall	.+600    	; 0x9a2 <__fp_pscB>
     74a:	40 f0       	brcs	.+16     	; 0x75c <__divsf3+0x18>
     74c:	23 d1       	rcall	.+582    	; 0x994 <__fp_pscA>
     74e:	30 f0       	brcs	.+12     	; 0x75c <__divsf3+0x18>
     750:	21 f4       	brne	.+8      	; 0x75a <__divsf3+0x16>
     752:	5f 3f       	cpi	r21, 0xFF	; 255
     754:	19 f0       	breq	.+6      	; 0x75c <__divsf3+0x18>
     756:	f0 c0       	rjmp	.+480    	; 0x938 <__fp_inf>
     758:	51 11       	cpse	r21, r1
     75a:	5e c1       	rjmp	.+700    	; 0xa18 <__fp_szero>
     75c:	f3 c0       	rjmp	.+486    	; 0x944 <__fp_nan>

0000075e <__divsf3x>:
     75e:	39 d1       	rcall	.+626    	; 0x9d2 <__fp_split3>
     760:	98 f3       	brcs	.-26     	; 0x748 <__divsf3+0x4>

00000762 <__divsf3_pse>:
     762:	99 23       	and	r25, r25
     764:	c9 f3       	breq	.-14     	; 0x758 <__divsf3+0x14>
     766:	55 23       	and	r21, r21
     768:	b1 f3       	breq	.-20     	; 0x756 <__divsf3+0x12>
     76a:	95 1b       	sub	r25, r21
     76c:	55 0b       	sbc	r21, r21
     76e:	bb 27       	eor	r27, r27
     770:	aa 27       	eor	r26, r26
     772:	62 17       	cp	r22, r18
     774:	73 07       	cpc	r23, r19
     776:	84 07       	cpc	r24, r20
     778:	38 f0       	brcs	.+14     	; 0x788 <__divsf3_pse+0x26>
     77a:	9f 5f       	subi	r25, 0xFF	; 255
     77c:	5f 4f       	sbci	r21, 0xFF	; 255
     77e:	22 0f       	add	r18, r18
     780:	33 1f       	adc	r19, r19
     782:	44 1f       	adc	r20, r20
     784:	aa 1f       	adc	r26, r26
     786:	a9 f3       	breq	.-22     	; 0x772 <__divsf3_pse+0x10>
     788:	33 d0       	rcall	.+102    	; 0x7f0 <__divsf3_pse+0x8e>
     78a:	0e 2e       	mov	r0, r30
     78c:	3a f0       	brmi	.+14     	; 0x79c <__divsf3_pse+0x3a>
     78e:	e0 e8       	ldi	r30, 0x80	; 128
     790:	30 d0       	rcall	.+96     	; 0x7f2 <__divsf3_pse+0x90>
     792:	91 50       	subi	r25, 0x01	; 1
     794:	50 40       	sbci	r21, 0x00	; 0
     796:	e6 95       	lsr	r30
     798:	00 1c       	adc	r0, r0
     79a:	ca f7       	brpl	.-14     	; 0x78e <__divsf3_pse+0x2c>
     79c:	29 d0       	rcall	.+82     	; 0x7f0 <__divsf3_pse+0x8e>
     79e:	fe 2f       	mov	r31, r30
     7a0:	27 d0       	rcall	.+78     	; 0x7f0 <__divsf3_pse+0x8e>
     7a2:	66 0f       	add	r22, r22
     7a4:	77 1f       	adc	r23, r23
     7a6:	88 1f       	adc	r24, r24
     7a8:	bb 1f       	adc	r27, r27
     7aa:	26 17       	cp	r18, r22
     7ac:	37 07       	cpc	r19, r23
     7ae:	48 07       	cpc	r20, r24
     7b0:	ab 07       	cpc	r26, r27
     7b2:	b0 e8       	ldi	r27, 0x80	; 128
     7b4:	09 f0       	breq	.+2      	; 0x7b8 <__divsf3_pse+0x56>
     7b6:	bb 0b       	sbc	r27, r27
     7b8:	80 2d       	mov	r24, r0
     7ba:	bf 01       	movw	r22, r30
     7bc:	ff 27       	eor	r31, r31
     7be:	93 58       	subi	r25, 0x83	; 131
     7c0:	5f 4f       	sbci	r21, 0xFF	; 255
     7c2:	2a f0       	brmi	.+10     	; 0x7ce <__divsf3_pse+0x6c>
     7c4:	9e 3f       	cpi	r25, 0xFE	; 254
     7c6:	51 05       	cpc	r21, r1
     7c8:	68 f0       	brcs	.+26     	; 0x7e4 <__divsf3_pse+0x82>
     7ca:	b6 c0       	rjmp	.+364    	; 0x938 <__fp_inf>
     7cc:	25 c1       	rjmp	.+586    	; 0xa18 <__fp_szero>
     7ce:	5f 3f       	cpi	r21, 0xFF	; 255
     7d0:	ec f3       	brlt	.-6      	; 0x7cc <__divsf3_pse+0x6a>
     7d2:	98 3e       	cpi	r25, 0xE8	; 232
     7d4:	dc f3       	brlt	.-10     	; 0x7cc <__divsf3_pse+0x6a>
     7d6:	86 95       	lsr	r24
     7d8:	77 95       	ror	r23
     7da:	67 95       	ror	r22
     7dc:	b7 95       	ror	r27
     7de:	f7 95       	ror	r31
     7e0:	9f 5f       	subi	r25, 0xFF	; 255
     7e2:	c9 f7       	brne	.-14     	; 0x7d6 <__divsf3_pse+0x74>
     7e4:	88 0f       	add	r24, r24
     7e6:	91 1d       	adc	r25, r1
     7e8:	96 95       	lsr	r25
     7ea:	87 95       	ror	r24
     7ec:	97 f9       	bld	r25, 7
     7ee:	08 95       	ret
     7f0:	e1 e0       	ldi	r30, 0x01	; 1
     7f2:	66 0f       	add	r22, r22
     7f4:	77 1f       	adc	r23, r23
     7f6:	88 1f       	adc	r24, r24
     7f8:	bb 1f       	adc	r27, r27
     7fa:	62 17       	cp	r22, r18
     7fc:	73 07       	cpc	r23, r19
     7fe:	84 07       	cpc	r24, r20
     800:	ba 07       	cpc	r27, r26
     802:	20 f0       	brcs	.+8      	; 0x80c <__divsf3_pse+0xaa>
     804:	62 1b       	sub	r22, r18
     806:	73 0b       	sbc	r23, r19
     808:	84 0b       	sbc	r24, r20
     80a:	ba 0b       	sbc	r27, r26
     80c:	ee 1f       	adc	r30, r30
     80e:	88 f7       	brcc	.-30     	; 0x7f2 <__divsf3_pse+0x90>
     810:	e0 95       	com	r30
     812:	08 95       	ret

00000814 <__fixsfsi>:
     814:	04 d0       	rcall	.+8      	; 0x81e <__fixunssfsi>
     816:	68 94       	set
     818:	b1 11       	cpse	r27, r1
     81a:	fe c0       	rjmp	.+508    	; 0xa18 <__fp_szero>
     81c:	08 95       	ret

0000081e <__fixunssfsi>:
     81e:	e1 d0       	rcall	.+450    	; 0x9e2 <__fp_splitA>
     820:	88 f0       	brcs	.+34     	; 0x844 <__fixunssfsi+0x26>
     822:	9f 57       	subi	r25, 0x7F	; 127
     824:	90 f0       	brcs	.+36     	; 0x84a <__fixunssfsi+0x2c>
     826:	b9 2f       	mov	r27, r25
     828:	99 27       	eor	r25, r25
     82a:	b7 51       	subi	r27, 0x17	; 23
     82c:	a0 f0       	brcs	.+40     	; 0x856 <__fixunssfsi+0x38>
     82e:	d1 f0       	breq	.+52     	; 0x864 <__fixunssfsi+0x46>
     830:	66 0f       	add	r22, r22
     832:	77 1f       	adc	r23, r23
     834:	88 1f       	adc	r24, r24
     836:	99 1f       	adc	r25, r25
     838:	1a f0       	brmi	.+6      	; 0x840 <__fixunssfsi+0x22>
     83a:	ba 95       	dec	r27
     83c:	c9 f7       	brne	.-14     	; 0x830 <__fixunssfsi+0x12>
     83e:	12 c0       	rjmp	.+36     	; 0x864 <__fixunssfsi+0x46>
     840:	b1 30       	cpi	r27, 0x01	; 1
     842:	81 f0       	breq	.+32     	; 0x864 <__fixunssfsi+0x46>
     844:	e8 d0       	rcall	.+464    	; 0xa16 <__fp_zero>
     846:	b1 e0       	ldi	r27, 0x01	; 1
     848:	08 95       	ret
     84a:	e5 c0       	rjmp	.+458    	; 0xa16 <__fp_zero>
     84c:	67 2f       	mov	r22, r23
     84e:	78 2f       	mov	r23, r24
     850:	88 27       	eor	r24, r24
     852:	b8 5f       	subi	r27, 0xF8	; 248
     854:	39 f0       	breq	.+14     	; 0x864 <__fixunssfsi+0x46>
     856:	b9 3f       	cpi	r27, 0xF9	; 249
     858:	cc f3       	brlt	.-14     	; 0x84c <__fixunssfsi+0x2e>
     85a:	86 95       	lsr	r24
     85c:	77 95       	ror	r23
     85e:	67 95       	ror	r22
     860:	b3 95       	inc	r27
     862:	d9 f7       	brne	.-10     	; 0x85a <__fixunssfsi+0x3c>
     864:	3e f4       	brtc	.+14     	; 0x874 <__fixunssfsi+0x56>
     866:	90 95       	com	r25
     868:	80 95       	com	r24
     86a:	70 95       	com	r23
     86c:	61 95       	neg	r22
     86e:	7f 4f       	sbci	r23, 0xFF	; 255
     870:	8f 4f       	sbci	r24, 0xFF	; 255
     872:	9f 4f       	sbci	r25, 0xFF	; 255
     874:	08 95       	ret

00000876 <__floatunsisf>:
     876:	e8 94       	clt
     878:	09 c0       	rjmp	.+18     	; 0x88c <__floatsisf+0x12>

0000087a <__floatsisf>:
     87a:	97 fb       	bst	r25, 7
     87c:	3e f4       	brtc	.+14     	; 0x88c <__floatsisf+0x12>
     87e:	90 95       	com	r25
     880:	80 95       	com	r24
     882:	70 95       	com	r23
     884:	61 95       	neg	r22
     886:	7f 4f       	sbci	r23, 0xFF	; 255
     888:	8f 4f       	sbci	r24, 0xFF	; 255
     88a:	9f 4f       	sbci	r25, 0xFF	; 255
     88c:	99 23       	and	r25, r25
     88e:	a9 f0       	breq	.+42     	; 0x8ba <__floatsisf+0x40>
     890:	f9 2f       	mov	r31, r25
     892:	96 e9       	ldi	r25, 0x96	; 150
     894:	bb 27       	eor	r27, r27
     896:	93 95       	inc	r25
     898:	f6 95       	lsr	r31
     89a:	87 95       	ror	r24
     89c:	77 95       	ror	r23
     89e:	67 95       	ror	r22
     8a0:	b7 95       	ror	r27
     8a2:	f1 11       	cpse	r31, r1
     8a4:	f8 cf       	rjmp	.-16     	; 0x896 <__floatsisf+0x1c>
     8a6:	fa f4       	brpl	.+62     	; 0x8e6 <__floatsisf+0x6c>
     8a8:	bb 0f       	add	r27, r27
     8aa:	11 f4       	brne	.+4      	; 0x8b0 <__floatsisf+0x36>
     8ac:	60 ff       	sbrs	r22, 0
     8ae:	1b c0       	rjmp	.+54     	; 0x8e6 <__floatsisf+0x6c>
     8b0:	6f 5f       	subi	r22, 0xFF	; 255
     8b2:	7f 4f       	sbci	r23, 0xFF	; 255
     8b4:	8f 4f       	sbci	r24, 0xFF	; 255
     8b6:	9f 4f       	sbci	r25, 0xFF	; 255
     8b8:	16 c0       	rjmp	.+44     	; 0x8e6 <__floatsisf+0x6c>
     8ba:	88 23       	and	r24, r24
     8bc:	11 f0       	breq	.+4      	; 0x8c2 <__floatsisf+0x48>
     8be:	96 e9       	ldi	r25, 0x96	; 150
     8c0:	11 c0       	rjmp	.+34     	; 0x8e4 <__floatsisf+0x6a>
     8c2:	77 23       	and	r23, r23
     8c4:	21 f0       	breq	.+8      	; 0x8ce <__floatsisf+0x54>
     8c6:	9e e8       	ldi	r25, 0x8E	; 142
     8c8:	87 2f       	mov	r24, r23
     8ca:	76 2f       	mov	r23, r22
     8cc:	05 c0       	rjmp	.+10     	; 0x8d8 <__floatsisf+0x5e>
     8ce:	66 23       	and	r22, r22
     8d0:	71 f0       	breq	.+28     	; 0x8ee <__floatsisf+0x74>
     8d2:	96 e8       	ldi	r25, 0x86	; 134
     8d4:	86 2f       	mov	r24, r22
     8d6:	70 e0       	ldi	r23, 0x00	; 0
     8d8:	60 e0       	ldi	r22, 0x00	; 0
     8da:	2a f0       	brmi	.+10     	; 0x8e6 <__floatsisf+0x6c>
     8dc:	9a 95       	dec	r25
     8de:	66 0f       	add	r22, r22
     8e0:	77 1f       	adc	r23, r23
     8e2:	88 1f       	adc	r24, r24
     8e4:	da f7       	brpl	.-10     	; 0x8dc <__floatsisf+0x62>
     8e6:	88 0f       	add	r24, r24
     8e8:	96 95       	lsr	r25
     8ea:	87 95       	ror	r24
     8ec:	97 f9       	bld	r25, 7
     8ee:	08 95       	ret

000008f0 <__fp_cmp>:
     8f0:	99 0f       	add	r25, r25
     8f2:	00 08       	sbc	r0, r0
     8f4:	55 0f       	add	r21, r21
     8f6:	aa 0b       	sbc	r26, r26
     8f8:	e0 e8       	ldi	r30, 0x80	; 128
     8fa:	fe ef       	ldi	r31, 0xFE	; 254
     8fc:	16 16       	cp	r1, r22
     8fe:	17 06       	cpc	r1, r23
     900:	e8 07       	cpc	r30, r24
     902:	f9 07       	cpc	r31, r25
     904:	c0 f0       	brcs	.+48     	; 0x936 <__fp_cmp+0x46>
     906:	12 16       	cp	r1, r18
     908:	13 06       	cpc	r1, r19
     90a:	e4 07       	cpc	r30, r20
     90c:	f5 07       	cpc	r31, r21
     90e:	98 f0       	brcs	.+38     	; 0x936 <__fp_cmp+0x46>
     910:	62 1b       	sub	r22, r18
     912:	73 0b       	sbc	r23, r19
     914:	84 0b       	sbc	r24, r20
     916:	95 0b       	sbc	r25, r21
     918:	39 f4       	brne	.+14     	; 0x928 <__fp_cmp+0x38>
     91a:	0a 26       	eor	r0, r26
     91c:	61 f0       	breq	.+24     	; 0x936 <__fp_cmp+0x46>
     91e:	23 2b       	or	r18, r19
     920:	24 2b       	or	r18, r20
     922:	25 2b       	or	r18, r21
     924:	21 f4       	brne	.+8      	; 0x92e <__fp_cmp+0x3e>
     926:	08 95       	ret
     928:	0a 26       	eor	r0, r26
     92a:	09 f4       	brne	.+2      	; 0x92e <__fp_cmp+0x3e>
     92c:	a1 40       	sbci	r26, 0x01	; 1
     92e:	a6 95       	lsr	r26
     930:	8f ef       	ldi	r24, 0xFF	; 255
     932:	81 1d       	adc	r24, r1
     934:	81 1d       	adc	r24, r1
     936:	08 95       	ret

00000938 <__fp_inf>:
     938:	97 f9       	bld	r25, 7
     93a:	9f 67       	ori	r25, 0x7F	; 127
     93c:	80 e8       	ldi	r24, 0x80	; 128
     93e:	70 e0       	ldi	r23, 0x00	; 0
     940:	60 e0       	ldi	r22, 0x00	; 0
     942:	08 95       	ret

00000944 <__fp_nan>:
     944:	9f ef       	ldi	r25, 0xFF	; 255
     946:	80 ec       	ldi	r24, 0xC0	; 192
     948:	08 95       	ret

0000094a <__fp_powser>:
     94a:	df 93       	push	r29
     94c:	cf 93       	push	r28
     94e:	1f 93       	push	r17
     950:	0f 93       	push	r16
     952:	ff 92       	push	r15
     954:	ef 92       	push	r14
     956:	df 92       	push	r13
     958:	7b 01       	movw	r14, r22
     95a:	8c 01       	movw	r16, r24
     95c:	68 94       	set
     95e:	05 c0       	rjmp	.+10     	; 0x96a <__fp_powser+0x20>
     960:	da 2e       	mov	r13, r26
     962:	ef 01       	movw	r28, r30
     964:	76 d0       	rcall	.+236    	; 0xa52 <__mulsf3x>
     966:	fe 01       	movw	r30, r28
     968:	e8 94       	clt
     96a:	a5 91       	lpm	r26, Z+
     96c:	25 91       	lpm	r18, Z+
     96e:	35 91       	lpm	r19, Z+
     970:	45 91       	lpm	r20, Z+
     972:	55 91       	lpm	r21, Z+
     974:	ae f3       	brts	.-22     	; 0x960 <__fp_powser+0x16>
     976:	ef 01       	movw	r28, r30
     978:	d8 d0       	rcall	.+432    	; 0xb2a <__addsf3x>
     97a:	fe 01       	movw	r30, r28
     97c:	97 01       	movw	r18, r14
     97e:	a8 01       	movw	r20, r16
     980:	da 94       	dec	r13
     982:	79 f7       	brne	.-34     	; 0x962 <__fp_powser+0x18>
     984:	df 90       	pop	r13
     986:	ef 90       	pop	r14
     988:	ff 90       	pop	r15
     98a:	0f 91       	pop	r16
     98c:	1f 91       	pop	r17
     98e:	cf 91       	pop	r28
     990:	df 91       	pop	r29
     992:	08 95       	ret

00000994 <__fp_pscA>:
     994:	00 24       	eor	r0, r0
     996:	0a 94       	dec	r0
     998:	16 16       	cp	r1, r22
     99a:	17 06       	cpc	r1, r23
     99c:	18 06       	cpc	r1, r24
     99e:	09 06       	cpc	r0, r25
     9a0:	08 95       	ret

000009a2 <__fp_pscB>:
     9a2:	00 24       	eor	r0, r0
     9a4:	0a 94       	dec	r0
     9a6:	12 16       	cp	r1, r18
     9a8:	13 06       	cpc	r1, r19
     9aa:	14 06       	cpc	r1, r20
     9ac:	05 06       	cpc	r0, r21
     9ae:	08 95       	ret

000009b0 <__fp_round>:
     9b0:	09 2e       	mov	r0, r25
     9b2:	03 94       	inc	r0
     9b4:	00 0c       	add	r0, r0
     9b6:	11 f4       	brne	.+4      	; 0x9bc <__fp_round+0xc>
     9b8:	88 23       	and	r24, r24
     9ba:	52 f0       	brmi	.+20     	; 0x9d0 <__fp_round+0x20>
     9bc:	bb 0f       	add	r27, r27
     9be:	40 f4       	brcc	.+16     	; 0x9d0 <__fp_round+0x20>
     9c0:	bf 2b       	or	r27, r31
     9c2:	11 f4       	brne	.+4      	; 0x9c8 <__fp_round+0x18>
     9c4:	60 ff       	sbrs	r22, 0
     9c6:	04 c0       	rjmp	.+8      	; 0x9d0 <__fp_round+0x20>
     9c8:	6f 5f       	subi	r22, 0xFF	; 255
     9ca:	7f 4f       	sbci	r23, 0xFF	; 255
     9cc:	8f 4f       	sbci	r24, 0xFF	; 255
     9ce:	9f 4f       	sbci	r25, 0xFF	; 255
     9d0:	08 95       	ret

000009d2 <__fp_split3>:
     9d2:	57 fd       	sbrc	r21, 7
     9d4:	90 58       	subi	r25, 0x80	; 128
     9d6:	44 0f       	add	r20, r20
     9d8:	55 1f       	adc	r21, r21
     9da:	59 f0       	breq	.+22     	; 0x9f2 <__fp_splitA+0x10>
     9dc:	5f 3f       	cpi	r21, 0xFF	; 255
     9de:	71 f0       	breq	.+28     	; 0x9fc <__fp_splitA+0x1a>
     9e0:	47 95       	ror	r20

000009e2 <__fp_splitA>:
     9e2:	88 0f       	add	r24, r24
     9e4:	97 fb       	bst	r25, 7
     9e6:	99 1f       	adc	r25, r25
     9e8:	61 f0       	breq	.+24     	; 0xa02 <__fp_splitA+0x20>
     9ea:	9f 3f       	cpi	r25, 0xFF	; 255
     9ec:	79 f0       	breq	.+30     	; 0xa0c <__fp_splitA+0x2a>
     9ee:	87 95       	ror	r24
     9f0:	08 95       	ret
     9f2:	12 16       	cp	r1, r18
     9f4:	13 06       	cpc	r1, r19
     9f6:	14 06       	cpc	r1, r20
     9f8:	55 1f       	adc	r21, r21
     9fa:	f2 cf       	rjmp	.-28     	; 0x9e0 <__fp_split3+0xe>
     9fc:	46 95       	lsr	r20
     9fe:	f1 df       	rcall	.-30     	; 0x9e2 <__fp_splitA>
     a00:	08 c0       	rjmp	.+16     	; 0xa12 <__fp_splitA+0x30>
     a02:	16 16       	cp	r1, r22
     a04:	17 06       	cpc	r1, r23
     a06:	18 06       	cpc	r1, r24
     a08:	99 1f       	adc	r25, r25
     a0a:	f1 cf       	rjmp	.-30     	; 0x9ee <__fp_splitA+0xc>
     a0c:	86 95       	lsr	r24
     a0e:	71 05       	cpc	r23, r1
     a10:	61 05       	cpc	r22, r1
     a12:	08 94       	sec
     a14:	08 95       	ret

00000a16 <__fp_zero>:
     a16:	e8 94       	clt

00000a18 <__fp_szero>:
     a18:	bb 27       	eor	r27, r27
     a1a:	66 27       	eor	r22, r22
     a1c:	77 27       	eor	r23, r23
     a1e:	cb 01       	movw	r24, r22
     a20:	97 f9       	bld	r25, 7
     a22:	08 95       	ret

00000a24 <__gesf2>:
     a24:	65 df       	rcall	.-310    	; 0x8f0 <__fp_cmp>
     a26:	08 f4       	brcc	.+2      	; 0xa2a <__gesf2+0x6>
     a28:	8f ef       	ldi	r24, 0xFF	; 255
     a2a:	08 95       	ret

00000a2c <inverse>:
     a2c:	9b 01       	movw	r18, r22
     a2e:	ac 01       	movw	r20, r24
     a30:	60 e0       	ldi	r22, 0x00	; 0
     a32:	70 e0       	ldi	r23, 0x00	; 0
     a34:	80 e8       	ldi	r24, 0x80	; 128
     a36:	9f e3       	ldi	r25, 0x3F	; 63
     a38:	85 ce       	rjmp	.-758    	; 0x744 <__divsf3>

00000a3a <__mulsf3>:
     a3a:	0b d0       	rcall	.+22     	; 0xa52 <__mulsf3x>
     a3c:	b9 cf       	rjmp	.-142    	; 0x9b0 <__fp_round>
     a3e:	aa df       	rcall	.-172    	; 0x994 <__fp_pscA>
     a40:	28 f0       	brcs	.+10     	; 0xa4c <__mulsf3+0x12>
     a42:	af df       	rcall	.-162    	; 0x9a2 <__fp_pscB>
     a44:	18 f0       	brcs	.+6      	; 0xa4c <__mulsf3+0x12>
     a46:	95 23       	and	r25, r21
     a48:	09 f0       	breq	.+2      	; 0xa4c <__mulsf3+0x12>
     a4a:	76 cf       	rjmp	.-276    	; 0x938 <__fp_inf>
     a4c:	7b cf       	rjmp	.-266    	; 0x944 <__fp_nan>
     a4e:	11 24       	eor	r1, r1
     a50:	e3 cf       	rjmp	.-58     	; 0xa18 <__fp_szero>

00000a52 <__mulsf3x>:
     a52:	bf df       	rcall	.-130    	; 0x9d2 <__fp_split3>
     a54:	a0 f3       	brcs	.-24     	; 0xa3e <__mulsf3+0x4>

00000a56 <__mulsf3_pse>:
     a56:	95 9f       	mul	r25, r21
     a58:	d1 f3       	breq	.-12     	; 0xa4e <__mulsf3+0x14>
     a5a:	95 0f       	add	r25, r21
     a5c:	50 e0       	ldi	r21, 0x00	; 0
     a5e:	55 1f       	adc	r21, r21
     a60:	62 9f       	mul	r22, r18
     a62:	f0 01       	movw	r30, r0
     a64:	72 9f       	mul	r23, r18
     a66:	bb 27       	eor	r27, r27
     a68:	f0 0d       	add	r31, r0
     a6a:	b1 1d       	adc	r27, r1
     a6c:	63 9f       	mul	r22, r19
     a6e:	aa 27       	eor	r26, r26
     a70:	f0 0d       	add	r31, r0
     a72:	b1 1d       	adc	r27, r1
     a74:	aa 1f       	adc	r26, r26
     a76:	64 9f       	mul	r22, r20
     a78:	66 27       	eor	r22, r22
     a7a:	b0 0d       	add	r27, r0
     a7c:	a1 1d       	adc	r26, r1
     a7e:	66 1f       	adc	r22, r22
     a80:	82 9f       	mul	r24, r18
     a82:	22 27       	eor	r18, r18
     a84:	b0 0d       	add	r27, r0
     a86:	a1 1d       	adc	r26, r1
     a88:	62 1f       	adc	r22, r18
     a8a:	73 9f       	mul	r23, r19
     a8c:	b0 0d       	add	r27, r0
     a8e:	a1 1d       	adc	r26, r1
     a90:	62 1f       	adc	r22, r18
     a92:	83 9f       	mul	r24, r19
     a94:	a0 0d       	add	r26, r0
     a96:	61 1d       	adc	r22, r1
     a98:	22 1f       	adc	r18, r18
     a9a:	74 9f       	mul	r23, r20
     a9c:	33 27       	eor	r19, r19
     a9e:	a0 0d       	add	r26, r0
     aa0:	61 1d       	adc	r22, r1
     aa2:	23 1f       	adc	r18, r19
     aa4:	84 9f       	mul	r24, r20
     aa6:	60 0d       	add	r22, r0
     aa8:	21 1d       	adc	r18, r1
     aaa:	82 2f       	mov	r24, r18
     aac:	76 2f       	mov	r23, r22
     aae:	6a 2f       	mov	r22, r26
     ab0:	11 24       	eor	r1, r1
     ab2:	9f 57       	subi	r25, 0x7F	; 127
     ab4:	50 40       	sbci	r21, 0x00	; 0
     ab6:	8a f0       	brmi	.+34     	; 0xada <__mulsf3_pse+0x84>
     ab8:	e1 f0       	breq	.+56     	; 0xaf2 <__mulsf3_pse+0x9c>
     aba:	88 23       	and	r24, r24
     abc:	4a f0       	brmi	.+18     	; 0xad0 <__mulsf3_pse+0x7a>
     abe:	ee 0f       	add	r30, r30
     ac0:	ff 1f       	adc	r31, r31
     ac2:	bb 1f       	adc	r27, r27
     ac4:	66 1f       	adc	r22, r22
     ac6:	77 1f       	adc	r23, r23
     ac8:	88 1f       	adc	r24, r24
     aca:	91 50       	subi	r25, 0x01	; 1
     acc:	50 40       	sbci	r21, 0x00	; 0
     ace:	a9 f7       	brne	.-22     	; 0xaba <__mulsf3_pse+0x64>
     ad0:	9e 3f       	cpi	r25, 0xFE	; 254
     ad2:	51 05       	cpc	r21, r1
     ad4:	70 f0       	brcs	.+28     	; 0xaf2 <__mulsf3_pse+0x9c>
     ad6:	30 cf       	rjmp	.-416    	; 0x938 <__fp_inf>
     ad8:	9f cf       	rjmp	.-194    	; 0xa18 <__fp_szero>
     ada:	5f 3f       	cpi	r21, 0xFF	; 255
     adc:	ec f3       	brlt	.-6      	; 0xad8 <__mulsf3_pse+0x82>
     ade:	98 3e       	cpi	r25, 0xE8	; 232
     ae0:	dc f3       	brlt	.-10     	; 0xad8 <__mulsf3_pse+0x82>
     ae2:	86 95       	lsr	r24
     ae4:	77 95       	ror	r23
     ae6:	67 95       	ror	r22
     ae8:	b7 95       	ror	r27
     aea:	f7 95       	ror	r31
     aec:	e7 95       	ror	r30
     aee:	9f 5f       	subi	r25, 0xFF	; 255
     af0:	c1 f7       	brne	.-16     	; 0xae2 <__mulsf3_pse+0x8c>
     af2:	fe 2b       	or	r31, r30
     af4:	88 0f       	add	r24, r24
     af6:	91 1d       	adc	r25, r1
     af8:	96 95       	lsr	r25
     afa:	87 95       	ror	r24
     afc:	97 f9       	bld	r25, 7
     afe:	08 95       	ret

00000b00 <square>:
     b00:	9b 01       	movw	r18, r22
     b02:	ac 01       	movw	r20, r24
     b04:	9a cf       	rjmp	.-204    	; 0xa3a <__mulsf3>

00000b06 <__subsf3>:
     b06:	50 58       	subi	r21, 0x80	; 128

00000b08 <__addsf3>:
     b08:	bb 27       	eor	r27, r27
     b0a:	aa 27       	eor	r26, r26
     b0c:	0e d0       	rcall	.+28     	; 0xb2a <__addsf3x>
     b0e:	50 cf       	rjmp	.-352    	; 0x9b0 <__fp_round>
     b10:	41 df       	rcall	.-382    	; 0x994 <__fp_pscA>
     b12:	30 f0       	brcs	.+12     	; 0xb20 <__addsf3+0x18>
     b14:	46 df       	rcall	.-372    	; 0x9a2 <__fp_pscB>
     b16:	20 f0       	brcs	.+8      	; 0xb20 <__addsf3+0x18>
     b18:	31 f4       	brne	.+12     	; 0xb26 <__addsf3+0x1e>
     b1a:	9f 3f       	cpi	r25, 0xFF	; 255
     b1c:	11 f4       	brne	.+4      	; 0xb22 <__addsf3+0x1a>
     b1e:	1e f4       	brtc	.+6      	; 0xb26 <__addsf3+0x1e>
     b20:	11 cf       	rjmp	.-478    	; 0x944 <__fp_nan>
     b22:	0e f4       	brtc	.+2      	; 0xb26 <__addsf3+0x1e>
     b24:	e0 95       	com	r30
     b26:	e7 fb       	bst	r30, 7
     b28:	07 cf       	rjmp	.-498    	; 0x938 <__fp_inf>

00000b2a <__addsf3x>:
     b2a:	e9 2f       	mov	r30, r25
     b2c:	52 df       	rcall	.-348    	; 0x9d2 <__fp_split3>
     b2e:	80 f3       	brcs	.-32     	; 0xb10 <__addsf3+0x8>
     b30:	ba 17       	cp	r27, r26
     b32:	62 07       	cpc	r22, r18
     b34:	73 07       	cpc	r23, r19
     b36:	84 07       	cpc	r24, r20
     b38:	95 07       	cpc	r25, r21
     b3a:	18 f0       	brcs	.+6      	; 0xb42 <__addsf3x+0x18>
     b3c:	71 f4       	brne	.+28     	; 0xb5a <__addsf3x+0x30>
     b3e:	9e f5       	brtc	.+102    	; 0xba6 <__addsf3x+0x7c>
     b40:	6a cf       	rjmp	.-300    	; 0xa16 <__fp_zero>
     b42:	0e f4       	brtc	.+2      	; 0xb46 <__addsf3x+0x1c>
     b44:	e0 95       	com	r30
     b46:	0b 2e       	mov	r0, r27
     b48:	ba 2f       	mov	r27, r26
     b4a:	a0 2d       	mov	r26, r0
     b4c:	0b 01       	movw	r0, r22
     b4e:	b9 01       	movw	r22, r18
     b50:	90 01       	movw	r18, r0
     b52:	0c 01       	movw	r0, r24
     b54:	ca 01       	movw	r24, r20
     b56:	a0 01       	movw	r20, r0
     b58:	11 24       	eor	r1, r1
     b5a:	ff 27       	eor	r31, r31
     b5c:	59 1b       	sub	r21, r25
     b5e:	99 f0       	breq	.+38     	; 0xb86 <__addsf3x+0x5c>
     b60:	59 3f       	cpi	r21, 0xF9	; 249
     b62:	50 f4       	brcc	.+20     	; 0xb78 <__addsf3x+0x4e>
     b64:	50 3e       	cpi	r21, 0xE0	; 224
     b66:	68 f1       	brcs	.+90     	; 0xbc2 <__addsf3x+0x98>
     b68:	1a 16       	cp	r1, r26
     b6a:	f0 40       	sbci	r31, 0x00	; 0
     b6c:	a2 2f       	mov	r26, r18
     b6e:	23 2f       	mov	r18, r19
     b70:	34 2f       	mov	r19, r20
     b72:	44 27       	eor	r20, r20
     b74:	58 5f       	subi	r21, 0xF8	; 248
     b76:	f3 cf       	rjmp	.-26     	; 0xb5e <__addsf3x+0x34>
     b78:	46 95       	lsr	r20
     b7a:	37 95       	ror	r19
     b7c:	27 95       	ror	r18
     b7e:	a7 95       	ror	r26
     b80:	f0 40       	sbci	r31, 0x00	; 0
     b82:	53 95       	inc	r21
     b84:	c9 f7       	brne	.-14     	; 0xb78 <__addsf3x+0x4e>
     b86:	7e f4       	brtc	.+30     	; 0xba6 <__addsf3x+0x7c>
     b88:	1f 16       	cp	r1, r31
     b8a:	ba 0b       	sbc	r27, r26
     b8c:	62 0b       	sbc	r22, r18
     b8e:	73 0b       	sbc	r23, r19
     b90:	84 0b       	sbc	r24, r20
     b92:	ba f0       	brmi	.+46     	; 0xbc2 <__addsf3x+0x98>
     b94:	91 50       	subi	r25, 0x01	; 1
     b96:	a1 f0       	breq	.+40     	; 0xbc0 <__addsf3x+0x96>
     b98:	ff 0f       	add	r31, r31
     b9a:	bb 1f       	adc	r27, r27
     b9c:	66 1f       	adc	r22, r22
     b9e:	77 1f       	adc	r23, r23
     ba0:	88 1f       	adc	r24, r24
     ba2:	c2 f7       	brpl	.-16     	; 0xb94 <__addsf3x+0x6a>
     ba4:	0e c0       	rjmp	.+28     	; 0xbc2 <__addsf3x+0x98>
     ba6:	ba 0f       	add	r27, r26
     ba8:	62 1f       	adc	r22, r18
     baa:	73 1f       	adc	r23, r19
     bac:	84 1f       	adc	r24, r20
     bae:	48 f4       	brcc	.+18     	; 0xbc2 <__addsf3x+0x98>
     bb0:	87 95       	ror	r24
     bb2:	77 95       	ror	r23
     bb4:	67 95       	ror	r22
     bb6:	b7 95       	ror	r27
     bb8:	f7 95       	ror	r31
     bba:	9e 3f       	cpi	r25, 0xFE	; 254
     bbc:	08 f0       	brcs	.+2      	; 0xbc0 <__addsf3x+0x96>
     bbe:	b3 cf       	rjmp	.-154    	; 0xb26 <__addsf3+0x1e>
     bc0:	93 95       	inc	r25
     bc2:	88 0f       	add	r24, r24
     bc4:	08 f0       	brcs	.+2      	; 0xbc8 <__addsf3x+0x9e>
     bc6:	99 27       	eor	r25, r25
     bc8:	ee 0f       	add	r30, r30
     bca:	97 95       	ror	r25
     bcc:	87 95       	ror	r24
     bce:	08 95       	ret

00000bd0 <fdevopen>:
     bd0:	0f 93       	push	r16
     bd2:	1f 93       	push	r17
     bd4:	cf 93       	push	r28
     bd6:	df 93       	push	r29
     bd8:	00 97       	sbiw	r24, 0x00	; 0
     bda:	31 f4       	brne	.+12     	; 0xbe8 <fdevopen+0x18>
     bdc:	61 15       	cp	r22, r1
     bde:	71 05       	cpc	r23, r1
     be0:	19 f4       	brne	.+6      	; 0xbe8 <fdevopen+0x18>
     be2:	80 e0       	ldi	r24, 0x00	; 0
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	39 c0       	rjmp	.+114    	; 0xc5a <fdevopen+0x8a>
     be8:	8b 01       	movw	r16, r22
     bea:	ec 01       	movw	r28, r24
     bec:	6e e0       	ldi	r22, 0x0E	; 14
     bee:	70 e0       	ldi	r23, 0x00	; 0
     bf0:	81 e0       	ldi	r24, 0x01	; 1
     bf2:	90 e0       	ldi	r25, 0x00	; 0
     bf4:	47 d2       	rcall	.+1166   	; 0x1084 <calloc>
     bf6:	fc 01       	movw	r30, r24
     bf8:	89 2b       	or	r24, r25
     bfa:	99 f3       	breq	.-26     	; 0xbe2 <fdevopen+0x12>
     bfc:	80 e8       	ldi	r24, 0x80	; 128
     bfe:	83 83       	std	Z+3, r24	; 0x03
     c00:	01 15       	cp	r16, r1
     c02:	11 05       	cpc	r17, r1
     c04:	71 f0       	breq	.+28     	; 0xc22 <fdevopen+0x52>
     c06:	13 87       	std	Z+11, r17	; 0x0b
     c08:	02 87       	std	Z+10, r16	; 0x0a
     c0a:	81 e8       	ldi	r24, 0x81	; 129
     c0c:	83 83       	std	Z+3, r24	; 0x03
     c0e:	80 91 4a 03 	lds	r24, 0x034A	; 0x80034a <__iob>
     c12:	90 91 4b 03 	lds	r25, 0x034B	; 0x80034b <__iob+0x1>
     c16:	89 2b       	or	r24, r25
     c18:	21 f4       	brne	.+8      	; 0xc22 <fdevopen+0x52>
     c1a:	f0 93 4b 03 	sts	0x034B, r31	; 0x80034b <__iob+0x1>
     c1e:	e0 93 4a 03 	sts	0x034A, r30	; 0x80034a <__iob>
     c22:	20 97       	sbiw	r28, 0x00	; 0
     c24:	c9 f0       	breq	.+50     	; 0xc58 <fdevopen+0x88>
     c26:	d1 87       	std	Z+9, r29	; 0x09
     c28:	c0 87       	std	Z+8, r28	; 0x08
     c2a:	83 81       	ldd	r24, Z+3	; 0x03
     c2c:	82 60       	ori	r24, 0x02	; 2
     c2e:	83 83       	std	Z+3, r24	; 0x03
     c30:	80 91 4c 03 	lds	r24, 0x034C	; 0x80034c <__iob+0x2>
     c34:	90 91 4d 03 	lds	r25, 0x034D	; 0x80034d <__iob+0x3>
     c38:	89 2b       	or	r24, r25
     c3a:	71 f4       	brne	.+28     	; 0xc58 <fdevopen+0x88>
     c3c:	f0 93 4d 03 	sts	0x034D, r31	; 0x80034d <__iob+0x3>
     c40:	e0 93 4c 03 	sts	0x034C, r30	; 0x80034c <__iob+0x2>
     c44:	80 91 4e 03 	lds	r24, 0x034E	; 0x80034e <__iob+0x4>
     c48:	90 91 4f 03 	lds	r25, 0x034F	; 0x80034f <__iob+0x5>
     c4c:	89 2b       	or	r24, r25
     c4e:	21 f4       	brne	.+8      	; 0xc58 <fdevopen+0x88>
     c50:	f0 93 4f 03 	sts	0x034F, r31	; 0x80034f <__iob+0x5>
     c54:	e0 93 4e 03 	sts	0x034E, r30	; 0x80034e <__iob+0x4>
     c58:	cf 01       	movw	r24, r30
     c5a:	df 91       	pop	r29
     c5c:	cf 91       	pop	r28
     c5e:	1f 91       	pop	r17
     c60:	0f 91       	pop	r16
     c62:	08 95       	ret

00000c64 <printf>:
     c64:	cf 93       	push	r28
     c66:	df 93       	push	r29
     c68:	cd b7       	in	r28, 0x3d	; 61
     c6a:	de b7       	in	r29, 0x3e	; 62
     c6c:	ae 01       	movw	r20, r28
     c6e:	4a 5f       	subi	r20, 0xFA	; 250
     c70:	5f 4f       	sbci	r21, 0xFF	; 255
     c72:	fa 01       	movw	r30, r20
     c74:	61 91       	ld	r22, Z+
     c76:	71 91       	ld	r23, Z+
     c78:	af 01       	movw	r20, r30
     c7a:	80 91 4c 03 	lds	r24, 0x034C	; 0x80034c <__iob+0x2>
     c7e:	90 91 4d 03 	lds	r25, 0x034D	; 0x80034d <__iob+0x3>
     c82:	03 d0       	rcall	.+6      	; 0xc8a <vfprintf>
     c84:	df 91       	pop	r29
     c86:	cf 91       	pop	r28
     c88:	08 95       	ret

00000c8a <vfprintf>:
     c8a:	2f 92       	push	r2
     c8c:	3f 92       	push	r3
     c8e:	4f 92       	push	r4
     c90:	5f 92       	push	r5
     c92:	6f 92       	push	r6
     c94:	7f 92       	push	r7
     c96:	8f 92       	push	r8
     c98:	9f 92       	push	r9
     c9a:	af 92       	push	r10
     c9c:	bf 92       	push	r11
     c9e:	cf 92       	push	r12
     ca0:	df 92       	push	r13
     ca2:	ef 92       	push	r14
     ca4:	ff 92       	push	r15
     ca6:	0f 93       	push	r16
     ca8:	1f 93       	push	r17
     caa:	cf 93       	push	r28
     cac:	df 93       	push	r29
     cae:	cd b7       	in	r28, 0x3d	; 61
     cb0:	de b7       	in	r29, 0x3e	; 62
     cb2:	2b 97       	sbiw	r28, 0x0b	; 11
     cb4:	0f b6       	in	r0, 0x3f	; 63
     cb6:	f8 94       	cli
     cb8:	de bf       	out	0x3e, r29	; 62
     cba:	0f be       	out	0x3f, r0	; 63
     cbc:	cd bf       	out	0x3d, r28	; 61
     cbe:	6c 01       	movw	r12, r24
     cc0:	7b 01       	movw	r14, r22
     cc2:	8a 01       	movw	r16, r20
     cc4:	fc 01       	movw	r30, r24
     cc6:	17 82       	std	Z+7, r1	; 0x07
     cc8:	16 82       	std	Z+6, r1	; 0x06
     cca:	83 81       	ldd	r24, Z+3	; 0x03
     ccc:	81 ff       	sbrs	r24, 1
     cce:	bf c1       	rjmp	.+894    	; 0x104e <vfprintf+0x3c4>
     cd0:	ce 01       	movw	r24, r28
     cd2:	01 96       	adiw	r24, 0x01	; 1
     cd4:	3c 01       	movw	r6, r24
     cd6:	f6 01       	movw	r30, r12
     cd8:	93 81       	ldd	r25, Z+3	; 0x03
     cda:	f7 01       	movw	r30, r14
     cdc:	93 fd       	sbrc	r25, 3
     cde:	85 91       	lpm	r24, Z+
     ce0:	93 ff       	sbrs	r25, 3
     ce2:	81 91       	ld	r24, Z+
     ce4:	7f 01       	movw	r14, r30
     ce6:	88 23       	and	r24, r24
     ce8:	09 f4       	brne	.+2      	; 0xcec <vfprintf+0x62>
     cea:	ad c1       	rjmp	.+858    	; 0x1046 <vfprintf+0x3bc>
     cec:	85 32       	cpi	r24, 0x25	; 37
     cee:	39 f4       	brne	.+14     	; 0xcfe <vfprintf+0x74>
     cf0:	93 fd       	sbrc	r25, 3
     cf2:	85 91       	lpm	r24, Z+
     cf4:	93 ff       	sbrs	r25, 3
     cf6:	81 91       	ld	r24, Z+
     cf8:	7f 01       	movw	r14, r30
     cfa:	85 32       	cpi	r24, 0x25	; 37
     cfc:	21 f4       	brne	.+8      	; 0xd06 <vfprintf+0x7c>
     cfe:	b6 01       	movw	r22, r12
     d00:	90 e0       	ldi	r25, 0x00	; 0
     d02:	18 d3       	rcall	.+1584   	; 0x1334 <fputc>
     d04:	e8 cf       	rjmp	.-48     	; 0xcd6 <vfprintf+0x4c>
     d06:	91 2c       	mov	r9, r1
     d08:	21 2c       	mov	r2, r1
     d0a:	31 2c       	mov	r3, r1
     d0c:	ff e1       	ldi	r31, 0x1F	; 31
     d0e:	f3 15       	cp	r31, r3
     d10:	d8 f0       	brcs	.+54     	; 0xd48 <vfprintf+0xbe>
     d12:	8b 32       	cpi	r24, 0x2B	; 43
     d14:	79 f0       	breq	.+30     	; 0xd34 <vfprintf+0xaa>
     d16:	38 f4       	brcc	.+14     	; 0xd26 <vfprintf+0x9c>
     d18:	80 32       	cpi	r24, 0x20	; 32
     d1a:	79 f0       	breq	.+30     	; 0xd3a <vfprintf+0xb0>
     d1c:	83 32       	cpi	r24, 0x23	; 35
     d1e:	a1 f4       	brne	.+40     	; 0xd48 <vfprintf+0xbe>
     d20:	23 2d       	mov	r18, r3
     d22:	20 61       	ori	r18, 0x10	; 16
     d24:	1d c0       	rjmp	.+58     	; 0xd60 <vfprintf+0xd6>
     d26:	8d 32       	cpi	r24, 0x2D	; 45
     d28:	61 f0       	breq	.+24     	; 0xd42 <vfprintf+0xb8>
     d2a:	80 33       	cpi	r24, 0x30	; 48
     d2c:	69 f4       	brne	.+26     	; 0xd48 <vfprintf+0xbe>
     d2e:	23 2d       	mov	r18, r3
     d30:	21 60       	ori	r18, 0x01	; 1
     d32:	16 c0       	rjmp	.+44     	; 0xd60 <vfprintf+0xd6>
     d34:	83 2d       	mov	r24, r3
     d36:	82 60       	ori	r24, 0x02	; 2
     d38:	38 2e       	mov	r3, r24
     d3a:	e3 2d       	mov	r30, r3
     d3c:	e4 60       	ori	r30, 0x04	; 4
     d3e:	3e 2e       	mov	r3, r30
     d40:	2a c0       	rjmp	.+84     	; 0xd96 <vfprintf+0x10c>
     d42:	f3 2d       	mov	r31, r3
     d44:	f8 60       	ori	r31, 0x08	; 8
     d46:	1d c0       	rjmp	.+58     	; 0xd82 <vfprintf+0xf8>
     d48:	37 fc       	sbrc	r3, 7
     d4a:	2d c0       	rjmp	.+90     	; 0xda6 <vfprintf+0x11c>
     d4c:	20 ed       	ldi	r18, 0xD0	; 208
     d4e:	28 0f       	add	r18, r24
     d50:	2a 30       	cpi	r18, 0x0A	; 10
     d52:	40 f0       	brcs	.+16     	; 0xd64 <vfprintf+0xda>
     d54:	8e 32       	cpi	r24, 0x2E	; 46
     d56:	b9 f4       	brne	.+46     	; 0xd86 <vfprintf+0xfc>
     d58:	36 fc       	sbrc	r3, 6
     d5a:	75 c1       	rjmp	.+746    	; 0x1046 <vfprintf+0x3bc>
     d5c:	23 2d       	mov	r18, r3
     d5e:	20 64       	ori	r18, 0x40	; 64
     d60:	32 2e       	mov	r3, r18
     d62:	19 c0       	rjmp	.+50     	; 0xd96 <vfprintf+0x10c>
     d64:	36 fe       	sbrs	r3, 6
     d66:	06 c0       	rjmp	.+12     	; 0xd74 <vfprintf+0xea>
     d68:	8a e0       	ldi	r24, 0x0A	; 10
     d6a:	98 9e       	mul	r9, r24
     d6c:	20 0d       	add	r18, r0
     d6e:	11 24       	eor	r1, r1
     d70:	92 2e       	mov	r9, r18
     d72:	11 c0       	rjmp	.+34     	; 0xd96 <vfprintf+0x10c>
     d74:	ea e0       	ldi	r30, 0x0A	; 10
     d76:	2e 9e       	mul	r2, r30
     d78:	20 0d       	add	r18, r0
     d7a:	11 24       	eor	r1, r1
     d7c:	22 2e       	mov	r2, r18
     d7e:	f3 2d       	mov	r31, r3
     d80:	f0 62       	ori	r31, 0x20	; 32
     d82:	3f 2e       	mov	r3, r31
     d84:	08 c0       	rjmp	.+16     	; 0xd96 <vfprintf+0x10c>
     d86:	8c 36       	cpi	r24, 0x6C	; 108
     d88:	21 f4       	brne	.+8      	; 0xd92 <vfprintf+0x108>
     d8a:	83 2d       	mov	r24, r3
     d8c:	80 68       	ori	r24, 0x80	; 128
     d8e:	38 2e       	mov	r3, r24
     d90:	02 c0       	rjmp	.+4      	; 0xd96 <vfprintf+0x10c>
     d92:	88 36       	cpi	r24, 0x68	; 104
     d94:	41 f4       	brne	.+16     	; 0xda6 <vfprintf+0x11c>
     d96:	f7 01       	movw	r30, r14
     d98:	93 fd       	sbrc	r25, 3
     d9a:	85 91       	lpm	r24, Z+
     d9c:	93 ff       	sbrs	r25, 3
     d9e:	81 91       	ld	r24, Z+
     da0:	7f 01       	movw	r14, r30
     da2:	81 11       	cpse	r24, r1
     da4:	b3 cf       	rjmp	.-154    	; 0xd0c <vfprintf+0x82>
     da6:	98 2f       	mov	r25, r24
     da8:	9f 7d       	andi	r25, 0xDF	; 223
     daa:	95 54       	subi	r25, 0x45	; 69
     dac:	93 30       	cpi	r25, 0x03	; 3
     dae:	28 f4       	brcc	.+10     	; 0xdba <vfprintf+0x130>
     db0:	0c 5f       	subi	r16, 0xFC	; 252
     db2:	1f 4f       	sbci	r17, 0xFF	; 255
     db4:	9f e3       	ldi	r25, 0x3F	; 63
     db6:	99 83       	std	Y+1, r25	; 0x01
     db8:	0d c0       	rjmp	.+26     	; 0xdd4 <vfprintf+0x14a>
     dba:	83 36       	cpi	r24, 0x63	; 99
     dbc:	31 f0       	breq	.+12     	; 0xdca <vfprintf+0x140>
     dbe:	83 37       	cpi	r24, 0x73	; 115
     dc0:	71 f0       	breq	.+28     	; 0xdde <vfprintf+0x154>
     dc2:	83 35       	cpi	r24, 0x53	; 83
     dc4:	09 f0       	breq	.+2      	; 0xdc8 <vfprintf+0x13e>
     dc6:	55 c0       	rjmp	.+170    	; 0xe72 <vfprintf+0x1e8>
     dc8:	20 c0       	rjmp	.+64     	; 0xe0a <vfprintf+0x180>
     dca:	f8 01       	movw	r30, r16
     dcc:	80 81       	ld	r24, Z
     dce:	89 83       	std	Y+1, r24	; 0x01
     dd0:	0e 5f       	subi	r16, 0xFE	; 254
     dd2:	1f 4f       	sbci	r17, 0xFF	; 255
     dd4:	88 24       	eor	r8, r8
     dd6:	83 94       	inc	r8
     dd8:	91 2c       	mov	r9, r1
     dda:	53 01       	movw	r10, r6
     ddc:	12 c0       	rjmp	.+36     	; 0xe02 <vfprintf+0x178>
     dde:	28 01       	movw	r4, r16
     de0:	f2 e0       	ldi	r31, 0x02	; 2
     de2:	4f 0e       	add	r4, r31
     de4:	51 1c       	adc	r5, r1
     de6:	f8 01       	movw	r30, r16
     de8:	a0 80       	ld	r10, Z
     dea:	b1 80       	ldd	r11, Z+1	; 0x01
     dec:	36 fe       	sbrs	r3, 6
     dee:	03 c0       	rjmp	.+6      	; 0xdf6 <vfprintf+0x16c>
     df0:	69 2d       	mov	r22, r9
     df2:	70 e0       	ldi	r23, 0x00	; 0
     df4:	02 c0       	rjmp	.+4      	; 0xdfa <vfprintf+0x170>
     df6:	6f ef       	ldi	r22, 0xFF	; 255
     df8:	7f ef       	ldi	r23, 0xFF	; 255
     dfa:	c5 01       	movw	r24, r10
     dfc:	90 d2       	rcall	.+1312   	; 0x131e <strnlen>
     dfe:	4c 01       	movw	r8, r24
     e00:	82 01       	movw	r16, r4
     e02:	f3 2d       	mov	r31, r3
     e04:	ff 77       	andi	r31, 0x7F	; 127
     e06:	3f 2e       	mov	r3, r31
     e08:	15 c0       	rjmp	.+42     	; 0xe34 <vfprintf+0x1aa>
     e0a:	28 01       	movw	r4, r16
     e0c:	22 e0       	ldi	r18, 0x02	; 2
     e0e:	42 0e       	add	r4, r18
     e10:	51 1c       	adc	r5, r1
     e12:	f8 01       	movw	r30, r16
     e14:	a0 80       	ld	r10, Z
     e16:	b1 80       	ldd	r11, Z+1	; 0x01
     e18:	36 fe       	sbrs	r3, 6
     e1a:	03 c0       	rjmp	.+6      	; 0xe22 <vfprintf+0x198>
     e1c:	69 2d       	mov	r22, r9
     e1e:	70 e0       	ldi	r23, 0x00	; 0
     e20:	02 c0       	rjmp	.+4      	; 0xe26 <vfprintf+0x19c>
     e22:	6f ef       	ldi	r22, 0xFF	; 255
     e24:	7f ef       	ldi	r23, 0xFF	; 255
     e26:	c5 01       	movw	r24, r10
     e28:	68 d2       	rcall	.+1232   	; 0x12fa <strnlen_P>
     e2a:	4c 01       	movw	r8, r24
     e2c:	f3 2d       	mov	r31, r3
     e2e:	f0 68       	ori	r31, 0x80	; 128
     e30:	3f 2e       	mov	r3, r31
     e32:	82 01       	movw	r16, r4
     e34:	33 fc       	sbrc	r3, 3
     e36:	19 c0       	rjmp	.+50     	; 0xe6a <vfprintf+0x1e0>
     e38:	82 2d       	mov	r24, r2
     e3a:	90 e0       	ldi	r25, 0x00	; 0
     e3c:	88 16       	cp	r8, r24
     e3e:	99 06       	cpc	r9, r25
     e40:	a0 f4       	brcc	.+40     	; 0xe6a <vfprintf+0x1e0>
     e42:	b6 01       	movw	r22, r12
     e44:	80 e2       	ldi	r24, 0x20	; 32
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	75 d2       	rcall	.+1258   	; 0x1334 <fputc>
     e4a:	2a 94       	dec	r2
     e4c:	f5 cf       	rjmp	.-22     	; 0xe38 <vfprintf+0x1ae>
     e4e:	f5 01       	movw	r30, r10
     e50:	37 fc       	sbrc	r3, 7
     e52:	85 91       	lpm	r24, Z+
     e54:	37 fe       	sbrs	r3, 7
     e56:	81 91       	ld	r24, Z+
     e58:	5f 01       	movw	r10, r30
     e5a:	b6 01       	movw	r22, r12
     e5c:	90 e0       	ldi	r25, 0x00	; 0
     e5e:	6a d2       	rcall	.+1236   	; 0x1334 <fputc>
     e60:	21 10       	cpse	r2, r1
     e62:	2a 94       	dec	r2
     e64:	21 e0       	ldi	r18, 0x01	; 1
     e66:	82 1a       	sub	r8, r18
     e68:	91 08       	sbc	r9, r1
     e6a:	81 14       	cp	r8, r1
     e6c:	91 04       	cpc	r9, r1
     e6e:	79 f7       	brne	.-34     	; 0xe4e <vfprintf+0x1c4>
     e70:	e1 c0       	rjmp	.+450    	; 0x1034 <vfprintf+0x3aa>
     e72:	84 36       	cpi	r24, 0x64	; 100
     e74:	11 f0       	breq	.+4      	; 0xe7a <vfprintf+0x1f0>
     e76:	89 36       	cpi	r24, 0x69	; 105
     e78:	39 f5       	brne	.+78     	; 0xec8 <vfprintf+0x23e>
     e7a:	f8 01       	movw	r30, r16
     e7c:	37 fe       	sbrs	r3, 7
     e7e:	07 c0       	rjmp	.+14     	; 0xe8e <vfprintf+0x204>
     e80:	60 81       	ld	r22, Z
     e82:	71 81       	ldd	r23, Z+1	; 0x01
     e84:	82 81       	ldd	r24, Z+2	; 0x02
     e86:	93 81       	ldd	r25, Z+3	; 0x03
     e88:	0c 5f       	subi	r16, 0xFC	; 252
     e8a:	1f 4f       	sbci	r17, 0xFF	; 255
     e8c:	08 c0       	rjmp	.+16     	; 0xe9e <vfprintf+0x214>
     e8e:	60 81       	ld	r22, Z
     e90:	71 81       	ldd	r23, Z+1	; 0x01
     e92:	07 2e       	mov	r0, r23
     e94:	00 0c       	add	r0, r0
     e96:	88 0b       	sbc	r24, r24
     e98:	99 0b       	sbc	r25, r25
     e9a:	0e 5f       	subi	r16, 0xFE	; 254
     e9c:	1f 4f       	sbci	r17, 0xFF	; 255
     e9e:	f3 2d       	mov	r31, r3
     ea0:	ff 76       	andi	r31, 0x6F	; 111
     ea2:	3f 2e       	mov	r3, r31
     ea4:	97 ff       	sbrs	r25, 7
     ea6:	09 c0       	rjmp	.+18     	; 0xeba <vfprintf+0x230>
     ea8:	90 95       	com	r25
     eaa:	80 95       	com	r24
     eac:	70 95       	com	r23
     eae:	61 95       	neg	r22
     eb0:	7f 4f       	sbci	r23, 0xFF	; 255
     eb2:	8f 4f       	sbci	r24, 0xFF	; 255
     eb4:	9f 4f       	sbci	r25, 0xFF	; 255
     eb6:	f0 68       	ori	r31, 0x80	; 128
     eb8:	3f 2e       	mov	r3, r31
     eba:	2a e0       	ldi	r18, 0x0A	; 10
     ebc:	30 e0       	ldi	r19, 0x00	; 0
     ebe:	a3 01       	movw	r20, r6
     ec0:	75 d2       	rcall	.+1258   	; 0x13ac <__ultoa_invert>
     ec2:	88 2e       	mov	r8, r24
     ec4:	86 18       	sub	r8, r6
     ec6:	44 c0       	rjmp	.+136    	; 0xf50 <vfprintf+0x2c6>
     ec8:	85 37       	cpi	r24, 0x75	; 117
     eca:	31 f4       	brne	.+12     	; 0xed8 <vfprintf+0x24e>
     ecc:	23 2d       	mov	r18, r3
     ece:	2f 7e       	andi	r18, 0xEF	; 239
     ed0:	b2 2e       	mov	r11, r18
     ed2:	2a e0       	ldi	r18, 0x0A	; 10
     ed4:	30 e0       	ldi	r19, 0x00	; 0
     ed6:	25 c0       	rjmp	.+74     	; 0xf22 <vfprintf+0x298>
     ed8:	93 2d       	mov	r25, r3
     eda:	99 7f       	andi	r25, 0xF9	; 249
     edc:	b9 2e       	mov	r11, r25
     ede:	8f 36       	cpi	r24, 0x6F	; 111
     ee0:	c1 f0       	breq	.+48     	; 0xf12 <vfprintf+0x288>
     ee2:	18 f4       	brcc	.+6      	; 0xeea <vfprintf+0x260>
     ee4:	88 35       	cpi	r24, 0x58	; 88
     ee6:	79 f0       	breq	.+30     	; 0xf06 <vfprintf+0x27c>
     ee8:	ae c0       	rjmp	.+348    	; 0x1046 <vfprintf+0x3bc>
     eea:	80 37       	cpi	r24, 0x70	; 112
     eec:	19 f0       	breq	.+6      	; 0xef4 <vfprintf+0x26a>
     eee:	88 37       	cpi	r24, 0x78	; 120
     ef0:	21 f0       	breq	.+8      	; 0xefa <vfprintf+0x270>
     ef2:	a9 c0       	rjmp	.+338    	; 0x1046 <vfprintf+0x3bc>
     ef4:	e9 2f       	mov	r30, r25
     ef6:	e0 61       	ori	r30, 0x10	; 16
     ef8:	be 2e       	mov	r11, r30
     efa:	b4 fe       	sbrs	r11, 4
     efc:	0d c0       	rjmp	.+26     	; 0xf18 <vfprintf+0x28e>
     efe:	fb 2d       	mov	r31, r11
     f00:	f4 60       	ori	r31, 0x04	; 4
     f02:	bf 2e       	mov	r11, r31
     f04:	09 c0       	rjmp	.+18     	; 0xf18 <vfprintf+0x28e>
     f06:	34 fe       	sbrs	r3, 4
     f08:	0a c0       	rjmp	.+20     	; 0xf1e <vfprintf+0x294>
     f0a:	29 2f       	mov	r18, r25
     f0c:	26 60       	ori	r18, 0x06	; 6
     f0e:	b2 2e       	mov	r11, r18
     f10:	06 c0       	rjmp	.+12     	; 0xf1e <vfprintf+0x294>
     f12:	28 e0       	ldi	r18, 0x08	; 8
     f14:	30 e0       	ldi	r19, 0x00	; 0
     f16:	05 c0       	rjmp	.+10     	; 0xf22 <vfprintf+0x298>
     f18:	20 e1       	ldi	r18, 0x10	; 16
     f1a:	30 e0       	ldi	r19, 0x00	; 0
     f1c:	02 c0       	rjmp	.+4      	; 0xf22 <vfprintf+0x298>
     f1e:	20 e1       	ldi	r18, 0x10	; 16
     f20:	32 e0       	ldi	r19, 0x02	; 2
     f22:	f8 01       	movw	r30, r16
     f24:	b7 fe       	sbrs	r11, 7
     f26:	07 c0       	rjmp	.+14     	; 0xf36 <vfprintf+0x2ac>
     f28:	60 81       	ld	r22, Z
     f2a:	71 81       	ldd	r23, Z+1	; 0x01
     f2c:	82 81       	ldd	r24, Z+2	; 0x02
     f2e:	93 81       	ldd	r25, Z+3	; 0x03
     f30:	0c 5f       	subi	r16, 0xFC	; 252
     f32:	1f 4f       	sbci	r17, 0xFF	; 255
     f34:	06 c0       	rjmp	.+12     	; 0xf42 <vfprintf+0x2b8>
     f36:	60 81       	ld	r22, Z
     f38:	71 81       	ldd	r23, Z+1	; 0x01
     f3a:	80 e0       	ldi	r24, 0x00	; 0
     f3c:	90 e0       	ldi	r25, 0x00	; 0
     f3e:	0e 5f       	subi	r16, 0xFE	; 254
     f40:	1f 4f       	sbci	r17, 0xFF	; 255
     f42:	a3 01       	movw	r20, r6
     f44:	33 d2       	rcall	.+1126   	; 0x13ac <__ultoa_invert>
     f46:	88 2e       	mov	r8, r24
     f48:	86 18       	sub	r8, r6
     f4a:	fb 2d       	mov	r31, r11
     f4c:	ff 77       	andi	r31, 0x7F	; 127
     f4e:	3f 2e       	mov	r3, r31
     f50:	36 fe       	sbrs	r3, 6
     f52:	0d c0       	rjmp	.+26     	; 0xf6e <vfprintf+0x2e4>
     f54:	23 2d       	mov	r18, r3
     f56:	2e 7f       	andi	r18, 0xFE	; 254
     f58:	a2 2e       	mov	r10, r18
     f5a:	89 14       	cp	r8, r9
     f5c:	58 f4       	brcc	.+22     	; 0xf74 <vfprintf+0x2ea>
     f5e:	34 fe       	sbrs	r3, 4
     f60:	0b c0       	rjmp	.+22     	; 0xf78 <vfprintf+0x2ee>
     f62:	32 fc       	sbrc	r3, 2
     f64:	09 c0       	rjmp	.+18     	; 0xf78 <vfprintf+0x2ee>
     f66:	83 2d       	mov	r24, r3
     f68:	8e 7e       	andi	r24, 0xEE	; 238
     f6a:	a8 2e       	mov	r10, r24
     f6c:	05 c0       	rjmp	.+10     	; 0xf78 <vfprintf+0x2ee>
     f6e:	b8 2c       	mov	r11, r8
     f70:	a3 2c       	mov	r10, r3
     f72:	03 c0       	rjmp	.+6      	; 0xf7a <vfprintf+0x2f0>
     f74:	b8 2c       	mov	r11, r8
     f76:	01 c0       	rjmp	.+2      	; 0xf7a <vfprintf+0x2f0>
     f78:	b9 2c       	mov	r11, r9
     f7a:	a4 fe       	sbrs	r10, 4
     f7c:	0f c0       	rjmp	.+30     	; 0xf9c <vfprintf+0x312>
     f7e:	fe 01       	movw	r30, r28
     f80:	e8 0d       	add	r30, r8
     f82:	f1 1d       	adc	r31, r1
     f84:	80 81       	ld	r24, Z
     f86:	80 33       	cpi	r24, 0x30	; 48
     f88:	21 f4       	brne	.+8      	; 0xf92 <vfprintf+0x308>
     f8a:	9a 2d       	mov	r25, r10
     f8c:	99 7e       	andi	r25, 0xE9	; 233
     f8e:	a9 2e       	mov	r10, r25
     f90:	09 c0       	rjmp	.+18     	; 0xfa4 <vfprintf+0x31a>
     f92:	a2 fe       	sbrs	r10, 2
     f94:	06 c0       	rjmp	.+12     	; 0xfa2 <vfprintf+0x318>
     f96:	b3 94       	inc	r11
     f98:	b3 94       	inc	r11
     f9a:	04 c0       	rjmp	.+8      	; 0xfa4 <vfprintf+0x31a>
     f9c:	8a 2d       	mov	r24, r10
     f9e:	86 78       	andi	r24, 0x86	; 134
     fa0:	09 f0       	breq	.+2      	; 0xfa4 <vfprintf+0x31a>
     fa2:	b3 94       	inc	r11
     fa4:	a3 fc       	sbrc	r10, 3
     fa6:	10 c0       	rjmp	.+32     	; 0xfc8 <vfprintf+0x33e>
     fa8:	a0 fe       	sbrs	r10, 0
     faa:	06 c0       	rjmp	.+12     	; 0xfb8 <vfprintf+0x32e>
     fac:	b2 14       	cp	r11, r2
     fae:	80 f4       	brcc	.+32     	; 0xfd0 <vfprintf+0x346>
     fb0:	28 0c       	add	r2, r8
     fb2:	92 2c       	mov	r9, r2
     fb4:	9b 18       	sub	r9, r11
     fb6:	0d c0       	rjmp	.+26     	; 0xfd2 <vfprintf+0x348>
     fb8:	b2 14       	cp	r11, r2
     fba:	58 f4       	brcc	.+22     	; 0xfd2 <vfprintf+0x348>
     fbc:	b6 01       	movw	r22, r12
     fbe:	80 e2       	ldi	r24, 0x20	; 32
     fc0:	90 e0       	ldi	r25, 0x00	; 0
     fc2:	b8 d1       	rcall	.+880    	; 0x1334 <fputc>
     fc4:	b3 94       	inc	r11
     fc6:	f8 cf       	rjmp	.-16     	; 0xfb8 <vfprintf+0x32e>
     fc8:	b2 14       	cp	r11, r2
     fca:	18 f4       	brcc	.+6      	; 0xfd2 <vfprintf+0x348>
     fcc:	2b 18       	sub	r2, r11
     fce:	02 c0       	rjmp	.+4      	; 0xfd4 <vfprintf+0x34a>
     fd0:	98 2c       	mov	r9, r8
     fd2:	21 2c       	mov	r2, r1
     fd4:	a4 fe       	sbrs	r10, 4
     fd6:	0f c0       	rjmp	.+30     	; 0xff6 <vfprintf+0x36c>
     fd8:	b6 01       	movw	r22, r12
     fda:	80 e3       	ldi	r24, 0x30	; 48
     fdc:	90 e0       	ldi	r25, 0x00	; 0
     fde:	aa d1       	rcall	.+852    	; 0x1334 <fputc>
     fe0:	a2 fe       	sbrs	r10, 2
     fe2:	16 c0       	rjmp	.+44     	; 0x1010 <vfprintf+0x386>
     fe4:	a1 fc       	sbrc	r10, 1
     fe6:	03 c0       	rjmp	.+6      	; 0xfee <vfprintf+0x364>
     fe8:	88 e7       	ldi	r24, 0x78	; 120
     fea:	90 e0       	ldi	r25, 0x00	; 0
     fec:	02 c0       	rjmp	.+4      	; 0xff2 <vfprintf+0x368>
     fee:	88 e5       	ldi	r24, 0x58	; 88
     ff0:	90 e0       	ldi	r25, 0x00	; 0
     ff2:	b6 01       	movw	r22, r12
     ff4:	0c c0       	rjmp	.+24     	; 0x100e <vfprintf+0x384>
     ff6:	8a 2d       	mov	r24, r10
     ff8:	86 78       	andi	r24, 0x86	; 134
     ffa:	51 f0       	breq	.+20     	; 0x1010 <vfprintf+0x386>
     ffc:	a1 fe       	sbrs	r10, 1
     ffe:	02 c0       	rjmp	.+4      	; 0x1004 <vfprintf+0x37a>
    1000:	8b e2       	ldi	r24, 0x2B	; 43
    1002:	01 c0       	rjmp	.+2      	; 0x1006 <vfprintf+0x37c>
    1004:	80 e2       	ldi	r24, 0x20	; 32
    1006:	a7 fc       	sbrc	r10, 7
    1008:	8d e2       	ldi	r24, 0x2D	; 45
    100a:	b6 01       	movw	r22, r12
    100c:	90 e0       	ldi	r25, 0x00	; 0
    100e:	92 d1       	rcall	.+804    	; 0x1334 <fputc>
    1010:	89 14       	cp	r8, r9
    1012:	30 f4       	brcc	.+12     	; 0x1020 <vfprintf+0x396>
    1014:	b6 01       	movw	r22, r12
    1016:	80 e3       	ldi	r24, 0x30	; 48
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	8c d1       	rcall	.+792    	; 0x1334 <fputc>
    101c:	9a 94       	dec	r9
    101e:	f8 cf       	rjmp	.-16     	; 0x1010 <vfprintf+0x386>
    1020:	8a 94       	dec	r8
    1022:	f3 01       	movw	r30, r6
    1024:	e8 0d       	add	r30, r8
    1026:	f1 1d       	adc	r31, r1
    1028:	80 81       	ld	r24, Z
    102a:	b6 01       	movw	r22, r12
    102c:	90 e0       	ldi	r25, 0x00	; 0
    102e:	82 d1       	rcall	.+772    	; 0x1334 <fputc>
    1030:	81 10       	cpse	r8, r1
    1032:	f6 cf       	rjmp	.-20     	; 0x1020 <vfprintf+0x396>
    1034:	22 20       	and	r2, r2
    1036:	09 f4       	brne	.+2      	; 0x103a <vfprintf+0x3b0>
    1038:	4e ce       	rjmp	.-868    	; 0xcd6 <vfprintf+0x4c>
    103a:	b6 01       	movw	r22, r12
    103c:	80 e2       	ldi	r24, 0x20	; 32
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	79 d1       	rcall	.+754    	; 0x1334 <fputc>
    1042:	2a 94       	dec	r2
    1044:	f7 cf       	rjmp	.-18     	; 0x1034 <vfprintf+0x3aa>
    1046:	f6 01       	movw	r30, r12
    1048:	86 81       	ldd	r24, Z+6	; 0x06
    104a:	97 81       	ldd	r25, Z+7	; 0x07
    104c:	02 c0       	rjmp	.+4      	; 0x1052 <vfprintf+0x3c8>
    104e:	8f ef       	ldi	r24, 0xFF	; 255
    1050:	9f ef       	ldi	r25, 0xFF	; 255
    1052:	2b 96       	adiw	r28, 0x0b	; 11
    1054:	0f b6       	in	r0, 0x3f	; 63
    1056:	f8 94       	cli
    1058:	de bf       	out	0x3e, r29	; 62
    105a:	0f be       	out	0x3f, r0	; 63
    105c:	cd bf       	out	0x3d, r28	; 61
    105e:	df 91       	pop	r29
    1060:	cf 91       	pop	r28
    1062:	1f 91       	pop	r17
    1064:	0f 91       	pop	r16
    1066:	ff 90       	pop	r15
    1068:	ef 90       	pop	r14
    106a:	df 90       	pop	r13
    106c:	cf 90       	pop	r12
    106e:	bf 90       	pop	r11
    1070:	af 90       	pop	r10
    1072:	9f 90       	pop	r9
    1074:	8f 90       	pop	r8
    1076:	7f 90       	pop	r7
    1078:	6f 90       	pop	r6
    107a:	5f 90       	pop	r5
    107c:	4f 90       	pop	r4
    107e:	3f 90       	pop	r3
    1080:	2f 90       	pop	r2
    1082:	08 95       	ret

00001084 <calloc>:
    1084:	0f 93       	push	r16
    1086:	1f 93       	push	r17
    1088:	cf 93       	push	r28
    108a:	df 93       	push	r29
    108c:	86 9f       	mul	r24, r22
    108e:	80 01       	movw	r16, r0
    1090:	87 9f       	mul	r24, r23
    1092:	10 0d       	add	r17, r0
    1094:	96 9f       	mul	r25, r22
    1096:	10 0d       	add	r17, r0
    1098:	11 24       	eor	r1, r1
    109a:	c8 01       	movw	r24, r16
    109c:	0d d0       	rcall	.+26     	; 0x10b8 <malloc>
    109e:	ec 01       	movw	r28, r24
    10a0:	00 97       	sbiw	r24, 0x00	; 0
    10a2:	21 f0       	breq	.+8      	; 0x10ac <calloc+0x28>
    10a4:	a8 01       	movw	r20, r16
    10a6:	60 e0       	ldi	r22, 0x00	; 0
    10a8:	70 e0       	ldi	r23, 0x00	; 0
    10aa:	32 d1       	rcall	.+612    	; 0x1310 <memset>
    10ac:	ce 01       	movw	r24, r28
    10ae:	df 91       	pop	r29
    10b0:	cf 91       	pop	r28
    10b2:	1f 91       	pop	r17
    10b4:	0f 91       	pop	r16
    10b6:	08 95       	ret

000010b8 <malloc>:
    10b8:	0f 93       	push	r16
    10ba:	1f 93       	push	r17
    10bc:	cf 93       	push	r28
    10be:	df 93       	push	r29
    10c0:	82 30       	cpi	r24, 0x02	; 2
    10c2:	91 05       	cpc	r25, r1
    10c4:	10 f4       	brcc	.+4      	; 0x10ca <malloc+0x12>
    10c6:	82 e0       	ldi	r24, 0x02	; 2
    10c8:	90 e0       	ldi	r25, 0x00	; 0
    10ca:	e0 91 52 03 	lds	r30, 0x0352	; 0x800352 <__flp>
    10ce:	f0 91 53 03 	lds	r31, 0x0353	; 0x800353 <__flp+0x1>
    10d2:	20 e0       	ldi	r18, 0x00	; 0
    10d4:	30 e0       	ldi	r19, 0x00	; 0
    10d6:	a0 e0       	ldi	r26, 0x00	; 0
    10d8:	b0 e0       	ldi	r27, 0x00	; 0
    10da:	30 97       	sbiw	r30, 0x00	; 0
    10dc:	19 f1       	breq	.+70     	; 0x1124 <malloc+0x6c>
    10de:	40 81       	ld	r20, Z
    10e0:	51 81       	ldd	r21, Z+1	; 0x01
    10e2:	02 81       	ldd	r16, Z+2	; 0x02
    10e4:	13 81       	ldd	r17, Z+3	; 0x03
    10e6:	48 17       	cp	r20, r24
    10e8:	59 07       	cpc	r21, r25
    10ea:	c8 f0       	brcs	.+50     	; 0x111e <malloc+0x66>
    10ec:	84 17       	cp	r24, r20
    10ee:	95 07       	cpc	r25, r21
    10f0:	69 f4       	brne	.+26     	; 0x110c <malloc+0x54>
    10f2:	10 97       	sbiw	r26, 0x00	; 0
    10f4:	31 f0       	breq	.+12     	; 0x1102 <malloc+0x4a>
    10f6:	12 96       	adiw	r26, 0x02	; 2
    10f8:	0c 93       	st	X, r16
    10fa:	12 97       	sbiw	r26, 0x02	; 2
    10fc:	13 96       	adiw	r26, 0x03	; 3
    10fe:	1c 93       	st	X, r17
    1100:	27 c0       	rjmp	.+78     	; 0x1150 <malloc+0x98>
    1102:	00 93 52 03 	sts	0x0352, r16	; 0x800352 <__flp>
    1106:	10 93 53 03 	sts	0x0353, r17	; 0x800353 <__flp+0x1>
    110a:	22 c0       	rjmp	.+68     	; 0x1150 <malloc+0x98>
    110c:	21 15       	cp	r18, r1
    110e:	31 05       	cpc	r19, r1
    1110:	19 f0       	breq	.+6      	; 0x1118 <malloc+0x60>
    1112:	42 17       	cp	r20, r18
    1114:	53 07       	cpc	r21, r19
    1116:	18 f4       	brcc	.+6      	; 0x111e <malloc+0x66>
    1118:	9a 01       	movw	r18, r20
    111a:	bd 01       	movw	r22, r26
    111c:	ef 01       	movw	r28, r30
    111e:	df 01       	movw	r26, r30
    1120:	f8 01       	movw	r30, r16
    1122:	db cf       	rjmp	.-74     	; 0x10da <malloc+0x22>
    1124:	21 15       	cp	r18, r1
    1126:	31 05       	cpc	r19, r1
    1128:	f9 f0       	breq	.+62     	; 0x1168 <malloc+0xb0>
    112a:	28 1b       	sub	r18, r24
    112c:	39 0b       	sbc	r19, r25
    112e:	24 30       	cpi	r18, 0x04	; 4
    1130:	31 05       	cpc	r19, r1
    1132:	80 f4       	brcc	.+32     	; 0x1154 <malloc+0x9c>
    1134:	8a 81       	ldd	r24, Y+2	; 0x02
    1136:	9b 81       	ldd	r25, Y+3	; 0x03
    1138:	61 15       	cp	r22, r1
    113a:	71 05       	cpc	r23, r1
    113c:	21 f0       	breq	.+8      	; 0x1146 <malloc+0x8e>
    113e:	fb 01       	movw	r30, r22
    1140:	93 83       	std	Z+3, r25	; 0x03
    1142:	82 83       	std	Z+2, r24	; 0x02
    1144:	04 c0       	rjmp	.+8      	; 0x114e <malloc+0x96>
    1146:	90 93 53 03 	sts	0x0353, r25	; 0x800353 <__flp+0x1>
    114a:	80 93 52 03 	sts	0x0352, r24	; 0x800352 <__flp>
    114e:	fe 01       	movw	r30, r28
    1150:	32 96       	adiw	r30, 0x02	; 2
    1152:	44 c0       	rjmp	.+136    	; 0x11dc <malloc+0x124>
    1154:	fe 01       	movw	r30, r28
    1156:	e2 0f       	add	r30, r18
    1158:	f3 1f       	adc	r31, r19
    115a:	81 93       	st	Z+, r24
    115c:	91 93       	st	Z+, r25
    115e:	22 50       	subi	r18, 0x02	; 2
    1160:	31 09       	sbc	r19, r1
    1162:	39 83       	std	Y+1, r19	; 0x01
    1164:	28 83       	st	Y, r18
    1166:	3a c0       	rjmp	.+116    	; 0x11dc <malloc+0x124>
    1168:	20 91 50 03 	lds	r18, 0x0350	; 0x800350 <__brkval>
    116c:	30 91 51 03 	lds	r19, 0x0351	; 0x800351 <__brkval+0x1>
    1170:	23 2b       	or	r18, r19
    1172:	41 f4       	brne	.+16     	; 0x1184 <malloc+0xcc>
    1174:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    1178:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    117c:	30 93 51 03 	sts	0x0351, r19	; 0x800351 <__brkval+0x1>
    1180:	20 93 50 03 	sts	0x0350, r18	; 0x800350 <__brkval>
    1184:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    1188:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    118c:	21 15       	cp	r18, r1
    118e:	31 05       	cpc	r19, r1
    1190:	41 f4       	brne	.+16     	; 0x11a2 <malloc+0xea>
    1192:	2d b7       	in	r18, 0x3d	; 61
    1194:	3e b7       	in	r19, 0x3e	; 62
    1196:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    119a:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    119e:	24 1b       	sub	r18, r20
    11a0:	35 0b       	sbc	r19, r21
    11a2:	e0 91 50 03 	lds	r30, 0x0350	; 0x800350 <__brkval>
    11a6:	f0 91 51 03 	lds	r31, 0x0351	; 0x800351 <__brkval+0x1>
    11aa:	e2 17       	cp	r30, r18
    11ac:	f3 07       	cpc	r31, r19
    11ae:	a0 f4       	brcc	.+40     	; 0x11d8 <malloc+0x120>
    11b0:	2e 1b       	sub	r18, r30
    11b2:	3f 0b       	sbc	r19, r31
    11b4:	28 17       	cp	r18, r24
    11b6:	39 07       	cpc	r19, r25
    11b8:	78 f0       	brcs	.+30     	; 0x11d8 <malloc+0x120>
    11ba:	ac 01       	movw	r20, r24
    11bc:	4e 5f       	subi	r20, 0xFE	; 254
    11be:	5f 4f       	sbci	r21, 0xFF	; 255
    11c0:	24 17       	cp	r18, r20
    11c2:	35 07       	cpc	r19, r21
    11c4:	48 f0       	brcs	.+18     	; 0x11d8 <malloc+0x120>
    11c6:	4e 0f       	add	r20, r30
    11c8:	5f 1f       	adc	r21, r31
    11ca:	50 93 51 03 	sts	0x0351, r21	; 0x800351 <__brkval+0x1>
    11ce:	40 93 50 03 	sts	0x0350, r20	; 0x800350 <__brkval>
    11d2:	81 93       	st	Z+, r24
    11d4:	91 93       	st	Z+, r25
    11d6:	02 c0       	rjmp	.+4      	; 0x11dc <malloc+0x124>
    11d8:	e0 e0       	ldi	r30, 0x00	; 0
    11da:	f0 e0       	ldi	r31, 0x00	; 0
    11dc:	cf 01       	movw	r24, r30
    11de:	df 91       	pop	r29
    11e0:	cf 91       	pop	r28
    11e2:	1f 91       	pop	r17
    11e4:	0f 91       	pop	r16
    11e6:	08 95       	ret

000011e8 <free>:
    11e8:	cf 93       	push	r28
    11ea:	df 93       	push	r29
    11ec:	00 97       	sbiw	r24, 0x00	; 0
    11ee:	09 f4       	brne	.+2      	; 0x11f2 <free+0xa>
    11f0:	81 c0       	rjmp	.+258    	; 0x12f4 <free+0x10c>
    11f2:	fc 01       	movw	r30, r24
    11f4:	32 97       	sbiw	r30, 0x02	; 2
    11f6:	13 82       	std	Z+3, r1	; 0x03
    11f8:	12 82       	std	Z+2, r1	; 0x02
    11fa:	a0 91 52 03 	lds	r26, 0x0352	; 0x800352 <__flp>
    11fe:	b0 91 53 03 	lds	r27, 0x0353	; 0x800353 <__flp+0x1>
    1202:	10 97       	sbiw	r26, 0x00	; 0
    1204:	81 f4       	brne	.+32     	; 0x1226 <free+0x3e>
    1206:	20 81       	ld	r18, Z
    1208:	31 81       	ldd	r19, Z+1	; 0x01
    120a:	82 0f       	add	r24, r18
    120c:	93 1f       	adc	r25, r19
    120e:	20 91 50 03 	lds	r18, 0x0350	; 0x800350 <__brkval>
    1212:	30 91 51 03 	lds	r19, 0x0351	; 0x800351 <__brkval+0x1>
    1216:	28 17       	cp	r18, r24
    1218:	39 07       	cpc	r19, r25
    121a:	51 f5       	brne	.+84     	; 0x1270 <free+0x88>
    121c:	f0 93 51 03 	sts	0x0351, r31	; 0x800351 <__brkval+0x1>
    1220:	e0 93 50 03 	sts	0x0350, r30	; 0x800350 <__brkval>
    1224:	67 c0       	rjmp	.+206    	; 0x12f4 <free+0x10c>
    1226:	ed 01       	movw	r28, r26
    1228:	20 e0       	ldi	r18, 0x00	; 0
    122a:	30 e0       	ldi	r19, 0x00	; 0
    122c:	ce 17       	cp	r28, r30
    122e:	df 07       	cpc	r29, r31
    1230:	40 f4       	brcc	.+16     	; 0x1242 <free+0x5a>
    1232:	4a 81       	ldd	r20, Y+2	; 0x02
    1234:	5b 81       	ldd	r21, Y+3	; 0x03
    1236:	9e 01       	movw	r18, r28
    1238:	41 15       	cp	r20, r1
    123a:	51 05       	cpc	r21, r1
    123c:	f1 f0       	breq	.+60     	; 0x127a <free+0x92>
    123e:	ea 01       	movw	r28, r20
    1240:	f5 cf       	rjmp	.-22     	; 0x122c <free+0x44>
    1242:	d3 83       	std	Z+3, r29	; 0x03
    1244:	c2 83       	std	Z+2, r28	; 0x02
    1246:	40 81       	ld	r20, Z
    1248:	51 81       	ldd	r21, Z+1	; 0x01
    124a:	84 0f       	add	r24, r20
    124c:	95 1f       	adc	r25, r21
    124e:	c8 17       	cp	r28, r24
    1250:	d9 07       	cpc	r29, r25
    1252:	59 f4       	brne	.+22     	; 0x126a <free+0x82>
    1254:	88 81       	ld	r24, Y
    1256:	99 81       	ldd	r25, Y+1	; 0x01
    1258:	84 0f       	add	r24, r20
    125a:	95 1f       	adc	r25, r21
    125c:	02 96       	adiw	r24, 0x02	; 2
    125e:	91 83       	std	Z+1, r25	; 0x01
    1260:	80 83       	st	Z, r24
    1262:	8a 81       	ldd	r24, Y+2	; 0x02
    1264:	9b 81       	ldd	r25, Y+3	; 0x03
    1266:	93 83       	std	Z+3, r25	; 0x03
    1268:	82 83       	std	Z+2, r24	; 0x02
    126a:	21 15       	cp	r18, r1
    126c:	31 05       	cpc	r19, r1
    126e:	29 f4       	brne	.+10     	; 0x127a <free+0x92>
    1270:	f0 93 53 03 	sts	0x0353, r31	; 0x800353 <__flp+0x1>
    1274:	e0 93 52 03 	sts	0x0352, r30	; 0x800352 <__flp>
    1278:	3d c0       	rjmp	.+122    	; 0x12f4 <free+0x10c>
    127a:	e9 01       	movw	r28, r18
    127c:	fb 83       	std	Y+3, r31	; 0x03
    127e:	ea 83       	std	Y+2, r30	; 0x02
    1280:	49 91       	ld	r20, Y+
    1282:	59 91       	ld	r21, Y+
    1284:	c4 0f       	add	r28, r20
    1286:	d5 1f       	adc	r29, r21
    1288:	ec 17       	cp	r30, r28
    128a:	fd 07       	cpc	r31, r29
    128c:	61 f4       	brne	.+24     	; 0x12a6 <free+0xbe>
    128e:	80 81       	ld	r24, Z
    1290:	91 81       	ldd	r25, Z+1	; 0x01
    1292:	84 0f       	add	r24, r20
    1294:	95 1f       	adc	r25, r21
    1296:	02 96       	adiw	r24, 0x02	; 2
    1298:	e9 01       	movw	r28, r18
    129a:	99 83       	std	Y+1, r25	; 0x01
    129c:	88 83       	st	Y, r24
    129e:	82 81       	ldd	r24, Z+2	; 0x02
    12a0:	93 81       	ldd	r25, Z+3	; 0x03
    12a2:	9b 83       	std	Y+3, r25	; 0x03
    12a4:	8a 83       	std	Y+2, r24	; 0x02
    12a6:	e0 e0       	ldi	r30, 0x00	; 0
    12a8:	f0 e0       	ldi	r31, 0x00	; 0
    12aa:	12 96       	adiw	r26, 0x02	; 2
    12ac:	8d 91       	ld	r24, X+
    12ae:	9c 91       	ld	r25, X
    12b0:	13 97       	sbiw	r26, 0x03	; 3
    12b2:	00 97       	sbiw	r24, 0x00	; 0
    12b4:	19 f0       	breq	.+6      	; 0x12bc <free+0xd4>
    12b6:	fd 01       	movw	r30, r26
    12b8:	dc 01       	movw	r26, r24
    12ba:	f7 cf       	rjmp	.-18     	; 0x12aa <free+0xc2>
    12bc:	8d 91       	ld	r24, X+
    12be:	9c 91       	ld	r25, X
    12c0:	11 97       	sbiw	r26, 0x01	; 1
    12c2:	9d 01       	movw	r18, r26
    12c4:	2e 5f       	subi	r18, 0xFE	; 254
    12c6:	3f 4f       	sbci	r19, 0xFF	; 255
    12c8:	82 0f       	add	r24, r18
    12ca:	93 1f       	adc	r25, r19
    12cc:	20 91 50 03 	lds	r18, 0x0350	; 0x800350 <__brkval>
    12d0:	30 91 51 03 	lds	r19, 0x0351	; 0x800351 <__brkval+0x1>
    12d4:	28 17       	cp	r18, r24
    12d6:	39 07       	cpc	r19, r25
    12d8:	69 f4       	brne	.+26     	; 0x12f4 <free+0x10c>
    12da:	30 97       	sbiw	r30, 0x00	; 0
    12dc:	29 f4       	brne	.+10     	; 0x12e8 <free+0x100>
    12de:	10 92 53 03 	sts	0x0353, r1	; 0x800353 <__flp+0x1>
    12e2:	10 92 52 03 	sts	0x0352, r1	; 0x800352 <__flp>
    12e6:	02 c0       	rjmp	.+4      	; 0x12ec <free+0x104>
    12e8:	13 82       	std	Z+3, r1	; 0x03
    12ea:	12 82       	std	Z+2, r1	; 0x02
    12ec:	b0 93 51 03 	sts	0x0351, r27	; 0x800351 <__brkval+0x1>
    12f0:	a0 93 50 03 	sts	0x0350, r26	; 0x800350 <__brkval>
    12f4:	df 91       	pop	r29
    12f6:	cf 91       	pop	r28
    12f8:	08 95       	ret

000012fa <strnlen_P>:
    12fa:	fc 01       	movw	r30, r24
    12fc:	05 90       	lpm	r0, Z+
    12fe:	61 50       	subi	r22, 0x01	; 1
    1300:	70 40       	sbci	r23, 0x00	; 0
    1302:	01 10       	cpse	r0, r1
    1304:	d8 f7       	brcc	.-10     	; 0x12fc <strnlen_P+0x2>
    1306:	80 95       	com	r24
    1308:	90 95       	com	r25
    130a:	8e 0f       	add	r24, r30
    130c:	9f 1f       	adc	r25, r31
    130e:	08 95       	ret

00001310 <memset>:
    1310:	dc 01       	movw	r26, r24
    1312:	01 c0       	rjmp	.+2      	; 0x1316 <memset+0x6>
    1314:	6d 93       	st	X+, r22
    1316:	41 50       	subi	r20, 0x01	; 1
    1318:	50 40       	sbci	r21, 0x00	; 0
    131a:	e0 f7       	brcc	.-8      	; 0x1314 <memset+0x4>
    131c:	08 95       	ret

0000131e <strnlen>:
    131e:	fc 01       	movw	r30, r24
    1320:	61 50       	subi	r22, 0x01	; 1
    1322:	70 40       	sbci	r23, 0x00	; 0
    1324:	01 90       	ld	r0, Z+
    1326:	01 10       	cpse	r0, r1
    1328:	d8 f7       	brcc	.-10     	; 0x1320 <strnlen+0x2>
    132a:	80 95       	com	r24
    132c:	90 95       	com	r25
    132e:	8e 0f       	add	r24, r30
    1330:	9f 1f       	adc	r25, r31
    1332:	08 95       	ret

00001334 <fputc>:
    1334:	0f 93       	push	r16
    1336:	1f 93       	push	r17
    1338:	cf 93       	push	r28
    133a:	df 93       	push	r29
    133c:	fb 01       	movw	r30, r22
    133e:	23 81       	ldd	r18, Z+3	; 0x03
    1340:	21 fd       	sbrc	r18, 1
    1342:	03 c0       	rjmp	.+6      	; 0x134a <fputc+0x16>
    1344:	8f ef       	ldi	r24, 0xFF	; 255
    1346:	9f ef       	ldi	r25, 0xFF	; 255
    1348:	2c c0       	rjmp	.+88     	; 0x13a2 <fputc+0x6e>
    134a:	22 ff       	sbrs	r18, 2
    134c:	16 c0       	rjmp	.+44     	; 0x137a <fputc+0x46>
    134e:	46 81       	ldd	r20, Z+6	; 0x06
    1350:	57 81       	ldd	r21, Z+7	; 0x07
    1352:	24 81       	ldd	r18, Z+4	; 0x04
    1354:	35 81       	ldd	r19, Z+5	; 0x05
    1356:	42 17       	cp	r20, r18
    1358:	53 07       	cpc	r21, r19
    135a:	44 f4       	brge	.+16     	; 0x136c <fputc+0x38>
    135c:	a0 81       	ld	r26, Z
    135e:	b1 81       	ldd	r27, Z+1	; 0x01
    1360:	9d 01       	movw	r18, r26
    1362:	2f 5f       	subi	r18, 0xFF	; 255
    1364:	3f 4f       	sbci	r19, 0xFF	; 255
    1366:	31 83       	std	Z+1, r19	; 0x01
    1368:	20 83       	st	Z, r18
    136a:	8c 93       	st	X, r24
    136c:	26 81       	ldd	r18, Z+6	; 0x06
    136e:	37 81       	ldd	r19, Z+7	; 0x07
    1370:	2f 5f       	subi	r18, 0xFF	; 255
    1372:	3f 4f       	sbci	r19, 0xFF	; 255
    1374:	37 83       	std	Z+7, r19	; 0x07
    1376:	26 83       	std	Z+6, r18	; 0x06
    1378:	14 c0       	rjmp	.+40     	; 0x13a2 <fputc+0x6e>
    137a:	8b 01       	movw	r16, r22
    137c:	ec 01       	movw	r28, r24
    137e:	fb 01       	movw	r30, r22
    1380:	00 84       	ldd	r0, Z+8	; 0x08
    1382:	f1 85       	ldd	r31, Z+9	; 0x09
    1384:	e0 2d       	mov	r30, r0
    1386:	19 95       	eicall
    1388:	89 2b       	or	r24, r25
    138a:	e1 f6       	brne	.-72     	; 0x1344 <fputc+0x10>
    138c:	d8 01       	movw	r26, r16
    138e:	16 96       	adiw	r26, 0x06	; 6
    1390:	8d 91       	ld	r24, X+
    1392:	9c 91       	ld	r25, X
    1394:	17 97       	sbiw	r26, 0x07	; 7
    1396:	01 96       	adiw	r24, 0x01	; 1
    1398:	17 96       	adiw	r26, 0x07	; 7
    139a:	9c 93       	st	X, r25
    139c:	8e 93       	st	-X, r24
    139e:	16 97       	sbiw	r26, 0x06	; 6
    13a0:	ce 01       	movw	r24, r28
    13a2:	df 91       	pop	r29
    13a4:	cf 91       	pop	r28
    13a6:	1f 91       	pop	r17
    13a8:	0f 91       	pop	r16
    13aa:	08 95       	ret

000013ac <__ultoa_invert>:
    13ac:	fa 01       	movw	r30, r20
    13ae:	aa 27       	eor	r26, r26
    13b0:	28 30       	cpi	r18, 0x08	; 8
    13b2:	51 f1       	breq	.+84     	; 0x1408 <__ultoa_invert+0x5c>
    13b4:	20 31       	cpi	r18, 0x10	; 16
    13b6:	81 f1       	breq	.+96     	; 0x1418 <__ultoa_invert+0x6c>
    13b8:	e8 94       	clt
    13ba:	6f 93       	push	r22
    13bc:	6e 7f       	andi	r22, 0xFE	; 254
    13be:	6e 5f       	subi	r22, 0xFE	; 254
    13c0:	7f 4f       	sbci	r23, 0xFF	; 255
    13c2:	8f 4f       	sbci	r24, 0xFF	; 255
    13c4:	9f 4f       	sbci	r25, 0xFF	; 255
    13c6:	af 4f       	sbci	r26, 0xFF	; 255
    13c8:	b1 e0       	ldi	r27, 0x01	; 1
    13ca:	3e d0       	rcall	.+124    	; 0x1448 <__ultoa_invert+0x9c>
    13cc:	b4 e0       	ldi	r27, 0x04	; 4
    13ce:	3c d0       	rcall	.+120    	; 0x1448 <__ultoa_invert+0x9c>
    13d0:	67 0f       	add	r22, r23
    13d2:	78 1f       	adc	r23, r24
    13d4:	89 1f       	adc	r24, r25
    13d6:	9a 1f       	adc	r25, r26
    13d8:	a1 1d       	adc	r26, r1
    13da:	68 0f       	add	r22, r24
    13dc:	79 1f       	adc	r23, r25
    13de:	8a 1f       	adc	r24, r26
    13e0:	91 1d       	adc	r25, r1
    13e2:	a1 1d       	adc	r26, r1
    13e4:	6a 0f       	add	r22, r26
    13e6:	71 1d       	adc	r23, r1
    13e8:	81 1d       	adc	r24, r1
    13ea:	91 1d       	adc	r25, r1
    13ec:	a1 1d       	adc	r26, r1
    13ee:	20 d0       	rcall	.+64     	; 0x1430 <__ultoa_invert+0x84>
    13f0:	09 f4       	brne	.+2      	; 0x13f4 <__ultoa_invert+0x48>
    13f2:	68 94       	set
    13f4:	3f 91       	pop	r19
    13f6:	2a e0       	ldi	r18, 0x0A	; 10
    13f8:	26 9f       	mul	r18, r22
    13fa:	11 24       	eor	r1, r1
    13fc:	30 19       	sub	r19, r0
    13fe:	30 5d       	subi	r19, 0xD0	; 208
    1400:	31 93       	st	Z+, r19
    1402:	de f6       	brtc	.-74     	; 0x13ba <__ultoa_invert+0xe>
    1404:	cf 01       	movw	r24, r30
    1406:	08 95       	ret
    1408:	46 2f       	mov	r20, r22
    140a:	47 70       	andi	r20, 0x07	; 7
    140c:	40 5d       	subi	r20, 0xD0	; 208
    140e:	41 93       	st	Z+, r20
    1410:	b3 e0       	ldi	r27, 0x03	; 3
    1412:	0f d0       	rcall	.+30     	; 0x1432 <__ultoa_invert+0x86>
    1414:	c9 f7       	brne	.-14     	; 0x1408 <__ultoa_invert+0x5c>
    1416:	f6 cf       	rjmp	.-20     	; 0x1404 <__ultoa_invert+0x58>
    1418:	46 2f       	mov	r20, r22
    141a:	4f 70       	andi	r20, 0x0F	; 15
    141c:	40 5d       	subi	r20, 0xD0	; 208
    141e:	4a 33       	cpi	r20, 0x3A	; 58
    1420:	18 f0       	brcs	.+6      	; 0x1428 <__ultoa_invert+0x7c>
    1422:	49 5d       	subi	r20, 0xD9	; 217
    1424:	31 fd       	sbrc	r19, 1
    1426:	40 52       	subi	r20, 0x20	; 32
    1428:	41 93       	st	Z+, r20
    142a:	02 d0       	rcall	.+4      	; 0x1430 <__ultoa_invert+0x84>
    142c:	a9 f7       	brne	.-22     	; 0x1418 <__ultoa_invert+0x6c>
    142e:	ea cf       	rjmp	.-44     	; 0x1404 <__ultoa_invert+0x58>
    1430:	b4 e0       	ldi	r27, 0x04	; 4
    1432:	a6 95       	lsr	r26
    1434:	97 95       	ror	r25
    1436:	87 95       	ror	r24
    1438:	77 95       	ror	r23
    143a:	67 95       	ror	r22
    143c:	ba 95       	dec	r27
    143e:	c9 f7       	brne	.-14     	; 0x1432 <__ultoa_invert+0x86>
    1440:	00 97       	sbiw	r24, 0x00	; 0
    1442:	61 05       	cpc	r22, r1
    1444:	71 05       	cpc	r23, r1
    1446:	08 95       	ret
    1448:	9b 01       	movw	r18, r22
    144a:	ac 01       	movw	r20, r24
    144c:	0a 2e       	mov	r0, r26
    144e:	06 94       	lsr	r0
    1450:	57 95       	ror	r21
    1452:	47 95       	ror	r20
    1454:	37 95       	ror	r19
    1456:	27 95       	ror	r18
    1458:	ba 95       	dec	r27
    145a:	c9 f7       	brne	.-14     	; 0x144e <__ultoa_invert+0xa2>
    145c:	62 0f       	add	r22, r18
    145e:	73 1f       	adc	r23, r19
    1460:	84 1f       	adc	r24, r20
    1462:	95 1f       	adc	r25, r21
    1464:	a0 1d       	adc	r26, r0
    1466:	08 95       	ret

00001468 <_exit>:
    1468:	f8 94       	cli

0000146a <__stop_program>:
    146a:	ff cf       	rjmp	.-2      	; 0x146a <__stop_program>
